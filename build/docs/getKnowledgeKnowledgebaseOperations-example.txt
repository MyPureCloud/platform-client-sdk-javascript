const platformClient = require("purecloud-platform-client-v2");

const client = platformClient.ApiClient.instance;
client.setEnvironment(platformClient.PureCloudRegionHosts.us_east_1); // Genesys Cloud region

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...) or loginPKCEGrant(...)
client.setAccessToken("your_access_token");

let apiInstance = new platformClient.KnowledgeApi();

let knowledgeBaseId = "knowledgeBaseId_example"; // String | Knowledge base ID
let opts = { 
  "before": "before_example", // String | The cursor that points to the start of the set of entities that has been returned.
  "after": "after_example", // String | The cursor that points to the end of the set of entities that has been returned.
  "pageSize": "pageSize_example", // String | Number of entities to return. Maximum of 200.
  "userId": ["userId_example"], // [String] | If specified, retrieves operations associated with user ids, comma separated values expected.
  "type": ["type_example"], // [String] | If specified, retrieves operations with specified operation type, comma separated values expected.
  "status": ["status_example"], // [String] | If specified, retrieves operations with specified operation status, comma separated values expected.
  "interval": "interval_example", // String | Retrieves the operations modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
  "sourceId": ["sourceId_example"] // [String] | If specified, retrieves operations associated with source ids, comma separated values expected.
};

// Get operations
apiInstance.getKnowledgeKnowledgebaseOperations(knowledgeBaseId, opts)
  .then((data) => {
    console.log(`getKnowledgeKnowledgebaseOperations success! data: ${JSON.stringify(data, null, 2)}`);
  })
  .catch((err) => {
    console.log("There was a failure calling getKnowledgeKnowledgebaseOperations");
    console.error(err);
  });
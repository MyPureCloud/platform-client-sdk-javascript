// Browser
const  = require('');
// Node
const  = require('');

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...)
.ApiClient.instance.setAccessToken(yourAccessToken);

let apiInstance = new .GetSpeechandtextanalyticsTopicsRequest();

let opts = { 
  'nextPage': "nextPage_example", // String | The key for listing the next page
  'pageSize': 20, // Number | The page size for the listing
  'state': "state_example", // String | Topic state. Defaults to latest
  'name': "name_example", // String | Case insensitive partial name to filter by
  'ids': ["ids_example"], // [String] | Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.
  'sortBy': "sortBy_example", // String | Sort results by. Defaults to name
  'sortOrder': "sortOrder_example" // String | Sort order. Defaults to asc
};


let callback = (error, data, response) => {
  if (error) {
    console.error(error);
  } else {
    console.log('API called successfully. Returned data: ' + data);
  }
};
apiInstance.getSpeechandtextanalyticsTopics(opts, callback);
// Browser
const  = require('');
// Node
const  = require('');

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...)
.ApiClient.instance.setAccessToken(yourAccessToken);

let apiInstance = new .GetTelephonyProvidersEdgesPhonesRequest();

let opts = { 
  'pageNumber': 1, // Number | Page number
  'pageSize': 25, // Number | Page size
  'sortBy': "name", // String | The field to sort by
  'sortOrder': "ASC", // String | Sort order
  'siteId': "siteId_example", // String | Filter by site.id
  'webRtcUserId': "webRtcUserId_example", // String | Filter by webRtcUser.id
  'phoneBaseSettingsId': "phoneBaseSettingsId_example", // String | Filter by phoneBaseSettings.id
  'linesLoggedInUserId': "linesLoggedInUserId_example", // String | Filter by lines.loggedInUser.id
  'linesDefaultForUserId': "linesDefaultForUserId_example", // String | Filter by lines.defaultForUser.id
  'phoneHardwareId': "phoneHardwareId_example", // String | Filter by phone_hardwareId
  'linesId': "linesId_example", // String | Filter by lines.id
  'linesName': "linesName_example", // String | Filter by lines.name
  'name': "name_example", // String | Name of the Phone to filter by
  'statusOperationalStatus': "statusOperationalStatus_example", // String | The primary status to filter by
  'secondaryStatusOperationalStatus': "secondaryStatusOperationalStatus_example", // String | The secondary status to filter by
  'expand': ["expand_example"], // [String] | Fields to expand in the response, comma-separated
  'fields': ["fields_example"] // [String] | Fields and properties to get, comma-separated
};


let callback = (error, data, response) => {
  if (error) {
    console.error(error);
  } else {
    console.log('API called successfully. Returned data: ' + data);
  }
};
apiInstance.getTelephonyProvidersEdgesPhones(opts, callback);
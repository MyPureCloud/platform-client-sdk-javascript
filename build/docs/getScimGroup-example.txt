// Browser
const  = require('');
// Node
const  = require('');

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...)
.ApiClient.instance.setAccessToken(yourAccessToken);

let apiInstance = new .GetScimGroupRequest();

let groupId = "groupId_example"; // String | The ID of a group. Returned with GET /api/v2/scim/groups.
let opts = { 
  'attributes': ["attributes_example"], // [String] | Indicates which attributes to include. Returns these attributes and the \"id\", \"active\", and \"meta\" attributes. Use \"attributes\" to avoid expensive secondary calls for the default attributes.
  'excludedAttributes': ["excludedAttributes_example"], // [String] | Indicates which attributes to exclude. Returns the default attributes minus \"excludedAttributes\". Always returns \"id\", \"active\", and \"meta\" attributes. Use \"excludedAttributes\" to avoid expensive secondary calls for the default attributes.
  'ifNoneMatch': "ifNoneMatch_example" // String | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \"42\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
};


let callback = (error, data, response) => {
  if (error) {
    console.error(error);
  } else {
    console.log('API called successfully. Returned data: ' + data);
  }
};
apiInstance.getScimGroup(groupId, opts, callback);
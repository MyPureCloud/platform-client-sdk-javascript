const platformClient = require("purecloud-platform-client-v2");

const client = platformClient.ApiClient.instance;
client.setEnvironment(platformClient.PureCloudRegionHosts.us_east_1); // Genesys Cloud region

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...)
client.setAccessToken("your_access_token");

let apiInstance = new platformClient.LearningApi();

let opts = { 
  "moduleId": "moduleId_example", // String | Specifies the ID of the learning module. Fetch assignments for learning module ID
  "interval": "interval_example", // String | Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  "completionInterval": "completionInterval_example", // String | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  "overdue": "Any", // String | Specifies if only the non-overdue (overdue is False) or overdue (overdue is True) assignments are returned. If overdue is Any or if the overdue parameter is not supplied, all assignments are returned
  "pageSize": 25, // Number | Page size
  "pageNumber": 1, // Number | Page number
  "pass": "Any", // String | Specifies if only the failed (pass is False) or passed (pass is True) assignments (completed with assessment)are returned. If pass is Any or if the pass parameter is not supplied, all assignments are returned
  "minPercentageScore": 3.4, // Number | The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
  "maxPercentageScore": 3.4, // Number | The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
  "sortOrder": "Desc", // String | Specifies result set sort order; if not specified, default sort order is descending (Desc)
  "sortBy": "sortBy_example", // String | Specifies which field to sort the results by, default sort is by recommendedCompletionDate
  "userId": ["userId_example"], // [String] | Specifies the list of user IDs to be queried, up to 100 user IDs.
  "types": ["types_example"], // [String] | Specifies the module types to filter by
  "states": ["states_example"], // [String] | Specifies the assignment states to filter by
  "expand": ["expand_example"] // [String] | Specifies the expand option for returning additional information
};

// List of Learning module Assignments
apiInstance.getLearningAssignments(opts)
  .then((data) => {
    console.log(`getLearningAssignments success! data: ${JSON.stringify(data, null, 2)}`);
  })
  .catch((err) => {
    console.log("There was a failure calling getLearningAssignments");
    console.error(err);
  });
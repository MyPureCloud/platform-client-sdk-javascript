{
    "DELETE /api/v2/integrations/{integrationId}": {
        "operationId": "deleteintegration",
        "functionName": "deleteIntegration",
        "signature": "deleteIntegration(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "Integration"
    },
    "DELETE /api/v2/integrations/actions/{actionId}": {
        "operationId": "deleteintegrationsaction",
        "functionName": "deleteIntegrationsAction",
        "signature": "deleteIntegrationsAction(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "deleteintegrationsactiondraft",
        "functionName": "deleteIntegrationsActionDraft",
        "signature": "deleteIntegrationsActionDraft(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "deleteintegrationscredential",
        "functionName": "deleteIntegrationsCredential",
        "signature": "deleteIntegrationsCredential(credentialId)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/integrations/{integrationId}": {
        "operationId": "getintegration",
        "functionName": "getIntegration",
        "signature": "getIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "GET /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "getintegrationconfigcurrent",
        "functionName": "getIntegrationConfigCurrent",
        "signature": "getIntegrationConfigCurrent(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "IntegrationConfiguration"
    },
    "GET /api/v2/integrations": {
        "operationId": "getintegrations",
        "functionName": "getIntegrations",
        "signature": "getIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "IntegrationEntityListing"
    },
    "GET /api/v2/integrations/actions/{actionId}": {
        "operationId": "getintegrationsaction",
        "functionName": "getIntegrationsAction",
        "signature": "getIntegrationsAction(actionId, expand, includeConfig)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "String",
                "required": "false"
            },
            {
                "name": "includeConfig",
                "type": "Boolean",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "getintegrationsactiondraft",
        "functionName": "getIntegrationsActionDraft",
        "signature": "getIntegrationsActionDraft(actionId, expand, includeConfig)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "String",
                "required": "false"
            },
            {
                "name": "includeConfig",
                "type": "Boolean",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/schemas/{fileName}": {
        "operationId": "getintegrationsactiondraftschema",
        "functionName": "getIntegrationsActionDraftSchema",
        "signature": "getIntegrationsActionDraftSchema(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/templates/{fileName}": {
        "operationId": "getintegrationsactiondrafttemplate",
        "functionName": "getIntegrationsActionDraftTemplate",
        "signature": "getIntegrationsActionDraftTemplate(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "'String'"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/validation": {
        "operationId": "getintegrationsactiondraftvalidation",
        "functionName": "getIntegrationsActionDraftValidation",
        "signature": "getIntegrationsActionDraftValidation(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "DraftValidationResult"
    },
    "GET /api/v2/integrations/actions/{actionId}/schemas/{fileName}": {
        "operationId": "getintegrationsactionschema",
        "functionName": "getIntegrationsActionSchema",
        "signature": "getIntegrationsActionSchema(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/templates/{fileName}": {
        "operationId": "getintegrationsactiontemplate",
        "functionName": "getIntegrationsActionTemplate",
        "signature": "getIntegrationsActionTemplate(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "'String'"
    },
    "GET /api/v2/integrations/actions": {
        "operationId": "getintegrationsactions",
        "functionName": "getIntegrationsActions",
        "signature": "getIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "String",
                "required": "false"
            },
            {
                "name": "category",
                "type": "String",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "String",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "String",
                "required": "false"
            },
            {
                "name": "includeAuthActions",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ActionEntityListing"
    },
    "GET /api/v2/integrations/actions/categories": {
        "operationId": "getintegrationsactionscategories",
        "functionName": "getIntegrationsActionsCategories",
        "signature": "getIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "String",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "CategoryEntityListing"
    },
    "GET /api/v2/integrations/actions/drafts": {
        "operationId": "getintegrationsactionsdrafts",
        "functionName": "getIntegrationsActionsDrafts",
        "signature": "getIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "String",
                "required": "false"
            },
            {
                "name": "category",
                "type": "String",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "String",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "String",
                "required": "false"
            },
            {
                "name": "includeAuthActions",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ActionEntityListing"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}": {
        "operationId": "getintegrationsbotconnectorintegrationidbot",
        "functionName": "getIntegrationsBotconnectorIntegrationIdBot",
        "signature": "getIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "version",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "BotConnectorBot"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}/versions": {
        "operationId": "getintegrationsbotconnectorintegrationidbotversions",
        "functionName": "getIntegrationsBotconnectorIntegrationIdBotVersions",
        "signature": "getIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            }
        ],
        "return": "BotConnectorBotVersionSummaryEntityListing"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "getintegrationsbotconnectorintegrationidbots",
        "functionName": "getIntegrationsBotconnectorIntegrationIdBots",
        "signature": "getIntegrationsBotconnectorIntegrationIdBots(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "BotList"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/summaries": {
        "operationId": "getintegrationsbotconnectorintegrationidbotssummaries",
        "functionName": "getIntegrationsBotconnectorIntegrationIdBotsSummaries",
        "signature": "getIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            }
        ],
        "return": "BotConnectorBotSummaryEntityListing"
    },
    "GET /api/v2/integrations/clientapps": {
        "operationId": "getintegrationsclientapps",
        "functionName": "getIntegrationsClientapps",
        "signature": "getIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ClientAppEntityListing"
    },
    "GET /api/v2/integrations/clientapps/unifiedcommunications": {
        "operationId": "getintegrationsclientappsunifiedcommunications",
        "functionName": "getIntegrationsClientappsUnifiedcommunications",
        "signature": "getIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "UCIntegrationListing"
    },
    "GET /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "getintegrationscredential",
        "functionName": "getIntegrationsCredential",
        "signature": "getIntegrationsCredential(credentialId)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "Credential"
    },
    "GET /api/v2/integrations/credentials": {
        "operationId": "getintegrationscredentials",
        "functionName": "getIntegrationsCredentials",
        "signature": "getIntegrationsCredentials(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            }
        ],
        "return": "CredentialInfoListing"
    },
    "GET /api/v2/integrations/credentials/types": {
        "operationId": "getintegrationscredentialstypes",
        "functionName": "getIntegrationsCredentialsTypes",
        "signature": "getIntegrationsCredentialsTypes()",
        
        "return": "CredentialTypeListing"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents/{agentId}": {
        "operationId": "getintegrationsspeechdialogflowagent",
        "functionName": "getIntegrationsSpeechDialogflowAgent",
        "signature": "getIntegrationsSpeechDialogflowAgent(agentId)",
        "parameters": [
            {
                "name": "agentId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "DialogflowAgent"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents": {
        "operationId": "getintegrationsspeechdialogflowagents",
        "functionName": "getIntegrationsSpeechDialogflowAgents",
        "signature": "getIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "DialogflowAgentSummaryEntityListing"
    },
    "GET /api/v2/integrations/speech/lex/bot/alias/{aliasId}": {
        "operationId": "getintegrationsspeechlexbotalias",
        "functionName": "getIntegrationsSpeechLexBotAlias",
        "signature": "getIntegrationsSpeechLexBotAlias(aliasId)",
        "parameters": [
            {
                "name": "aliasId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "LexBotAlias"
    },
    "GET /api/v2/integrations/speech/lex/bot/{botId}/aliases": {
        "operationId": "getintegrationsspeechlexbotbotidaliases",
        "functionName": "getIntegrationsSpeechLexBotBotIdAliases",
        "signature": "getIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name)",
        "parameters": [
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "status",
                "type": "String",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "LexBotAliasEntityListing"
    },
    "GET /api/v2/integrations/speech/lex/bots": {
        "operationId": "getintegrationsspeechlexbots",
        "functionName": "getIntegrationsSpeechLexBots",
        "signature": "getIntegrationsSpeechLexBots(pageNumber, pageSize, name)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "LexBotEntityListing"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbot",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBot",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBot(nuanceIntegrationId, botId, expand, targetChannel)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "targetChannel",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "NuanceBot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjob",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob(nuanceIntegrationId, botId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "AsyncJob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}/results": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjobresults",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults(nuanceIntegrationId, botId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "NuanceBot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbots",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBots",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBots(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "onlyRegisteredBots",
                "type": "Boolean",
                "required": "false"
            }
        ],
        "return": "NuanceBotEntityListing"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjob",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob(nuanceIntegrationId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "AsyncJob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}/results": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjobresults",
        "functionName": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults",
        "signature": "getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults(nuanceIntegrationId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "NuanceBotEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}": {
        "operationId": "getintegrationsspeechttsengine",
        "functionName": "getIntegrationsSpeechTtsEngine",
        "signature": "getIntegrationsSpeechTtsEngine(engineId, includeVoices)",
        "parameters": [
            {
                "name": "engineId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "includeVoices",
                "type": "Boolean",
                "required": "false"
            }
        ],
        "return": "TtsEngineEntity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices/{voiceId}": {
        "operationId": "getintegrationsspeechttsenginevoice",
        "functionName": "getIntegrationsSpeechTtsEngineVoice",
        "signature": "getIntegrationsSpeechTtsEngineVoice(engineId, voiceId)",
        "parameters": [
            {
                "name": "engineId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "voiceId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "TtsVoiceEntity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices": {
        "operationId": "getintegrationsspeechttsenginevoices",
        "functionName": "getIntegrationsSpeechTtsEngineVoices",
        "signature": "getIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "engineId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            }
        ],
        "return": "TtsVoiceEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/engines": {
        "operationId": "getintegrationsspeechttsengines",
        "functionName": "getIntegrationsSpeechTtsEngines",
        "signature": "getIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "includeVoices",
                "type": "Boolean",
                "required": "false"
            },
            {
                "name": "name",
                "type": "String",
                "required": "false"
            },
            {
                "name": "language",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "TtsEngineEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/settings": {
        "operationId": "getintegrationsspeechttssettings",
        "functionName": "getIntegrationsSpeechTtsSettings",
        "signature": "getIntegrationsSpeechTtsSettings()",
        
        "return": "TtsSettings"
    },
    "GET /api/v2/integrations/types/{typeId}": {
        "operationId": "getintegrationstype",
        "functionName": "getIntegrationsType",
        "signature": "getIntegrationsType(typeId)",
        "parameters": [
            {
                "name": "typeId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "IntegrationType"
    },
    "GET /api/v2/integrations/types/{typeId}/configschemas/{configType}": {
        "operationId": "getintegrationstypeconfigschema",
        "functionName": "getIntegrationsTypeConfigschema",
        "signature": "getIntegrationsTypeConfigschema(typeId, configType)",
        "parameters": [
            {
                "name": "typeId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "configType",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/types": {
        "operationId": "getintegrationstypes",
        "functionName": "getIntegrationsTypes",
        "signature": "getIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "IntegrationTypeEntityListing"
    },
    "GET /api/v2/integrations/userapps": {
        "operationId": "getintegrationsuserapps",
        "functionName": "getIntegrationsUserapps",
        "signature": "getIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "appHost",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "UserAppEntityListing"
    },
    "PATCH /api/v2/integrations/{integrationId}": {
        "operationId": "patchintegration",
        "functionName": "patchIntegration",
        "signature": "patchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "String",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "String",
                "required": "false"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "PATCH /api/v2/integrations/actions/{actionId}": {
        "operationId": "patchintegrationsaction",
        "functionName": "patchIntegrationsAction",
        "signature": "patchIntegrationsAction(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "PATCH /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "patchintegrationsactiondraft",
        "functionName": "patchIntegrationsActionDraft",
        "signature": "patchIntegrationsActionDraft(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations": {
        "operationId": "postintegrations",
        "functionName": "postIntegrations",
        "signature": "postIntegrations(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Object",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "postintegrationsactiondraft",
        "functionName": "postIntegrationsActionDraft",
        "signature": "postIntegrationsActionDraft(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/publish": {
        "operationId": "postintegrationsactiondraftpublish",
        "functionName": "postIntegrationsActionDraftPublish",
        "signature": "postIntegrationsActionDraftPublish(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/test": {
        "operationId": "postintegrationsactiondrafttest",
        "functionName": "postIntegrationsActionDraftTest",
        "signature": "postIntegrationsActionDraftTest(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "{String: Object}",
                "required": "true"
            }
        ],
        "return": "TestExecutionResult"
    },
    "POST /api/v2/integrations/actions/{actionId}/execute": {
        "operationId": "postintegrationsactionexecute",
        "functionName": "postIntegrationsActionExecute",
        "signature": "postIntegrationsActionExecute(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "{String: Object}",
                "required": "true"
            }
        ],
        "return": "Object"
    },
    "POST /api/v2/integrations/actions/{actionId}/test": {
        "operationId": "postintegrationsactiontest",
        "functionName": "postIntegrationsActionTest",
        "signature": "postIntegrationsActionTest(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "{String: Object}",
                "required": "true"
            }
        ],
        "return": "TestExecutionResult"
    },
    "POST /api/v2/integrations/actions": {
        "operationId": "postintegrationsactions",
        "functionName": "postIntegrationsActions",
        "signature": "postIntegrationsActions(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/drafts": {
        "operationId": "postintegrationsactionsdrafts",
        "functionName": "postIntegrationsActionsDrafts",
        "signature": "postIntegrationsActionsDrafts(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/credentials": {
        "operationId": "postintegrationscredentials",
        "functionName": "postIntegrationsCredentials",
        "signature": "postIntegrationsCredentials(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Object",
                "required": "false"
            }
        ],
        "return": "CredentialInfo"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotjobs",
        "functionName": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs",
        "signature": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs(nuanceIntegrationId, botId, expand, body)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "[String]",
                "required": "false"
            },
            {
                "name": "body",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "AsyncJob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotsjobs",
        "functionName": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs",
        "signature": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Number",
                "required": "false"
            },
            {
                "name": "onlyRegisteredBots",
                "type": "Boolean",
                "required": "false"
            }
        ],
        "return": "AsyncJob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/validate": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotslaunchvalidate",
        "functionName": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate",
        "signature": "postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate(nuanceIntegrationId, settings)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "Object",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "putintegrationconfigcurrent",
        "functionName": "putIntegrationConfigCurrent",
        "signature": "putIntegrationConfigCurrent(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "false"
            }
        ],
        "return": "IntegrationConfiguration"
    },
    "PUT /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "putintegrationsbotconnectorintegrationidbots",
        "functionName": "putIntegrationsBotconnectorIntegrationIdBots",
        "signature": "putIntegrationsBotconnectorIntegrationIdBots(integrationId, botList)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "botList",
                "type": "Object",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "putintegrationscredential",
        "functionName": "putIntegrationsCredential",
        "signature": "putIntegrationsCredential(credentialId, body)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "false"
            }
        ],
        "return": "CredentialInfo"
    },
    "PUT /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/settings": {
        "operationId": "putintegrationsspeechnuancenuanceintegrationidbotslaunchsettings",
        "functionName": "putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings",
        "signature": "putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings(nuanceIntegrationId, settings)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "Object",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/speech/tts/settings": {
        "operationId": "putintegrationsspeechttssettings",
        "functionName": "putIntegrationsSpeechTtsSettings",
        "signature": "putIntegrationsSpeechTtsSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "TtsSettings"
    },
    "PUT /api/v2/integrations/unifiedcommunications/{ucIntegrationId}/thirdpartypresences": {
        "operationId": "putintegrationsunifiedcommunicationthirdpartypresences",
        "functionName": "putIntegrationsUnifiedcommunicationThirdpartypresences",
        "signature": "putIntegrationsUnifiedcommunicationThirdpartypresences(ucIntegrationId, body)",
        "parameters": [
            {
                "name": "ucIntegrationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Object",
                "required": "true"
            }
        ],
        "return": "'String'"
    }
    
}
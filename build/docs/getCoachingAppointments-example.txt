const platformClient = require("purecloud-platform-client-v2");

const client = platformClient.ApiClient.instance;
client.setEnvironment(platformClient.PureCloudRegionHosts.us_east_1); // Genesys Cloud region

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...) or loginPKCEGrant(...)
client.setAccessToken("your_access_token");

let apiInstance = new platformClient.CoachingApi();

let userIds = ["userIds_example"]; // [String] | The user IDs for which to retrieve appointments
let opts = { 
  "interval": "interval_example", // String | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  "pageNumber": 1, // Number | Page number
  "pageSize": 25, // Number | Page size
  "statuses": ["statuses_example"], // [String] | Appointment Statuses to filter by
  "facilitatorIds": ["facilitatorIds_example"], // [String] | The facilitator IDs for which to retrieve appointments
  "sortOrder": "sortOrder_example", // String | Sort (by due date) either Asc or Desc
  "relationships": ["relationships_example"], // [String] | Relationships to filter by
  "completionInterval": "completionInterval_example", // String | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  "overdue": "overdue_example", // String | Overdue status to filter by
  "intervalCondition": "intervalCondition_example" // String | Filter condition for interval
};

// Get appointments for users and optional date range
apiInstance.getCoachingAppointments(userIds, opts)
  .then((data) => {
    console.log(`getCoachingAppointments success! data: ${JSON.stringify(data, null, 2)}`);
  })
  .catch((err) => {
    console.log("There was a failure calling getCoachingAppointments");
    console.error(err);
  });
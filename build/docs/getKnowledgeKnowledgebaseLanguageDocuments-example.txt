// Browser
const  = require('');
// Node
const  = require('');

// Manually set auth token or use loginImplicitGrant(...) or loginClientCredentialsGrant(...)
.ApiClient.instance.setAccessToken(yourAccessToken);

let apiInstance = new .GetKnowledgeKnowledgebaseLanguageDocumentsRequest();

let knowledgeBaseId = "knowledgeBaseId_example"; // String | Knowledge base ID
let languageCode = "en-US"; // String | Language code, format: iso2-LOCALE
let opts = { 
  'before': "before_example", // String | The cursor that points to the start of the set of entities that has been returned.
  'after': "after_example", // String | The cursor that points to the end of the set of entities that has been returned.
  'limit': "limit_example", // String | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize, use CursorQueryParameters instead.
  'pageSize': "pageSize_example", // String | Number of entities to return. Maximum of 200.
  'categories': "categories_example", // String | Filter by categories ids, comma separated values expected.
  'title': "title_example", // String | Filter by document title.
  'sortBy': "sortBy_example", // String | Sort by.
  'sortOrder': "sortOrder_example", // String | Sort Order.
  'documentIds': ["documentIds_example"] // [String] | Comma-separated list of document identifiers to fetch by.
};


let callback = (error, data, response) => {
  if (error) {
    console.error(error);
  } else {
    console.log('API called successfully. Returned data: ' + data);
  }
};
apiInstance.getKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, opts, callback);
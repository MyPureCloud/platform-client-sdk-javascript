'use strict';function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _toArray(arr){return _arrayWithHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableRest();}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter);}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1;}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r;}finally{try{if(!f&&null!=t["return"]&&(u=t["return"](),Object(u)!==u))return;}finally{if(o)throw n;}}return a;}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==_typeof(i)?i:String(i);}function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return("string"===r?String:Number)(t);}function _typeof(o){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o;}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o;},_typeof(o);}var qs=require('qs');function _interopDefaultLegacy(e){return e&&_typeof(e)==='object'&&'default'in e?e:{'default':e};}var qs__default=/*#__PURE__*/_interopDefaultLegacy(qs);var PureCloudRegionHosts={us_east_1:'mypurecloud.com',eu_west_1:'mypurecloud.ie',ap_southeast_2:'mypurecloud.com.au',ap_northeast_1:'mypurecloud.jp',eu_central_1:'mypurecloud.de',us_west_2:'usw2.pure.cloud',ca_central_1:'cac1.pure.cloud',ap_northeast_2:'apne2.pure.cloud',eu_west_2:'euw2.pure.cloud',ap_south_1:'aps1.pure.cloud',us_east_2:'use2.us-gov-pure.cloud',sa_east_1:'sae1.pure.cloud'};var global$1=typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var inited=false;function init(){inited=true;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}revLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;}function toByteArray(b64){if(!inited){init();}var i,j,l,tmp,placeHolders,arr;var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// the number of equal signs (place holders)
// if there are two placeholders, than the two characters before it
// represent one byte
// if there is only one, then the three characters before it represent 2 bytes
// this is just a cheap hack to not do indexOf twice
placeHolders=b64[len-2]==='='?2:b64[len-1]==='='?1:0;// base64 is 4/3 + up to two characters of the original data
arr=new Arr(len*3/4-placeHolders);// if there are placeholders, only get up to the last complete 4 chars
l=placeHolders>0?len-4:len;var L=0;for(i=0,j=0;i<l;i+=4,j+=3){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&0xFF;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&0xFF;}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2];output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){if(!inited){init();}var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes
var output='';var parts=[];var maxChunkLength=16383;// must be multiple of 3
// go through the array every three bytes, we'll deal with trailing stuff later
for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes
if(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&0x3F];output+='==';}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&0x3F];output+=lookup[tmp<<2&0x3F];output+='=';}parts.push(output);return parts.join('');}function read(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);}function write(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;}var toString$1={}.toString;var isArray$1=Array.isArray||function(arr){return toString$1.call(arr)=='[object Array]';};var INSPECT_MAX_BYTES=50;/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */Buffer.TYPED_ARRAY_SUPPORT=global$1.TYPED_ARRAY_SUPPORT!==undefined?global$1.TYPED_ARRAY_SUPPORT:true;/*
 * Export kMaxLength after typed array support is determined.
 */kMaxLength();function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?0x7fffffff:0x3fffffff;}function createBuffer(that,length){if(kMaxLength()<length){throw new RangeError('Invalid typed array length');}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance
that=new Uint8Array(length);that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class
if(that===null){that=new Buffer(length);}that.length=length;}return that;}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function Buffer(arg,encodingOrOffset,length){if(!Buffer.TYPED_ARRAY_SUPPORT&&!(this instanceof Buffer)){return new Buffer(arg,encodingOrOffset,length);}// Common case.
if(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new Error('If encoding is specified then the first argument must be a string');}return allocUnsafe(this,arg);}return from(this,arg,encodingOrOffset,length);}Buffer.poolSize=8192;// not used by this implementation
// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment=function(arr){arr.__proto__=Buffer.prototype;return arr;};function from(that,value,encodingOrOffset,length){if(typeof value==='number'){throw new TypeError('"value" argument must not be a number');}if(typeof ArrayBuffer!=='undefined'&&value instanceof ArrayBuffer){return fromArrayBuffer(that,value,encodingOrOffset,length);}if(typeof value==='string'){return fromString(that,value,encodingOrOffset);}return fromObject(that,value);}/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length);};if(Buffer.TYPED_ARRAY_SUPPORT){Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;if(typeof Symbol!=='undefined'&&Symbol.species&&Buffer[Symbol.species]===Buffer);}function assertSize(size){if(typeof size!=='number'){throw new TypeError('"size" argument must be a number');}else if(size<0){throw new RangeError('"size" argument must not be negative');}}function alloc(that,size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(that,size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This
// prevents accidentally sending in a number that would
// be interpretted as a start offset.
return typeof encoding==='string'?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill);}return createBuffer(that,size);}/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/Buffer.alloc=function(size,fill,encoding){return alloc(null,size,fill,encoding);};function allocUnsafe(that,size){assertSize(size);that=createBuffer(that,size<0?0:checked(size)|0);if(!Buffer.TYPED_ARRAY_SUPPORT){for(var i=0;i<size;++i){that[i]=0;}}return that;}/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */Buffer.allocUnsafe=function(size){return allocUnsafe(null,size);};/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size);};function fromString(that,string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('"encoding" must be a valid string encoding');}var length=byteLength(string,encoding)|0;that=createBuffer(that,length);var actual=that.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will
// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
that=that.slice(0,actual);}return that;}function fromArrayLike(that,array){var length=array.length<0?0:checked(array.length)|0;that=createBuffer(that,length);for(var i=0;i<length;i+=1){that[i]=array[i]&255;}return that;}function fromArrayBuffer(that,array,byteOffset,length){array.byteLength;// this throws if `array` is not a valid ArrayBuffer
if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('\'offset\' is out of bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('\'length\' is out of bounds');}if(byteOffset===undefined&&length===undefined){array=new Uint8Array(array);}else if(length===undefined){array=new Uint8Array(array,byteOffset);}else{array=new Uint8Array(array,byteOffset,length);}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance
that=array;that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class
that=fromArrayLike(that,array);}return that;}function fromObject(that,obj){if(internalIsBuffer(obj)){var len=checked(obj.length)|0;that=createBuffer(that,len);if(that.length===0){return that;}obj.copy(that,0,0,len);return that;}if(obj){if(typeof ArrayBuffer!=='undefined'&&obj.buffer instanceof ArrayBuffer||'length'in obj){if(typeof obj.length!=='number'||isnan(obj.length)){return createBuffer(that,0);}return fromArrayLike(that,obj);}if(obj.type==='Buffer'&&isArray$1(obj.data)){return fromArrayLike(that,obj.data);}}throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');}function checked(length){// Note: cannot use `length < kMaxLength()` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(length>=kMaxLength()){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+kMaxLength().toString(16)+' bytes');}return length|0;}Buffer.isBuffer=isBuffer$1;function internalIsBuffer(b){return!!(b!=null&&b._isBuffer);}Buffer.compare=function compare(a,b){if(!internalIsBuffer(a)||!internalIsBuffer(b)){throw new TypeError('Arguments must be Buffers');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!isArray$1(list)){throw new TypeError('"list" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!internalIsBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(internalIsBuffer(string)){return string.length;}if(typeof ArrayBuffer!=='undefined'&&typeof ArrayBuffer.isView==='function'&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer)){return string.byteLength;}if(typeof string!=='string'){string=''+string;}var len=string.length;if(len===0)return 0;// Use a for loop to avoid recursion
var loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':case undefined:return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;// assume utf8
encoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
if(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if(start>this.length){return'';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return'';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
end>>>=0;start>>>=0;if(end<=start){return'';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length|0;if(length===0)return'';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.equals=function equals(b){if(!internalIsBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=INSPECT_MAX_BYTES;if(this.length>0){str=this.toString('hex',0,max).match(/.{2}/g).join(' ');if(this.length>max)str+=' ... ';}return'<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!internalIsBuffer(target)){throw new TypeError('Argument must be a Buffer');}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match
if(buffer.length===0)return-1;// Normalize byteOffset
if(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.
if(isNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
byteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer
if(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val
if(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf
if(internalIsBuffer(val)){// Special case: looking for empty string/buffer always fails
if(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]
if(Buffer.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}// must be an even number of digits
var strLen=string.length;if(strLen%2!==0)throw new TypeError('Invalid hex string');if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)
if(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)
}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])
}else if(isFinite(offset)){offset=offset|0;if(isFinite(length)){length=length|0;if(encoding===undefined)encoding='utf8';}else{encoding=length;length=undefined;}// legacy write(string, encoding, offset, length) - remove in v0.13
}else{throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write
return base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return fromByteArray(buf);}else{return fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
codePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)
codePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()
}// Decode in chunks to avoid "call stack size exceeded".
var res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf;if(Buffer.TYPED_ARRAY_SUPPORT){newBuf=this.subarray(start,end);newBuf.__proto__=Buffer.prototype;}else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,undefined);for(var i=0;i<sliceLen;++i){newBuf[i]=this[i+start];}}return newBuf;};/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!internalIsBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);this[offset]=value&0xff;return offset+1;};function objectWriteUInt16(buf,value,offset,littleEndian){if(value<0)value=0xffff+value+1;for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i){buf[offset+i]=(value&0xff<<8*(littleEndian?i:1-i))>>>(littleEndian?i:1-i)*8;}}Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};function objectWriteUInt32(buf,value,offset,littleEndian){if(value<0)value=0xffffffff+value+1;for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i){buf[offset+i]=value>>>(littleEndian?i:3-i)*8&0xff;}}Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,4);}write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,8);}write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done
if(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions
if(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('sourceStart out of bounds');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?
if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){// descending copy from end
for(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else if(len<1000||!Buffer.TYPED_ARRAY_SUPPORT){// ascending copy from start
for(i=0;i<len;++i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);}return len;};// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:
if(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code;}}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.
if(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=internalIsBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString());var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS
// ================
var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;function base64clean(str){// Node strips out invalid characters like \n and \t from the string, base64-js does not
str=stringtrim(str).replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''
if(str.length<2)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
while(str.length%4!==0){str=str+'=';}return str;}function stringtrim(str){if(str.trim)return str.trim();return str.replace(/^\s+|\s+$/g,'');}function toHex(n){if(n<16)return'0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component
if(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead
if(!leadSurrogate){// no lead yet
if(codePoint>0xDBFF){// unexpected trail
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead
leadSurrogate=codePoint;continue;}// 2 leads in a row
if(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair
codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8
if(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..
byteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}function isnan(val){return val!==val;// eslint-disable-line no-self-compare
}// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
function isBuffer$1(obj){return obj!=null&&(!!obj._isBuffer||isFastBuffer(obj)||isSlowBuffer(obj));}function isFastBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);}// For Node v0.10 support. Remove this eventually.
function isSlowBuffer(obj){return typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isFastBuffer(obj.slice(0,0));}function bind(fn,thisArg){return function wrap(){return fn.apply(thisArg,arguments);};}// utils is a library of generic helper functions non-specific to axios
var toString=Object.prototype.toString;var getPrototypeOf=Object.getPrototypeOf;var kindOf=function(cache){return function(thing){var str=toString.call(thing);return cache[str]||(cache[str]=str.slice(8,-1).toLowerCase());};}(Object.create(null));var kindOfTest=function kindOfTest(type){type=type.toLowerCase();return function(thing){return kindOf(thing)===type;};};var typeOfTest=function typeOfTest(type){return function(thing){return _typeof(thing)===type;};};/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */var isArray=Array.isArray;/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */var isUndefined=typeOfTest('undefined');/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */function isBuffer(val){return val!==null&&!isUndefined(val)&&val.constructor!==null&&!isUndefined(val.constructor)&&isFunction(val.constructor.isBuffer)&&val.constructor.isBuffer(val);}/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */var isArrayBuffer=kindOfTest('ArrayBuffer');/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */function isArrayBufferView(val){var result;if(typeof ArrayBuffer!=='undefined'&&ArrayBuffer.isView){result=ArrayBuffer.isView(val);}else{result=val&&val.buffer&&isArrayBuffer(val.buffer);}return result;}/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */var isString=typeOfTest('string');/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */var isFunction=typeOfTest('function');/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */var isNumber=typeOfTest('number');/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */var isObject=function isObject(thing){return thing!==null&&_typeof(thing)==='object';};/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */var isBoolean=function isBoolean(thing){return thing===true||thing===false;};/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */var isPlainObject=function isPlainObject(val){if(kindOf(val)!=='object'){return false;}var prototype=getPrototypeOf(val);return(prototype===null||prototype===Object.prototype||Object.getPrototypeOf(prototype)===null)&&!(Symbol.toStringTag in val)&&!(Symbol.iterator in val);};/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */var isDate=kindOfTest('Date');/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */var isFile=kindOfTest('File');/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */var isBlob=kindOfTest('Blob');/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */var isFileList=kindOfTest('FileList');/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */var isStream=function isStream(val){return isObject(val)&&isFunction(val.pipe);};/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */var isFormData=function isFormData(thing){var kind;return thing&&(typeof FormData==='function'&&thing instanceof FormData||isFunction(thing.append)&&((kind=kindOf(thing))==='formdata'||// detect form-data instance
kind==='object'&&isFunction(thing.toString)&&thing.toString()==='[object FormData]'));};/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */var isURLSearchParams=kindOfTest('URLSearchParams');/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */var trim=function trim(str){return str.trim?str.trim():str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,'');};/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */function forEach(obj,fn){var _ref=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref$allOwnKeys=_ref.allOwnKeys,allOwnKeys=_ref$allOwnKeys===void 0?false:_ref$allOwnKeys;// Don't bother if no value provided
if(obj===null||typeof obj==='undefined'){return;}var i;var l;// Force an array if not already something iterable
if(_typeof(obj)!=='object'){/*eslint no-param-reassign:0*/obj=[obj];}if(isArray(obj)){// Iterate over array values
for(i=0,l=obj.length;i<l;i++){fn.call(null,obj[i],i,obj);}}else{// Iterate over object keys
var keys=allOwnKeys?Object.getOwnPropertyNames(obj):Object.keys(obj);var len=keys.length;var key;for(i=0;i<len;i++){key=keys[i];fn.call(null,obj[key],key,obj);}}}function findKey(obj,key){key=key.toLowerCase();var keys=Object.keys(obj);var i=keys.length;var _key;while(i-->0){_key=keys[i];if(key===_key.toLowerCase()){return _key;}}return null;}var _global=function(){/*eslint no-undef:0*/if(typeof globalThis!=="undefined")return globalThis;return typeof self!=="undefined"?self:typeof window!=='undefined'?window:global$1;}();var isContextDefined=function isContextDefined(context){return!isUndefined(context)&&context!==_global;};/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */function merge(/* obj1, obj2, obj3, ... */){var _ref2=isContextDefined(this)&&this||{},caseless=_ref2.caseless;var result={};var assignValue=function assignValue(val,key){var targetKey=caseless&&findKey(result,key)||key;if(isPlainObject(result[targetKey])&&isPlainObject(val)){result[targetKey]=merge(result[targetKey],val);}else if(isPlainObject(val)){result[targetKey]=merge({},val);}else if(isArray(val)){result[targetKey]=val.slice();}else{result[targetKey]=val;}};for(var i=0,l=arguments.length;i<l;i++){arguments[i]&&forEach(arguments[i],assignValue);}return result;}/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */var extend=function extend(a,b,thisArg){var _ref3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},allOwnKeys=_ref3.allOwnKeys;forEach(b,function(val,key){if(thisArg&&isFunction(val)){a[key]=bind(val,thisArg);}else{a[key]=val;}},{allOwnKeys:allOwnKeys});return a;};/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */var stripBOM=function stripBOM(content){if(content.charCodeAt(0)===0xFEFF){content=content.slice(1);}return content;};/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */var inherits=function inherits(constructor,superConstructor,props,descriptors){constructor.prototype=Object.create(superConstructor.prototype,descriptors);constructor.prototype.constructor=constructor;Object.defineProperty(constructor,'super',{value:superConstructor.prototype});props&&Object.assign(constructor.prototype,props);};/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */var toFlatObject=function toFlatObject(sourceObj,destObj,filter,propFilter){var props;var i;var prop;var merged={};destObj=destObj||{};// eslint-disable-next-line no-eq-null,eqeqeq
if(sourceObj==null)return destObj;do{props=Object.getOwnPropertyNames(sourceObj);i=props.length;while(i-->0){prop=props[i];if((!propFilter||propFilter(prop,sourceObj,destObj))&&!merged[prop]){destObj[prop]=sourceObj[prop];merged[prop]=true;}}sourceObj=filter!==false&&getPrototypeOf(sourceObj);}while(sourceObj&&(!filter||filter(sourceObj,destObj))&&sourceObj!==Object.prototype);return destObj;};/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */var endsWith=function endsWith(str,searchString,position){str=String(str);if(position===undefined||position>str.length){position=str.length;}position-=searchString.length;var lastIndex=str.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position;};/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */var toArray=function toArray(thing){if(!thing)return null;if(isArray(thing))return thing;var i=thing.length;if(!isNumber(i))return null;var arr=new Array(i);while(i-->0){arr[i]=thing[i];}return arr;};/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */ // eslint-disable-next-line func-names
var isTypedArray=function(TypedArray){// eslint-disable-next-line func-names
return function(thing){return TypedArray&&thing instanceof TypedArray;};}(typeof Uint8Array!=='undefined'&&getPrototypeOf(Uint8Array));/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */var forEachEntry=function forEachEntry(obj,fn){var generator=obj&&obj[Symbol.iterator];var iterator=generator.call(obj);var result;while((result=iterator.next())&&!result.done){var pair=result.value;fn.call(obj,pair[0],pair[1]);}};/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */var matchAll=function matchAll(regExp,str){var matches;var arr=[];while((matches=regExp.exec(str))!==null){arr.push(matches);}return arr;};/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */var isHTMLForm=kindOfTest('HTMLFormElement');var toCamelCase=function toCamelCase(str){return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function replacer(m,p1,p2){return p1.toUpperCase()+p2;});};/* Creating a function that will check if an object has a property. */var hasOwnProperty=function(_ref4){var hasOwnProperty=_ref4.hasOwnProperty;return function(obj,prop){return hasOwnProperty.call(obj,prop);};}(Object.prototype);/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */var isRegExp=kindOfTest('RegExp');var reduceDescriptors=function reduceDescriptors(obj,reducer){var descriptors=Object.getOwnPropertyDescriptors(obj);var reducedDescriptors={};forEach(descriptors,function(descriptor,name){var ret;if((ret=reducer(descriptor,name,obj))!==false){reducedDescriptors[name]=ret||descriptor;}});Object.defineProperties(obj,reducedDescriptors);};/**
 * Makes all methods read-only
 * @param {Object} obj
 */var freezeMethods=function freezeMethods(obj){reduceDescriptors(obj,function(descriptor,name){// skip restricted props in strict mode
if(isFunction(obj)&&['arguments','caller','callee'].indexOf(name)!==-1){return false;}var value=obj[name];if(!isFunction(value))return;descriptor.enumerable=false;if('writable'in descriptor){descriptor.writable=false;return;}if(!descriptor.set){descriptor.set=function(){throw Error('Can not rewrite read-only method \''+name+'\'');};}});};var toObjectSet=function toObjectSet(arrayOrString,delimiter){var obj={};var define=function define(arr){arr.forEach(function(value){obj[value]=true;});};isArray(arrayOrString)?define(arrayOrString):define(String(arrayOrString).split(delimiter));return obj;};var noop=function noop(){};var toFiniteNumber=function toFiniteNumber(value,defaultValue){value=+value;return Number.isFinite(value)?value:defaultValue;};var ALPHA='abcdefghijklmnopqrstuvwxyz';var DIGIT='0123456789';var ALPHABET={DIGIT:DIGIT,ALPHA:ALPHA,ALPHA_DIGIT:ALPHA+ALPHA.toUpperCase()+DIGIT};var generateString=function generateString(){var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:16;var alphabet=arguments.length>1&&arguments[1]!==undefined?arguments[1]:ALPHABET.ALPHA_DIGIT;var str='';var length=alphabet.length;while(size--){str+=alphabet[Math.random()*length|0];}return str;};/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */function isSpecCompliantForm(thing){return!!(thing&&isFunction(thing.append)&&thing[Symbol.toStringTag]==='FormData'&&thing[Symbol.iterator]);}var toJSONObject=function toJSONObject(obj){var stack=new Array(10);var visit=function visit(source,i){if(isObject(source)){if(stack.indexOf(source)>=0){return;}if(!('toJSON'in source)){stack[i]=source;var target=isArray(source)?[]:{};forEach(source,function(value,key){var reducedValue=visit(value,i+1);!isUndefined(reducedValue)&&(target[key]=reducedValue);});stack[i]=undefined;return target;}}return source;};return visit(obj,0);};var isAsyncFn=kindOfTest('AsyncFunction');var isThenable=function isThenable(thing){return thing&&(isObject(thing)||isFunction(thing))&&isFunction(thing.then)&&isFunction(thing["catch"]);};var utils$1={isArray:isArray,isArrayBuffer:isArrayBuffer,isBuffer:isBuffer,isFormData:isFormData,isArrayBufferView:isArrayBufferView,isString:isString,isNumber:isNumber,isBoolean:isBoolean,isObject:isObject,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:isDate,isFile:isFile,isBlob:isBlob,isRegExp:isRegExp,isFunction:isFunction,isStream:isStream,isURLSearchParams:isURLSearchParams,isTypedArray:isTypedArray,isFileList:isFileList,forEach:forEach,merge:merge,extend:extend,trim:trim,stripBOM:stripBOM,inherits:inherits,toFlatObject:toFlatObject,kindOf:kindOf,kindOfTest:kindOfTest,endsWith:endsWith,toArray:toArray,forEachEntry:forEachEntry,matchAll:matchAll,isHTMLForm:isHTMLForm,hasOwnProperty:hasOwnProperty,hasOwnProp:hasOwnProperty,// an alias to avoid ESLint no-prototype-builtins detection
reduceDescriptors:reduceDescriptors,freezeMethods:freezeMethods,toObjectSet:toObjectSet,toCamelCase:toCamelCase,noop:noop,toFiniteNumber:toFiniteNumber,findKey:findKey,global:_global,isContextDefined:isContextDefined,ALPHABET:ALPHABET,generateString:generateString,isSpecCompliantForm:isSpecCompliantForm,toJSONObject:toJSONObject,isAsyncFn:isAsyncFn,isThenable:isThenable};/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */function AxiosError(message,code,config,request,response){Error.call(this);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor);}else{this.stack=new Error().stack;}this.message=message;this.name='AxiosError';code&&(this.code=code);config&&(this.config=config);request&&(this.request=request);response&&(this.response=response);}utils$1.inherits(AxiosError,Error,{toJSON:function toJSON(){return{// Standard
message:this.message,name:this.name,// Microsoft
description:this.description,number:this.number,// Mozilla
fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,// Axios
config:utils$1.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null};}});var prototype$1=AxiosError.prototype;var descriptors={};['ERR_BAD_OPTION_VALUE','ERR_BAD_OPTION','ECONNABORTED','ETIMEDOUT','ERR_NETWORK','ERR_FR_TOO_MANY_REDIRECTS','ERR_DEPRECATED','ERR_BAD_RESPONSE','ERR_BAD_REQUEST','ERR_CANCELED','ERR_NOT_SUPPORT','ERR_INVALID_URL'// eslint-disable-next-line func-names
].forEach(function(code){descriptors[code]={value:code};});Object.defineProperties(AxiosError,descriptors);Object.defineProperty(prototype$1,'isAxiosError',{value:true});// eslint-disable-next-line func-names
AxiosError.from=function(error,code,config,request,response,customProps){var axiosError=Object.create(prototype$1);utils$1.toFlatObject(error,axiosError,function filter(obj){return obj!==Error.prototype;},function(prop){return prop!=='isAxiosError';});AxiosError.call(axiosError,error.message,code,config,request,response);axiosError.cause=error;axiosError.name=error.name;customProps&&Object.assign(axiosError,customProps);return axiosError;};// eslint-disable-next-line strict
var httpAdapter=null;/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */function isVisitable(thing){return utils$1.isPlainObject(thing)||utils$1.isArray(thing);}/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */function removeBrackets(key){return utils$1.endsWith(key,'[]')?key.slice(0,-2):key;}/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */function renderKey(path,key,dots){if(!path)return key;return path.concat(key).map(function each(token,i){// eslint-disable-next-line no-param-reassign
token=removeBrackets(token);return!dots&&i?'['+token+']':token;}).join(dots?'.':'');}/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */function isFlatArray(arr){return utils$1.isArray(arr)&&!arr.some(isVisitable);}var predicates=utils$1.toFlatObject(utils$1,{},null,function filter(prop){return /^is[A-Z]/.test(prop);});/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/ /**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */function toFormData(obj,formData,options){if(!utils$1.isObject(obj)){throw new TypeError('target must be an object');}// eslint-disable-next-line no-param-reassign
formData=formData||new FormData();// eslint-disable-next-line no-param-reassign
options=utils$1.toFlatObject(options,{metaTokens:true,dots:false,indexes:false},false,function defined(option,source){// eslint-disable-next-line no-eq-null,eqeqeq
return!utils$1.isUndefined(source[option]);});var metaTokens=options.metaTokens;// eslint-disable-next-line no-use-before-define
var visitor=options.visitor||defaultVisitor;var dots=options.dots;var indexes=options.indexes;var _Blob=options.Blob||typeof Blob!=='undefined'&&Blob;var useBlob=_Blob&&utils$1.isSpecCompliantForm(formData);if(!utils$1.isFunction(visitor)){throw new TypeError('visitor must be a function');}function convertValue(value){if(value===null)return'';if(utils$1.isDate(value)){return value.toISOString();}if(!useBlob&&utils$1.isBlob(value)){throw new AxiosError('Blob is not supported. Use a Buffer instead.');}if(utils$1.isArrayBuffer(value)||utils$1.isTypedArray(value)){return useBlob&&typeof Blob==='function'?new Blob([value]):Buffer.from(value);}return value;}/**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */function defaultVisitor(value,key,path){var arr=value;if(value&&!path&&_typeof(value)==='object'){if(utils$1.endsWith(key,'{}')){// eslint-disable-next-line no-param-reassign
key=metaTokens?key:key.slice(0,-2);// eslint-disable-next-line no-param-reassign
value=JSON.stringify(value);}else if(utils$1.isArray(value)&&isFlatArray(value)||(utils$1.isFileList(value)||utils$1.endsWith(key,'[]'))&&(arr=utils$1.toArray(value))){// eslint-disable-next-line no-param-reassign
key=removeBrackets(key);arr.forEach(function each(el,index){!(utils$1.isUndefined(el)||el===null)&&formData.append(// eslint-disable-next-line no-nested-ternary
indexes===true?renderKey([key],index,dots):indexes===null?key:key+'[]',convertValue(el));});return false;}}if(isVisitable(value)){return true;}formData.append(renderKey(path,key,dots),convertValue(value));return false;}var stack=[];var exposedHelpers=Object.assign(predicates,{defaultVisitor:defaultVisitor,convertValue:convertValue,isVisitable:isVisitable});function build(value,path){if(utils$1.isUndefined(value))return;if(stack.indexOf(value)!==-1){throw Error('Circular reference detected in '+path.join('.'));}stack.push(value);utils$1.forEach(value,function each(el,key){var result=!(utils$1.isUndefined(el)||el===null)&&visitor.call(formData,el,utils$1.isString(key)?key.trim():key,path,exposedHelpers);if(result===true){build(el,path?path.concat(key):[key]);}});stack.pop();}if(!utils$1.isObject(obj)){throw new TypeError('data must be an object');}build(obj);return formData;}/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */function encode$1(str){var charMap={'!':'%21',"'":'%27','(':'%28',')':'%29','~':'%7E','%20':'+','%00':'\x00'};return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g,function replacer(match){return charMap[match];});}/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */function AxiosURLSearchParams(params,options){this._pairs=[];params&&toFormData(params,this,options);}var prototype=AxiosURLSearchParams.prototype;prototype.append=function append(name,value){this._pairs.push([name,value]);};prototype.toString=function toString(encoder){var _encode=encoder?function(value){return encoder.call(this,value,encode$1);}:encode$1;return this._pairs.map(function each(pair){return _encode(pair[0])+'='+_encode(pair[1]);},'').join('&');};/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */function encode(val){return encodeURIComponent(val).replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',').replace(/%20/g,'+').replace(/%5B/gi,'[').replace(/%5D/gi,']');}/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @param {?object} options
 *
 * @returns {string} The formatted url
 */function buildURL(url,params,options){/*eslint no-param-reassign:0*/if(!params){return url;}var _encode=options&&options.encode||encode;var serializeFn=options&&options.serialize;var serializedParams;if(serializeFn){serializedParams=serializeFn(params,options);}else{serializedParams=utils$1.isURLSearchParams(params)?params.toString():new AxiosURLSearchParams(params,options).toString(_encode);}if(serializedParams){var hashmarkIndex=url.indexOf("#");if(hashmarkIndex!==-1){url=url.slice(0,hashmarkIndex);}url+=(url.indexOf('?')===-1?'?':'&')+serializedParams;}return url;}var InterceptorManager=/*#__PURE__*/function(){function InterceptorManager(){_classCallCheck(this,InterceptorManager);this.handlers=[];}/**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */_createClass(InterceptorManager,[{key:"use",value:function use(fulfilled,rejected,options){this.handlers.push({fulfilled:fulfilled,rejected:rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1;}/**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */},{key:"eject",value:function eject(id){if(this.handlers[id]){this.handlers[id]=null;}}/**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */},{key:"clear",value:function clear(){if(this.handlers){this.handlers=[];}}/**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */},{key:"forEach",value:function forEach(fn){utils$1.forEach(this.handlers,function forEachHandler(h){if(h!==null){fn(h);}});}}]);return InterceptorManager;}();var InterceptorManager$1=InterceptorManager;var transitionalDefaults={silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false};var URLSearchParams$1=typeof URLSearchParams!=='undefined'?URLSearchParams:AxiosURLSearchParams;var FormData$1=typeof FormData!=='undefined'?FormData:null;var Blob$1=typeof Blob!=='undefined'?Blob:null;var platform$1={isBrowser:true,classes:{URLSearchParams:URLSearchParams$1,FormData:FormData$1,Blob:Blob$1},protocols:['http','https','file','blob','url','data']};var hasBrowserEnv=typeof window!=='undefined'&&typeof document!=='undefined';/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */var hasStandardBrowserEnv=function(product){return hasBrowserEnv&&['ReactNative','NativeScript','NS'].indexOf(product)<0;}(typeof navigator!=='undefined'&&navigator.product);/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */var hasStandardBrowserWebWorkerEnv=function(){return typeof WorkerGlobalScope!=='undefined'&&// eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope&&typeof self.importScripts==='function';}();var utils=/*#__PURE__*/Object.freeze({__proto__:null,hasBrowserEnv:hasBrowserEnv,hasStandardBrowserWebWorkerEnv:hasStandardBrowserWebWorkerEnv,hasStandardBrowserEnv:hasStandardBrowserEnv});var platform=_objectSpread(_objectSpread({},utils),platform$1);function toURLEncodedForm(data,options){return toFormData(data,new platform.classes.URLSearchParams(),Object.assign({visitor:function visitor(value,key,path,helpers){if(platform.isNode&&utils$1.isBuffer(value)){this.append(key,value.toString('base64'));return false;}return helpers.defaultVisitor.apply(this,arguments);}},options));}/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */function parsePropPath(name){// foo[x][y][z]
// foo.x.y.z
// foo-x-y-z
// foo x y z
return utils$1.matchAll(/\w+|\[(\w*)]/g,name).map(function(match){return match[0]==='[]'?'':match[1]||match[0];});}/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */function arrayToObject(arr){var obj={};var keys=Object.keys(arr);var i;var len=keys.length;var key;for(i=0;i<len;i++){key=keys[i];obj[key]=arr[key];}return obj;}/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */function formDataToJSON(formData){function buildPath(path,value,target,index){var name=path[index++];var isNumericKey=Number.isFinite(+name);var isLast=index>=path.length;name=!name&&utils$1.isArray(target)?target.length:name;if(isLast){if(utils$1.hasOwnProp(target,name)){target[name]=[target[name],value];}else{target[name]=value;}return!isNumericKey;}if(!target[name]||!utils$1.isObject(target[name])){target[name]=[];}var result=buildPath(path,value,target[name],index);if(result&&utils$1.isArray(target[name])){target[name]=arrayToObject(target[name]);}return!isNumericKey;}if(utils$1.isFormData(formData)&&utils$1.isFunction(formData.entries)){var obj={};utils$1.forEachEntry(formData,function(name,value){buildPath(parsePropPath(name),value,obj,0);});return obj;}return null;}/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */function stringifySafely(rawValue,parser,encoder){if(utils$1.isString(rawValue)){try{(parser||JSON.parse)(rawValue);return utils$1.trim(rawValue);}catch(e){if(e.name!=='SyntaxError'){throw e;}}}return(encoder||JSON.stringify)(rawValue);}var defaults={transitional:transitionalDefaults,adapter:['xhr','http'],transformRequest:[function transformRequest(data,headers){var contentType=headers.getContentType()||'';var hasJSONContentType=contentType.indexOf('application/json')>-1;var isObjectPayload=utils$1.isObject(data);if(isObjectPayload&&utils$1.isHTMLForm(data)){data=new FormData(data);}var isFormData=utils$1.isFormData(data);if(isFormData){if(!hasJSONContentType){return data;}return hasJSONContentType?JSON.stringify(formDataToJSON(data)):data;}if(utils$1.isArrayBuffer(data)||utils$1.isBuffer(data)||utils$1.isStream(data)||utils$1.isFile(data)||utils$1.isBlob(data)){return data;}if(utils$1.isArrayBufferView(data)){return data.buffer;}if(utils$1.isURLSearchParams(data)){headers.setContentType('application/x-www-form-urlencoded;charset=utf-8',false);return data.toString();}var isFileList;if(isObjectPayload){if(contentType.indexOf('application/x-www-form-urlencoded')>-1){return toURLEncodedForm(data,this.formSerializer).toString();}if((isFileList=utils$1.isFileList(data))||contentType.indexOf('multipart/form-data')>-1){var _FormData=this.env&&this.env.FormData;return toFormData(isFileList?{'files[]':data}:data,_FormData&&new _FormData(),this.formSerializer);}}if(isObjectPayload||hasJSONContentType){headers.setContentType('application/json',false);return stringifySafely(data);}return data;}],transformResponse:[function transformResponse(data){var transitional=this.transitional||defaults.transitional;var forcedJSONParsing=transitional&&transitional.forcedJSONParsing;var JSONRequested=this.responseType==='json';if(data&&utils$1.isString(data)&&(forcedJSONParsing&&!this.responseType||JSONRequested)){var silentJSONParsing=transitional&&transitional.silentJSONParsing;var strictJSONParsing=!silentJSONParsing&&JSONRequested;try{return JSON.parse(data);}catch(e){if(strictJSONParsing){if(e.name==='SyntaxError'){throw AxiosError.from(e,AxiosError.ERR_BAD_RESPONSE,this,null,this.response);}throw e;}}}return data;}],/**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */timeout:0,xsrfCookieName:'XSRF-TOKEN',xsrfHeaderName:'X-XSRF-TOKEN',maxContentLength:-1,maxBodyLength:-1,env:{FormData:platform.classes.FormData,Blob:platform.classes.Blob},validateStatus:function validateStatus(status){return status>=200&&status<300;},headers:{common:{'Accept':'application/json, text/plain, */*','Content-Type':undefined}}};utils$1.forEach(['delete','get','head','post','put','patch'],function(method){defaults.headers[method]={};});var defaults$1=defaults;// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf=utils$1.toObjectSet(['age','authorization','content-length','content-type','etag','expires','from','host','if-modified-since','if-unmodified-since','last-modified','location','max-forwards','proxy-authorization','referer','retry-after','user-agent']);/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */var parseHeaders=function parseHeaders(rawHeaders){var parsed={};var key;var val;var i;rawHeaders&&rawHeaders.split('\n').forEach(function parser(line){i=line.indexOf(':');key=line.substring(0,i).trim().toLowerCase();val=line.substring(i+1).trim();if(!key||parsed[key]&&ignoreDuplicateOf[key]){return;}if(key==='set-cookie'){if(parsed[key]){parsed[key].push(val);}else{parsed[key]=[val];}}else{parsed[key]=parsed[key]?parsed[key]+', '+val:val;}});return parsed;};var $internals=Symbol('internals');function normalizeHeader(header){return header&&String(header).trim().toLowerCase();}function normalizeValue(value){if(value===false||value==null){return value;}return utils$1.isArray(value)?value.map(normalizeValue):String(value);}function parseTokens(str){var tokens=Object.create(null);var tokensRE=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;var match;while(match=tokensRE.exec(str)){tokens[match[1]]=match[2];}return tokens;}var isValidHeaderName=function isValidHeaderName(str){return /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());};function matchHeaderValue(context,value,header,filter,isHeaderNameFilter){if(utils$1.isFunction(filter)){return filter.call(this,value,header);}if(isHeaderNameFilter){value=header;}if(!utils$1.isString(value))return;if(utils$1.isString(filter)){return value.indexOf(filter)!==-1;}if(utils$1.isRegExp(filter)){return filter.test(value);}}function formatHeader(header){return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,function(w,_char,str){return _char.toUpperCase()+str;});}function buildAccessors(obj,header){var accessorName=utils$1.toCamelCase(' '+header);['get','set','has'].forEach(function(methodName){Object.defineProperty(obj,methodName+accessorName,{value:function value(arg1,arg2,arg3){return this[methodName].call(this,header,arg1,arg2,arg3);},configurable:true});});}var AxiosHeaders=/*#__PURE__*/function(_Symbol$iterator,_Symbol$toStringTag){function AxiosHeaders(headers){_classCallCheck(this,AxiosHeaders);headers&&this.set(headers);}_createClass(AxiosHeaders,[{key:"set",value:function set(header,valueOrRewrite,rewrite){var self=this;function setHeader(_value,_header,_rewrite){var lHeader=normalizeHeader(_header);if(!lHeader){throw new Error('header name must be a non-empty string');}var key=utils$1.findKey(self,lHeader);if(!key||self[key]===undefined||_rewrite===true||_rewrite===undefined&&self[key]!==false){self[key||_header]=normalizeValue(_value);}}var setHeaders=function setHeaders(headers,_rewrite){return utils$1.forEach(headers,function(_value,_header){return setHeader(_value,_header,_rewrite);});};if(utils$1.isPlainObject(header)||header instanceof this.constructor){setHeaders(header,valueOrRewrite);}else if(utils$1.isString(header)&&(header=header.trim())&&!isValidHeaderName(header)){setHeaders(parseHeaders(header),valueOrRewrite);}else{header!=null&&setHeader(valueOrRewrite,header,rewrite);}return this;}},{key:"get",value:function get(header,parser){header=normalizeHeader(header);if(header){var key=utils$1.findKey(this,header);if(key){var value=this[key];if(!parser){return value;}if(parser===true){return parseTokens(value);}if(utils$1.isFunction(parser)){return parser.call(this,value,key);}if(utils$1.isRegExp(parser)){return parser.exec(value);}throw new TypeError('parser must be boolean|regexp|function');}}}},{key:"has",value:function has(header,matcher){header=normalizeHeader(header);if(header){var key=utils$1.findKey(this,header);return!!(key&&this[key]!==undefined&&(!matcher||matchHeaderValue(this,this[key],key,matcher)));}return false;}},{key:"delete",value:function _delete(header,matcher){var self=this;var deleted=false;function deleteHeader(_header){_header=normalizeHeader(_header);if(_header){var key=utils$1.findKey(self,_header);if(key&&(!matcher||matchHeaderValue(self,self[key],key,matcher))){delete self[key];deleted=true;}}}if(utils$1.isArray(header)){header.forEach(deleteHeader);}else{deleteHeader(header);}return deleted;}},{key:"clear",value:function clear(matcher){var keys=Object.keys(this);var i=keys.length;var deleted=false;while(i--){var key=keys[i];if(!matcher||matchHeaderValue(this,this[key],key,matcher,true)){delete this[key];deleted=true;}}return deleted;}},{key:"normalize",value:function normalize(format){var self=this;var headers={};utils$1.forEach(this,function(value,header){var key=utils$1.findKey(headers,header);if(key){self[key]=normalizeValue(value);delete self[header];return;}var normalized=format?formatHeader(header):String(header).trim();if(normalized!==header){delete self[header];}self[normalized]=normalizeValue(value);headers[normalized]=true;});return this;}},{key:"concat",value:function concat(){var _this$constructor;for(var _len=arguments.length,targets=new Array(_len),_key2=0;_key2<_len;_key2++){targets[_key2]=arguments[_key2];}return(_this$constructor=this.constructor).concat.apply(_this$constructor,[this].concat(targets));}},{key:"toJSON",value:function toJSON(asStrings){var obj=Object.create(null);utils$1.forEach(this,function(value,header){value!=null&&value!==false&&(obj[header]=asStrings&&utils$1.isArray(value)?value.join(', '):value);});return obj;}},{key:_Symbol$iterator,value:function value(){return Object.entries(this.toJSON())[Symbol.iterator]();}},{key:"toString",value:function toString(){return Object.entries(this.toJSON()).map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),header=_ref6[0],value=_ref6[1];return header+': '+value;}).join('\n');}},{key:_Symbol$toStringTag,get:function get(){return'AxiosHeaders';}}],[{key:"from",value:function from(thing){return thing instanceof this?thing:new this(thing);}},{key:"concat",value:function concat(first){var computed=new this(first);for(var _len2=arguments.length,targets=new Array(_len2>1?_len2-1:0),_key3=1;_key3<_len2;_key3++){targets[_key3-1]=arguments[_key3];}targets.forEach(function(target){return computed.set(target);});return computed;}},{key:"accessor",value:function accessor(header){var internals=this[$internals]=this[$internals]={accessors:{}};var accessors=internals.accessors;var prototype=this.prototype;function defineAccessor(_header){var lHeader=normalizeHeader(_header);if(!accessors[lHeader]){buildAccessors(prototype,_header);accessors[lHeader]=true;}}utils$1.isArray(header)?header.forEach(defineAccessor):defineAccessor(header);return this;}}]);return AxiosHeaders;}(Symbol.iterator,Symbol.toStringTag);AxiosHeaders.accessor(['Content-Type','Content-Length','Accept','Accept-Encoding','User-Agent','Authorization']);// reserved names hotfix
utils$1.reduceDescriptors(AxiosHeaders.prototype,function(_ref7,key){var value=_ref7.value;var mapped=key[0].toUpperCase()+key.slice(1);// map `set` => `Set`
return{get:function get(){return value;},set:function set(headerValue){this[mapped]=headerValue;}};});utils$1.freezeMethods(AxiosHeaders);var AxiosHeaders$1=AxiosHeaders;/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */function transformData(fns,response){var config=this||defaults$1;var context=response||config;var headers=AxiosHeaders$1.from(context.headers);var data=context.data;utils$1.forEach(fns,function transform(fn){data=fn.call(config,data,headers.normalize(),response?response.status:undefined);});headers.normalize();return data;}function isCancel(value){return!!(value&&value.__CANCEL__);}/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */function CanceledError(message,config,request){// eslint-disable-next-line no-eq-null,eqeqeq
AxiosError.call(this,message==null?'canceled':message,AxiosError.ERR_CANCELED,config,request);this.name='CanceledError';}utils$1.inherits(CanceledError,AxiosError,{__CANCEL__:true});/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */function settle(resolve,reject,response){var validateStatus=response.config.validateStatus;if(!response.status||!validateStatus||validateStatus(response.status)){resolve(response);}else{reject(new AxiosError('Request failed with status code '+response.status,[AxiosError.ERR_BAD_REQUEST,AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status/100)-4],response.config,response.request,response));}}var cookies=platform.hasStandardBrowserEnv?// Standard browser envs support document.cookie
{write:function write(name,value,expires,path,domain,secure){var cookie=[name+'='+encodeURIComponent(value)];utils$1.isNumber(expires)&&cookie.push('expires='+new Date(expires).toGMTString());utils$1.isString(path)&&cookie.push('path='+path);utils$1.isString(domain)&&cookie.push('domain='+domain);secure===true&&cookie.push('secure');document.cookie=cookie.join('; ');},read:function read(name){var match=document.cookie.match(new RegExp('(^|;\\s*)('+name+')=([^;]*)'));return match?decodeURIComponent(match[3]):null;},remove:function remove(name){this.write(name,'',Date.now()-86400000);}}:// Non-standard browser env (web workers, react-native) lack needed support.
{write:function write(){},read:function read(){return null;},remove:function remove(){}};/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */function isAbsoluteURL(url){// A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
// RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
// by any combination of letters, digits, plus, period, or hyphen.
return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);}/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */function combineURLs(baseURL,relativeURL){return relativeURL?baseURL.replace(/\/+$/,'')+'/'+relativeURL.replace(/^\/+/,''):baseURL;}/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */function buildFullPath(baseURL,requestedURL){if(baseURL&&!isAbsoluteURL(requestedURL)){return combineURLs(baseURL,requestedURL);}return requestedURL;}var isURLSameOrigin=platform.hasStandardBrowserEnv?// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv(){var msie=/(msie|trident)/i.test(navigator.userAgent);var urlParsingNode=document.createElement('a');var originURL;/**
    * Parse a URL to discover its components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */function resolveURL(url){var href=url;if(msie){// IE needs attribute set twice to normalize properties
urlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}originURL=resolveURL(window.location.href);/**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */return function isURLSameOrigin(requestURL){var parsed=utils$1.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host;};}():// Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv(){return function isURLSameOrigin(){return true;};}();function parseProtocol(url){var match=/^([-+\w]{1,25})(:?\/\/|:)/.exec(url);return match&&match[1]||'';}/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */function speedometer(samplesCount,min){samplesCount=samplesCount||10;var bytes=new Array(samplesCount);var timestamps=new Array(samplesCount);var head=0;var tail=0;var firstSampleTS;min=min!==undefined?min:1000;return function push(chunkLength){var now=Date.now();var startedAt=timestamps[tail];if(!firstSampleTS){firstSampleTS=now;}bytes[head]=chunkLength;timestamps[head]=now;var i=tail;var bytesCount=0;while(i!==head){bytesCount+=bytes[i++];i=i%samplesCount;}head=(head+1)%samplesCount;if(head===tail){tail=(tail+1)%samplesCount;}if(now-firstSampleTS<min){return;}var passed=startedAt&&now-startedAt;return passed?Math.round(bytesCount*1000/passed):undefined;};}function progressEventReducer(listener,isDownloadStream){var bytesNotified=0;var _speedometer=speedometer(50,250);return function(e){var loaded=e.loaded;var total=e.lengthComputable?e.total:undefined;var progressBytes=loaded-bytesNotified;var rate=_speedometer(progressBytes);var inRange=loaded<=total;bytesNotified=loaded;var data={loaded:loaded,total:total,progress:total?loaded/total:undefined,bytes:progressBytes,rate:rate?rate:undefined,estimated:rate&&total&&inRange?(total-loaded)/rate:undefined,event:e};data[isDownloadStream?'download':'upload']=true;listener(data);};}var isXHRAdapterSupported=typeof XMLHttpRequest!=='undefined';var xhrAdapter=isXHRAdapterSupported&&function(config){return new Promise(function dispatchXhrRequest(resolve,reject){var requestData=config.data;var requestHeaders=AxiosHeaders$1.from(config.headers).normalize();var responseType=config.responseType,withXSRFToken=config.withXSRFToken;var onCanceled;function done(){if(config.cancelToken){config.cancelToken.unsubscribe(onCanceled);}if(config.signal){config.signal.removeEventListener('abort',onCanceled);}}var contentType;if(utils$1.isFormData(requestData)){if(platform.hasStandardBrowserEnv||platform.hasStandardBrowserWebWorkerEnv){requestHeaders.setContentType(false);// Let the browser set it
}else if((contentType=requestHeaders.getContentType())!==false){// fix semicolon duplication issue for ReactNative FormData implementation
var _ref8=contentType?contentType.split(';').map(function(token){return token.trim();}).filter(Boolean):[],_ref9=_toArray(_ref8),type=_ref9[0],tokens=_ref9.slice(1);requestHeaders.setContentType([type||'multipart/form-data'].concat(_toConsumableArray(tokens)).join('; '));}}var request=new XMLHttpRequest();// HTTP basic authentication
if(config.auth){var username=config.auth.username||'';var password=config.auth.password?unescape(encodeURIComponent(config.auth.password)):'';requestHeaders.set('Authorization','Basic '+btoa(username+':'+password));}var fullPath=buildFullPath(config.baseURL,config.url);request.open(config.method.toUpperCase(),buildURL(fullPath,config.params,config.paramsSerializer),true);// Set the request timeout in MS
request.timeout=config.timeout;function onloadend(){if(!request){return;}// Prepare the response
var responseHeaders=AxiosHeaders$1.from('getAllResponseHeaders'in request&&request.getAllResponseHeaders());var responseData=!responseType||responseType==='text'||responseType==='json'?request.responseText:request.response;var response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config:config,request:request};settle(function _resolve(value){resolve(value);done();},function _reject(err){reject(err);done();},response);// Clean up request
request=null;}if('onloadend'in request){// Use onloadend if available
request.onloadend=onloadend;}else{// Listen for ready state to emulate onloadend
request.onreadystatechange=function handleLoad(){if(!request||request.readyState!==4){return;}// The request errored out and we didn't get a response, this will be
// handled by onerror instead
// With one exception: request that using file: protocol, most browsers
// will return status as 0 even though it's a successful request
if(request.status===0&&!(request.responseURL&&request.responseURL.indexOf('file:')===0)){return;}// readystate handler is calling before onerror or ontimeout handlers,
// so we should call onloadend on the next 'tick'
setTimeout(onloadend);};}// Handle browser request cancellation (as opposed to a manual cancellation)
request.onabort=function handleAbort(){if(!request){return;}reject(new AxiosError('Request aborted',AxiosError.ECONNABORTED,config,request));// Clean up request
request=null;};// Handle low level network errors
request.onerror=function handleError(){// Real errors are hidden from us by the browser
// onerror should only fire if it's a network error
reject(new AxiosError('Network Error',AxiosError.ERR_NETWORK,config,request));// Clean up request
request=null;};// Handle timeout
request.ontimeout=function handleTimeout(){var timeoutErrorMessage=config.timeout?'timeout of '+config.timeout+'ms exceeded':'timeout exceeded';var transitional=config.transitional||transitionalDefaults;if(config.timeoutErrorMessage){timeoutErrorMessage=config.timeoutErrorMessage;}reject(new AxiosError(timeoutErrorMessage,transitional.clarifyTimeoutError?AxiosError.ETIMEDOUT:AxiosError.ECONNABORTED,config,request));// Clean up request
request=null;};// Add xsrf header
// This is only done if running in a standard browser environment.
// Specifically not if we're in a web worker, or react-native.
if(platform.hasStandardBrowserEnv){withXSRFToken&&utils$1.isFunction(withXSRFToken)&&(withXSRFToken=withXSRFToken(config));if(withXSRFToken||withXSRFToken!==false&&isURLSameOrigin(fullPath)){// Add xsrf header
var xsrfValue=config.xsrfHeaderName&&config.xsrfCookieName&&cookies.read(config.xsrfCookieName);if(xsrfValue){requestHeaders.set(config.xsrfHeaderName,xsrfValue);}}}// Remove Content-Type if data is undefined
requestData===undefined&&requestHeaders.setContentType(null);// Add headers to the request
if('setRequestHeader'in request){utils$1.forEach(requestHeaders.toJSON(),function setRequestHeader(val,key){request.setRequestHeader(key,val);});}// Add withCredentials to request if needed
if(!utils$1.isUndefined(config.withCredentials)){request.withCredentials=!!config.withCredentials;}// Add responseType to request if needed
if(responseType&&responseType!=='json'){request.responseType=config.responseType;}// Handle progress if needed
if(typeof config.onDownloadProgress==='function'){request.addEventListener('progress',progressEventReducer(config.onDownloadProgress,true));}// Not all browsers support upload events
if(typeof config.onUploadProgress==='function'&&request.upload){request.upload.addEventListener('progress',progressEventReducer(config.onUploadProgress));}if(config.cancelToken||config.signal){// Handle cancellation
// eslint-disable-next-line func-names
onCanceled=function onCanceled(cancel){if(!request){return;}reject(!cancel||cancel.type?new CanceledError(null,config,request):cancel);request.abort();request=null;};config.cancelToken&&config.cancelToken.subscribe(onCanceled);if(config.signal){config.signal.aborted?onCanceled():config.signal.addEventListener('abort',onCanceled);}}var protocol=parseProtocol(fullPath);if(protocol&&platform.protocols.indexOf(protocol)===-1){reject(new AxiosError('Unsupported protocol '+protocol+':',AxiosError.ERR_BAD_REQUEST,config));return;}// Send the request
request.send(requestData||null);});};var knownAdapters={http:httpAdapter,xhr:xhrAdapter};utils$1.forEach(knownAdapters,function(fn,value){if(fn){try{Object.defineProperty(fn,'name',{value:value});}catch(e){// eslint-disable-next-line no-empty
}Object.defineProperty(fn,'adapterName',{value:value});}});var renderReason=function renderReason(reason){return"- ".concat(reason);};var isResolvedHandle=function isResolvedHandle(adapter){return utils$1.isFunction(adapter)||adapter===null||adapter===false;};var adapters={getAdapter:function getAdapter(adapters){adapters=utils$1.isArray(adapters)?adapters:[adapters];var _adapters=adapters,length=_adapters.length;var nameOrAdapter;var adapter;var rejectedReasons={};for(var i=0;i<length;i++){nameOrAdapter=adapters[i];var id=void 0;adapter=nameOrAdapter;if(!isResolvedHandle(nameOrAdapter)){adapter=knownAdapters[(id=String(nameOrAdapter)).toLowerCase()];if(adapter===undefined){throw new AxiosError("Unknown adapter '".concat(id,"'"));}}if(adapter){break;}rejectedReasons[id||'#'+i]=adapter;}if(!adapter){var reasons=Object.entries(rejectedReasons).map(function(_ref10){var _ref11=_slicedToArray(_ref10,2),id=_ref11[0],state=_ref11[1];return"adapter ".concat(id," ")+(state===false?'is not supported by the environment':'is not available in the build');});var s=length?reasons.length>1?'since :\n'+reasons.map(renderReason).join('\n'):' '+renderReason(reasons[0]):'as no adapter specified';throw new AxiosError("There is no suitable adapter to dispatch the request "+s,'ERR_NOT_SUPPORT');}return adapter;},adapters:knownAdapters};/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested();}if(config.signal&&config.signal.aborted){throw new CanceledError(null,config);}}/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */function dispatchRequest(config){throwIfCancellationRequested(config);config.headers=AxiosHeaders$1.from(config.headers);// Transform request data
config.data=transformData.call(config,config.transformRequest);if(['post','put','patch'].indexOf(config.method)!==-1){config.headers.setContentType('application/x-www-form-urlencoded',false);}var adapter=adapters.getAdapter(config.adapter||defaults$1.adapter);return adapter(config).then(function onAdapterResolution(response){throwIfCancellationRequested(config);// Transform response data
response.data=transformData.call(config,config.transformResponse,response);response.headers=AxiosHeaders$1.from(response.headers);return response;},function onAdapterRejection(reason){if(!isCancel(reason)){throwIfCancellationRequested(config);// Transform response data
if(reason&&reason.response){reason.response.data=transformData.call(config,config.transformResponse,reason.response);reason.response.headers=AxiosHeaders$1.from(reason.response.headers);}}return Promise.reject(reason);});}var headersToObject=function headersToObject(thing){return thing instanceof AxiosHeaders$1?thing.toJSON():thing;};/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 *
 * @returns {Object} New object resulting from merging config2 to config1
 */function mergeConfig(config1,config2){// eslint-disable-next-line no-param-reassign
config2=config2||{};var config={};function getMergedValue(target,source,caseless){if(utils$1.isPlainObject(target)&&utils$1.isPlainObject(source)){return utils$1.merge.call({caseless:caseless},target,source);}else if(utils$1.isPlainObject(source)){return utils$1.merge({},source);}else if(utils$1.isArray(source)){return source.slice();}return source;}// eslint-disable-next-line consistent-return
function mergeDeepProperties(a,b,caseless){if(!utils$1.isUndefined(b)){return getMergedValue(a,b,caseless);}else if(!utils$1.isUndefined(a)){return getMergedValue(undefined,a,caseless);}}// eslint-disable-next-line consistent-return
function valueFromConfig2(a,b){if(!utils$1.isUndefined(b)){return getMergedValue(undefined,b);}}// eslint-disable-next-line consistent-return
function defaultToConfig2(a,b){if(!utils$1.isUndefined(b)){return getMergedValue(undefined,b);}else if(!utils$1.isUndefined(a)){return getMergedValue(undefined,a);}}// eslint-disable-next-line consistent-return
function mergeDirectKeys(a,b,prop){if(prop in config2){return getMergedValue(a,b);}else if(prop in config1){return getMergedValue(undefined,a);}}var mergeMap={url:valueFromConfig2,method:valueFromConfig2,data:valueFromConfig2,baseURL:defaultToConfig2,transformRequest:defaultToConfig2,transformResponse:defaultToConfig2,paramsSerializer:defaultToConfig2,timeout:defaultToConfig2,timeoutMessage:defaultToConfig2,withCredentials:defaultToConfig2,withXSRFToken:defaultToConfig2,adapter:defaultToConfig2,responseType:defaultToConfig2,xsrfCookieName:defaultToConfig2,xsrfHeaderName:defaultToConfig2,onUploadProgress:defaultToConfig2,onDownloadProgress:defaultToConfig2,decompress:defaultToConfig2,maxContentLength:defaultToConfig2,maxBodyLength:defaultToConfig2,beforeRedirect:defaultToConfig2,transport:defaultToConfig2,httpAgent:defaultToConfig2,httpsAgent:defaultToConfig2,cancelToken:defaultToConfig2,socketPath:defaultToConfig2,responseEncoding:defaultToConfig2,validateStatus:mergeDirectKeys,headers:function headers(a,b){return mergeDeepProperties(headersToObject(a),headersToObject(b),true);}};utils$1.forEach(Object.keys(Object.assign({},config1,config2)),function computeConfigValue(prop){var merge=mergeMap[prop]||mergeDeepProperties;var configValue=merge(config1[prop],config2[prop],prop);utils$1.isUndefined(configValue)&&merge!==mergeDirectKeys||(config[prop]=configValue);});return config;}var VERSION="1.6.2";var validators$1={};// eslint-disable-next-line func-names
['object','boolean','number','function','string','symbol'].forEach(function(type,i){validators$1[type]=function validator(thing){return _typeof(thing)===type||'a'+(i<1?'n ':' ')+type;};});var deprecatedWarnings={};/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */validators$1.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return'[Axios v'+VERSION+'] Transitional option \''+opt+'\''+desc+(message?'. '+message:'');}// eslint-disable-next-line func-names
return function(value,opt,opts){if(validator===false){throw new AxiosError(formatMessage(opt,' has been removed'+(version?' in '+version:'')),AxiosError.ERR_DEPRECATED);}if(version&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;// eslint-disable-next-line no-console
console.warn(formatMessage(opt,' has been deprecated since v'+version+' and will be removed in the near future'));}return validator?validator(value,opt,opts):true;};};/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */function assertOptions(options,schema,allowUnknown){if(_typeof(options)!=='object'){throw new AxiosError('options must be an object',AxiosError.ERR_BAD_OPTION_VALUE);}var keys=Object.keys(options);var i=keys.length;while(i-->0){var opt=keys[i];var _validator=schema[opt];if(_validator){var value=options[opt];var result=value===undefined||_validator(value,opt,options);if(result!==true){throw new AxiosError('option '+opt+' must be '+result,AxiosError.ERR_BAD_OPTION_VALUE);}continue;}if(allowUnknown!==true){throw new AxiosError('Unknown option '+opt,AxiosError.ERR_BAD_OPTION);}}}var validator={assertOptions:assertOptions,validators:validators$1};var validators=validator.validators;/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */var Axios=/*#__PURE__*/function(){function Axios(instanceConfig){_classCallCheck(this,Axios);this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager$1(),response:new InterceptorManager$1()};}/**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */_createClass(Axios,[{key:"request",value:function request(configOrUrl,config){/*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
if(typeof configOrUrl==='string'){config=config||{};config.url=configOrUrl;}else{config=configOrUrl||{};}config=mergeConfig(this.defaults,config);var _config=config,transitional=_config.transitional,paramsSerializer=_config.paramsSerializer,headers=_config.headers;if(transitional!==undefined){validator.assertOptions(transitional,{silentJSONParsing:validators.transitional(validators["boolean"]),forcedJSONParsing:validators.transitional(validators["boolean"]),clarifyTimeoutError:validators.transitional(validators["boolean"])},false);}if(paramsSerializer!=null){if(utils$1.isFunction(paramsSerializer)){config.paramsSerializer={serialize:paramsSerializer};}else{validator.assertOptions(paramsSerializer,{encode:validators["function"],serialize:validators["function"]},true);}}// Set config.method
config.method=(config.method||this.defaults.method||'get').toLowerCase();// Flatten headers
var contextHeaders=headers&&utils$1.merge(headers.common,headers[config.method]);headers&&utils$1.forEach(['delete','get','head','post','put','patch','common'],function(method){delete headers[method];});config.headers=AxiosHeaders$1.concat(contextHeaders,headers);// filter out skipped interceptors
var requestInterceptorChain=[];var synchronousRequestInterceptors=true;this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==='function'&&interceptor.runWhen(config)===false){return;}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected);});var responseInterceptorChain=[];this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected);});var promise;var i=0;var len;if(!synchronousRequestInterceptors){var chain=[dispatchRequest.bind(this),undefined];chain.unshift.apply(chain,requestInterceptorChain);chain.push.apply(chain,responseInterceptorChain);len=chain.length;promise=Promise.resolve(config);while(i<len){promise=promise.then(chain[i++],chain[i++]);}return promise;}len=requestInterceptorChain.length;var newConfig=config;i=0;while(i<len){var onFulfilled=requestInterceptorChain[i++];var onRejected=requestInterceptorChain[i++];try{newConfig=onFulfilled(newConfig);}catch(error){onRejected.call(this,error);break;}}try{promise=dispatchRequest.call(this,newConfig);}catch(error){return Promise.reject(error);}i=0;len=responseInterceptorChain.length;while(i<len){promise=promise.then(responseInterceptorChain[i++],responseInterceptorChain[i++]);}return promise;}},{key:"getUri",value:function getUri(config){config=mergeConfig(this.defaults,config);var fullPath=buildFullPath(config.baseURL,config.url);return buildURL(fullPath,config.params,config.paramsSerializer);}}]);return Axios;}();// Provide aliases for supported request methods
utils$1.forEach(['delete','get','head','options'],function forEachMethodNoData(method){/*eslint func-names:0*/Axios.prototype[method]=function(url,config){return this.request(mergeConfig(config||{},{method:method,url:url,data:(config||{}).data}));};});utils$1.forEach(['post','put','patch'],function forEachMethodWithData(method){/*eslint func-names:0*/function generateHTTPMethod(isForm){return function httpMethod(url,data,config){return this.request(mergeConfig(config||{},{method:method,headers:isForm?{'Content-Type':'multipart/form-data'}:{},url:url,data:data}));};}Axios.prototype[method]=generateHTTPMethod();Axios.prototype[method+'Form']=generateHTTPMethod(true);});var Axios$1=Axios;/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */var CancelToken=/*#__PURE__*/function(){function CancelToken(executor){_classCallCheck(this,CancelToken);if(typeof executor!=='function'){throw new TypeError('executor must be a function.');}var resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});var token=this;// eslint-disable-next-line func-names
this.promise.then(function(cancel){if(!token._listeners)return;var i=token._listeners.length;while(i-->0){token._listeners[i](cancel);}token._listeners=null;});// eslint-disable-next-line func-names
this.promise.then=function(onfulfilled){var _resolve;// eslint-disable-next-line func-names
var promise=new Promise(function(resolve){token.subscribe(resolve);_resolve=resolve;}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve);};return promise;};executor(function cancel(message,config,request){if(token.reason){// Cancellation has already been requested
return;}token.reason=new CanceledError(message,config,request);resolvePromise(token.reason);});}/**
   * Throws a `CanceledError` if cancellation has been requested.
   */_createClass(CancelToken,[{key:"throwIfRequested",value:function throwIfRequested(){if(this.reason){throw this.reason;}}/**
   * Subscribe to the cancel signal
   */},{key:"subscribe",value:function subscribe(listener){if(this.reason){listener(this.reason);return;}if(this._listeners){this._listeners.push(listener);}else{this._listeners=[listener];}}/**
   * Unsubscribe from the cancel signal
   */},{key:"unsubscribe",value:function unsubscribe(listener){if(!this._listeners){return;}var index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1);}}/**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */}],[{key:"source",value:function source(){var cancel;var token=new CancelToken(function executor(c){cancel=c;});return{token:token,cancel:cancel};}}]);return CancelToken;}();var CancelToken$1=CancelToken;/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */function spread(callback){return function wrap(arr){return callback.apply(null,arr);};}/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */function isAxiosError(payload){return utils$1.isObject(payload)&&payload.isAxiosError===true;}var HttpStatusCode={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(HttpStatusCode).forEach(function(_ref12){var _ref13=_slicedToArray(_ref12,2),key=_ref13[0],value=_ref13[1];HttpStatusCode[value]=key;});var HttpStatusCode$1=HttpStatusCode;/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */function createInstance(defaultConfig){var context=new Axios$1(defaultConfig);var instance=bind(Axios$1.prototype.request,context);// Copy axios.prototype to instance
utils$1.extend(instance,Axios$1.prototype,context,{allOwnKeys:true});// Copy context to instance
utils$1.extend(instance,context,null,{allOwnKeys:true});// Factory for creating new instances
instance.create=function create(instanceConfig){return createInstance(mergeConfig(defaultConfig,instanceConfig));};return instance;}// Create the default instance to be exported
var axios=createInstance(defaults$1);// Expose Axios class to allow class inheritance
axios.Axios=Axios$1;// Expose Cancel & CancelToken
axios.CanceledError=CanceledError;axios.CancelToken=CancelToken$1;axios.isCancel=isCancel;axios.VERSION=VERSION;axios.toFormData=toFormData;// Expose AxiosError class
axios.AxiosError=AxiosError;// alias for CanceledError for backward compatibility
axios.Cancel=axios.CanceledError;// Expose all/spread
axios.all=function all(promises){return Promise.all(promises);};axios.spread=spread;// Expose isAxiosError
axios.isAxiosError=isAxiosError;// Expose mergeConfig
axios.mergeConfig=mergeConfig;axios.AxiosHeaders=AxiosHeaders$1;axios.formToJSON=function(thing){return formDataToJSON(utils$1.isHTMLForm(thing)?new FormData(thing):thing);};axios.getAdapter=adapters.getAdapter;axios.HttpStatusCode=HttpStatusCode$1;axios["default"]=axios;// this module should only have a default export
var axios$1=axios;var logLevelEnum={level:{LNone:'none',LError:'error',LDebug:'debug',LTrace:'trace'}};var logFormatEnum={formats:{JSON:'json',TEXT:'text'}};var Logger=/*#__PURE__*/function(){function Logger(){_classCallCheck(this,Logger);this.log_level=logLevelEnum.level.LNone;this.log_format=logFormatEnum.formats.TEXT;this.log_to_console=true;this.log_file_path;this.log_response_body=false;this.log_request_body=false;this.setLogger();}_createClass(Logger,[{key:"logLevelEnum",get:function get(){return logLevelEnum;}},{key:"logFormatEnum",get:function get(){return logFormatEnum;}},{key:"setLogger",value:function setLogger(){}},{key:"log",value:function log(level,statusCode,method,url,requestHeaders,responseHeaders,requestBody,responseBody){var content=this.formatLog(level,statusCode,method,url,requestHeaders,responseHeaders,requestBody,responseBody);if(typeof window!=='undefined'){var shouldLog=this.calculateLogLevel(level);if(shouldLog>0&&this.log_to_console===true){if(this.log_format===this.logFormatEnum.formats.JSON){console.log(content);}else{console.log("".concat(level.toUpperCase(),": ").concat(content));}}}else{if(this.logger.transports.length>0)this.logger.log(level,content);}}},{key:"calculateLogLevel",value:function calculateLogLevel(level){switch(this.log_level){case this.logLevelEnum.level.LError:if(level!==this.logLevelEnum.level.LError){return-1;}return 1;case this.logLevelEnum.level.LDebug:if(level===this.logLevelEnum.level.LTrace){return-1;}return 1;case this.logLevelEnum.level.LTrace:return 1;default:return-1;}}},{key:"formatLog",value:function formatLog(level,statusCode,method,url,requestHeaders,responseHeaders,requestBody,responseBody){var result;var localRequestHeaders=requestHeaders?JSON.parse(JSON.stringify(requestHeaders)):null;var localResponseHeaders=responseHeaders?JSON.parse(JSON.stringify(responseHeaders)):null;var localRequestBody=requestBody?JSON.parse(JSON.stringify(requestBody)):null;var localResponseBody=responseBody?JSON.parse(JSON.stringify(responseBody)):null;if(requestHeaders)localRequestHeaders['Authorization']='[REDACTED]';if(!this.log_request_body)localRequestBody=undefined;if(!this.log_response_body)localResponseBody=undefined;if(this.log_format&&this.log_format===logFormatEnum.formats.JSON){result={level:level,date:new Date().toISOString(),method:method,url:decodeURIComponent(url),correlationId:localResponseHeaders?localResponseHeaders['inin-correlation-id']?localResponseHeaders['inin-correlation-id']:'':'',statusCode:statusCode};if(localRequestHeaders)result.requestHeaders=localRequestHeaders;if(localResponseHeaders)result.responseHeaders=localResponseHeaders;if(localRequestBody)result.requestBody=localRequestBody;if(localResponseBody)result.responseBody=localResponseBody;}else{result="".concat(new Date().toISOString(),"\n=== REQUEST === \n").concat(this.formatValue('URL',decodeURIComponent(url))).concat(this.formatValue('Method',method)).concat(this.formatValue('Headers',this.formatHeaderString(localRequestHeaders))).concat(this.formatValue('Body',localRequestBody?JSON.stringify(localRequestBody,null,2):''),"\n=== RESPONSE ===\n").concat(this.formatValue('Status',statusCode)).concat(this.formatValue('Headers',this.formatHeaderString(localResponseHeaders))).concat(this.formatValue('CorrelationId',localResponseHeaders?localResponseHeaders['inin-correlation-id']?localResponseHeaders['inin-correlation-id']:'':'')).concat(this.formatValue('Body',localResponseBody?JSON.stringify(localResponseBody,null,2):''));}return result;}},{key:"formatHeaderString",value:function formatHeaderString(headers){var headerString='';if(!headers)return headerString;for(var _i=0,_Object$entries=Object.entries(headers);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];headerString+="\n\t".concat(key,": ").concat(value);}return headerString;}},{key:"formatValue",value:function formatValue(key,value){if(!value||value===''||value==='{}')return'';return"".concat(key,": ").concat(value,"\n");}},{key:"getLogLevel",value:function getLogLevel(level){switch(level){case'error':return logLevelEnum.level.LError;case'debug':return logLevelEnum.level.LDebug;case'trace':return logLevelEnum.level.LTrace;default:return logLevelEnum.level.LNone;}}},{key:"getLogFormat",value:function getLogFormat(format){switch(format){case'json':return logFormatEnum.formats.JSON;default:return logFormatEnum.formats.TEXT;}}}]);return Logger;}();var Configuration=/*#__PURE__*/function(){function Configuration(){_classCallCheck(this,Configuration);if(!Configuration.instance){Configuration.instance=this;}if(typeof window!=='undefined'){this.configPath='';}else{var os=require('os');var path=require('path');this.configPath=path.join(os.homedir(),'.genesyscloudjavascript','config');}this.refresh_access_token=true;this.refresh_token_wait_max=10;this.live_reload_config=true;this.host;this.environment;this.basePath;this.authUrl;this.config;this.logger=new Logger();this.setEnvironment();this.liveLoadConfig();}_createClass(Configuration,[{key:"instance",get:/**
	 * Singleton getter
	 */function get(){return Configuration.instance;}/**
	 * Singleton setter
	 */,set:function set(value){Configuration.instance=value;}},{key:"liveLoadConfig",value:function liveLoadConfig(){// If in browser, don't read config file, use default values
this.configPath='';}},{key:"setConfigPath",value:function setConfigPath(path){if(path&&path!==this.configPath){this.configPath=path;this.liveLoadConfig();}}},{key:"updateConfigFromFile",value:function updateConfigFromFile(){}},{key:"updateConfigValues",value:function updateConfigValues(){this.logger.log_level=this.logger.getLogLevel(this.getConfigString('logging','log_level'));this.logger.log_format=this.logger.getLogFormat(this.getConfigString('logging','log_format'));this.logger.log_to_console=this.getConfigBoolean('logging','log_to_console')!==undefined?this.getConfigBoolean('logging','log_to_console'):this.logger.log_to_console;this.logger.log_file_path=this.getConfigString('logging','log_file_path')!==undefined?this.getConfigString('logging','log_file_path'):this.logger.log_file_path;this.logger.log_response_body=this.getConfigBoolean('logging','log_response_body')!==undefined?this.getConfigBoolean('logging','log_response_body'):this.logger.log_response_body;this.logger.log_request_body=this.getConfigBoolean('logging','log_request_body')!==undefined?this.getConfigBoolean('logging','log_request_body'):this.logger.log_request_body;this.refresh_access_token=this.getConfigBoolean('reauthentication','refresh_access_token')!==undefined?this.getConfigBoolean('reauthentication','refresh_access_token'):this.refresh_access_token;this.refresh_token_wait_max=this.getConfigInt('reauthentication','refresh_token_wait_max')!==undefined?this.getConfigInt('reauthentication','refresh_token_wait_max'):this.refresh_token_wait_max;this.live_reload_config=this.getConfigBoolean('general','live_reload_config')!==undefined?this.getConfigBoolean('general','live_reload_config'):this.live_reload_config;this.host=this.getConfigString('general','host')!==undefined?this.getConfigString('general','host'):this.host;this.setEnvironment();// Update logging configs
this.logger.setLogger();}},{key:"setEnvironment",value:function setEnvironment(env){// Default value
if(env)this.environment=env;else this.environment=this.host?this.host:'mypurecloud.com';// Strip trailing slash
this.environment=this.environment.replace(/\/+$/,'');// Strip protocol and subdomain
if(this.environment.startsWith('https://'))this.environment=this.environment.substring(8);if(this.environment.startsWith('http://'))this.environment=this.environment.substring(7);if(this.environment.startsWith('api.'))this.environment=this.environment.substring(4);this.basePath="https://api.".concat(this.environment);this.authUrl="https://login.".concat(this.environment);}},{key:"getConfigString",value:function getConfigString(section,key){if(this.config._sections[section])return this.config._sections[section][key];}},{key:"getConfigBoolean",value:function getConfigBoolean(section,key){if(this.config._sections[section]&&this.config._sections[section][key]!==undefined){if(typeof this.config._sections[section][key]==='string'){return this.config._sections[section][key]==='true';}else return this.config._sections[section][key];}}},{key:"getConfigInt",value:function getConfigInt(section,key){if(this.config._sections[section]&&this.config._sections[section][key]){if(typeof this.config._sections[section][key]==='string'){return parseInt(this.config._sections[section][key]);}else return this.config._sections[section][key];}}}]);return Configuration;}();/**
 * @module purecloud-platform-client-v2/ApiClient
 * @version 185.0.0
 */var ApiClient=/*#__PURE__*/function(){/**
	 * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an
	 * application to use this class directly - the *Api and model classes provide the public API for the service. The
	 * contents of this file should be regarded as internal but are documented for completeness.
	 * @alias module:purecloud-platform-client-v2/ApiClient
	 * @class
	 */function ApiClient(){_classCallCheck(this,ApiClient);/**
		 * @description The default API client implementation.
		 * @type {module:purecloud-platform-client-v2/ApiClient}
		 */if(!ApiClient.instance){ApiClient.instance=this;}/**
		 * Enumeration of collection format separator strategies.
		 * @enum {String}
		 * @readonly
		 */this.CollectionFormatEnum={/**
			 * Comma-separated values. Value: <code>csv</code>
			 * @const
			 */CSV:',',/**
			 * Space-separated values. Value: <code>ssv</code>
			 * @const
			 */SSV:' ',/**
			 * Tab-separated values. Value: <code>tsv</code>
			 * @const
			 */TSV:'\t',/**
			 * Pipe(|)-separated values. Value: <code>pipes</code>
			 * @const
			 */PIPES:'|',/**
			 * Native array. Value: <code>multi</code>
			 * @const
			 */MULTI:'multi'};/**
		 * @description Value is `true` if local storage exists. Otherwise, false.
		 */try{localStorage.setItem('purecloud_local_storage_test','purecloud_local_storage_test');localStorage.removeItem('purecloud_local_storage_test');this.hasLocalStorage=true;}catch(e){this.hasLocalStorage=false;}/**
		 * The authentication methods to be included for all API calls.
		 * @type {Array.<String>}
		 */this.authentications={'Guest Chat JWT':{type:'apiKey','in':'header',name:'Authorization'},'PureCloud OAuth':{type:'oauth2'}};/**
		 * The default HTTP headers to be included for all API calls.
		 * @type {Array.<String>}
		 * @default {}
		 */this.defaultHeaders={};/**
		 * The default HTTP timeout for all API calls.
		 * @type {Number}
		 * @default 60000
		 */this.timeout=16000;this.authData={};this.settingsPrefix='purecloud';// Transparently request a new access token when it expires (Code Authorization only)
this.refreshInProgress=false;this.config=new Configuration();if(typeof window!=='undefined')window.ApiClient=this;}/**
	 * @description If set to `true`, the response object will contain additional information about the HTTP response. When `false` (default) only the body object will be returned.
	 * @param {boolean} returnExtended - `true` to return extended responses
	 */_createClass(ApiClient,[{key:"instance",get:/**
	 * Singleton getter
	 */function get(){return ApiClient.instance;}/**
	 * Singleton setter
	 */,set:function set(value){ApiClient.instance=value;}},{key:"setReturnExtendedResponses",value:function setReturnExtendedResponses(returnExtended){this.returnExtended=returnExtended;}/**
	 * @description When `true`, persists the auth token to local storage to avoid a redirect to the login page on each page load. Defaults to `false`.
	 * @param {boolean} doPersist - `true` to persist the auth token to local storage
	 * @param {string} prefix - (Optional, default 'purecloud') The name prefix used for the local storage key
	 */},{key:"setPersistSettings",value:function setPersistSettings(doPersist,prefix){this.persistSettings=doPersist;this.settingsPrefix=prefix?prefix.replace(/\W+/g,'_'):'purecloud';}/**
	 * @description Saves the auth token to local storage, if enabled.
	 */},{key:"_saveSettings",value:function _saveSettings(opts){try{this.authData.accessToken=opts.accessToken;this.authentications['PureCloud OAuth'].accessToken=opts.accessToken;if(opts.state){this.authData.state=opts.state;}this.authData.error=opts.error;this.authData.error_description=opts.error_description;if(opts.tokenExpiryTime){this.authData.tokenExpiryTime=opts.tokenExpiryTime;this.authData.tokenExpiryTimeString=opts.tokenExpiryTimeString;}// Don't save settings if we aren't supposed to be persisting them
if(this.persistSettings!==true)return;// Ensure we can access local storage
if(!this.hasLocalStorage){return;}// Remove state from data so it's not persisted
var tempData=JSON.parse(JSON.stringify(this.authData));delete tempData.state;// Save updated auth data
localStorage.setItem("".concat(this.settingsPrefix,"_auth_data"),JSON.stringify(tempData));}catch(e){console.error(e);}}/**
	 * @description Loads settings from local storage, if enabled.
	 */},{key:"_loadSettings",value:function _loadSettings(){// Don't load settings if we aren't supposed to be persisting them
if(this.persistSettings!==true)return;// Ensure we can access local storage
if(!this.hasLocalStorage){return;}// Load current auth data
var tempState=this.authData.state;this.authData=localStorage.getItem("".concat(this.settingsPrefix,"_auth_data"));if(!this.authData)this.authData={};else this.authData=JSON.parse(this.authData);if(this.authData.accessToken)this.setAccessToken(this.authData.accessToken);this.authData.state=tempState;}/**
	 * @description Sets the environment used by the session
	 * @param {string} environment - (Optional, default "mypurecloud.com") Environment the session use, e.g. mypurecloud.ie, mypurecloud.com.au, etc.
	 */},{key:"setEnvironment",value:function setEnvironment(environment){this.config.setEnvironment(environment);}/**
	 * @description Initiates the implicit grant login flow. Will attempt to load the token from local storage, if enabled.
	 * @param {string} clientId - The client ID of an OAuth Implicit Grant client
	 * @param {string} redirectUri - The redirect URI of the OAuth Implicit Grant client
	 * @param {object} opts - (optional) Additional options
	 * @param {string} opts.state - (optional) An arbitrary string to be passed back with the login response. Used for client apps to associate login responses with a request.
	 * @param {string} opts.org - (optional) The organization name that would normally used when specifying an organization name when logging in. This is only used when a provider is also specified.
	 * @param {string} opts.provider - (optional) Authentication provider to log in with e.g. okta, adfs, salesforce, onelogin. This is only used when an org is also specified.
	 */},{key:"loginImplicitGrant",value:function loginImplicitGrant(clientId,redirectUri,opts){var _this=this;// Check for auth token in hash
var hash=this._setValuesFromUrlHash();this.clientId=clientId;this.redirectUri=redirectUri;if(!opts)opts={};return new Promise(function(resolve,reject){// Abort if org and provider are not set together
if(opts.org&&!opts.provider){reject(new Error('opts.provider must be set if opts.org is set'));}else if(opts.provider&&!opts.org){reject(new Error('opts.org must be set if opts.provider is set'));}// Abort on auth error
if(hash&&hash.error){hash.accessToken=undefined;_this._saveSettings(hash);return reject(new Error("[".concat(hash.error,"] ").concat(hash.error_description)));}// Test token and proceed with login
_this._testTokenAccess().then(function(){if(!_this.authData.state&&opts.state)_this.authData.state=opts.state;resolve(_this.authData);})["catch"](function(error){var query={client_id:encodeURIComponent(_this.clientId),redirect_uri:encodeURIComponent(_this.redirectUri),response_type:'token'};if(opts.state)query.state=encodeURIComponent(opts.state);if(opts.org)query.org=encodeURIComponent(opts.org);if(opts.provider)query.provider=encodeURIComponent(opts.provider);var url=_this._buildAuthUrl('oauth/authorize',query);window.location.replace(url);});});}/**
	 * @description Initiates the client credentials login flow. Only available in node apps.
	 * @param {string} clientId - The client ID of an OAuth Implicit Grant client
	 * @param {string} clientSecret - The client secret of an OAuth Implicit Grant client
	 */},{key:"loginClientCredentialsGrant",value:function loginClientCredentialsGrant(clientId,clientSecret){var _this2=this;this.clientId=clientId;var authHeader=Buffer.from("".concat(clientId,":").concat(clientSecret)).toString('base64');return new Promise(function(resolve,reject){// Block browsers from using client credentials
if(typeof window!=='undefined'){reject(new Error('The client credentials grant is not supported in a browser.'));return;}var headers={'Authorization':"Basic ".concat(authHeader)};axios$1({method:"POST",url:"https://login.".concat(_this2.config.environment,"/oauth/token"),headers:headers,data:'grant_type=client_credentials',httpsAgent:_this2.proxyAgent}).then(function(response){// Logging
_this2.config.logger.log('trace',response.status,'POST',"https://login.".concat(_this2.config.environment,"/oauth/token"),headers,response.headers,{grant_type:'client_credentials'},undefined);_this2.config.logger.log('debug',response.status,'POST',"https://login.".concat(_this2.config.environment,"/oauth/token"),headers,undefined,{grant_type:'client_credentials'},undefined);// Save access token
_this2.setAccessToken(response.data['access_token']);// Set expiry time
_this2.authData.tokenExpiryTime=new Date().getTime()+response.data['expires_in']*1000;_this2.authData.tokenExpiryTimeString=new Date(_this2.authData.tokenExpiryTime).toUTCString();// Return auth data
resolve(_this2.authData);})["catch"](function(error){// Log error
if(error.response){_this2.config.logger.log('error',error.response.status,'POST',"https://login.".concat(_this2.config.environment,"/oauth/token"),headers,error.response.headers,{grant_type:'client_credentials'},error.response.data);}reject(error);});});}/**
	 * @description Initiates the Saml2Bearerflow. Only available in node apps.
	 * @param {string} clientId - The client ID of an OAuth Implicit Grant client
	 * @param {string} clientSecret - The client secret of an OAuth Implicit Grant client
	 * @param {string} orgName - The orgName of an OAuth Implicit Grant client
	 * @param {string} assertion - The saml2bearer assertion
	 */},{key:"loginSaml2BearerGrant",value:function loginSaml2BearerGrant(clientId,clientSecret,orgName,assertion){var _this3=this;this.clientId=clientId;return new Promise(function(resolve,reject){if(typeof window!=='undefined'){reject(new Error('The saml2bearer grant is not supported in a browser.'));return;}var encodedData=Buffer.from(clientId+':'+clientSecret).toString('base64');var request=_this3._formAuthRequest(encodedData,{grant_type:'urn:ietf:params:oauth:grant-type:saml2-bearer',orgName:orgName,assertion:assertion});request.proxy=_this3.proxy;var bodyParam={grant_type:'urn:ietf:params:oauth:grant-type:saml2-bearer',orgName:orgName,assertion:assertion};// Handle response
request.then(function(response){// Logging
_this3.config.logger.log('trace',response.status,'POST',"https://login.".concat(_this3.config.environment,"/oauth/token"),request.headers,response.headers,bodyParam,undefined);_this3.config.logger.log('debug',response.status,'POST',"https://login.".concat(_this3.config.environment,"/oauth/token"),request.headers,undefined,bodyParam,undefined);// Get access token from response
var access_token=response.data.access_token;_this3.setAccessToken(access_token);_this3.authData.tokenExpiryTime=new Date().getTime()+response.data['expires_in']*1000;_this3.authData.tokenExpiryTimeString=new Date(_this3.authData.tokenExpiryTime).toUTCString();// Return auth data
resolve(_this3.authData);})["catch"](function(error){// Log error
if(error.response){_this3.config.logger.log('error',error.response.status,'POST',"https://login.".concat(_this3.config.environment,"/oauth/token"),request.headers,error.response.headers,bodyParam,error.response.data);}reject(error);});});}/**
	 * @description Completes the PKCE Code Authorization.
	 * @param {string} clientId - The client ID of an OAuth Code Authorization Grant client
	 * @param {string} codeVerifier - code verifier used to generate the code challenge
	 * @param {string} authCode - Authorization code
	 * @param {string} redirectUri - Authorized redirect URI for your Code Authorization client
	 */},{key:"authorizePKCEGrant",value:function authorizePKCEGrant(clientId,codeVerifier,authCode,redirectUri){var _this4=this;this.clientId=clientId;return new Promise(function(resolve,reject){var request=axios$1({method:"POST",url:"https://login.".concat(_this4.config.environment,"/oauth/token"),headers:{'Content-Type':'application/x-www-form-urlencoded'},data:qs__default["default"].stringify({grant_type:'authorization_code',code:authCode,code_verifier:codeVerifier,client_id:clientId,redirect_uri:redirectUri})});request.proxy=_this4.proxy;var bodyParam={grant_type:'authorization_code',code:authCode,code_verifier:codeVerifier,client_id:clientId,redirect_uri:redirectUri};// Handle response
request.then(function(response){// Logging
_this4.config.logger.log('trace',response.status,'POST',"https://login.".concat(_this4.config.environment,"/oauth/token"),request.headers,response.headers,bodyParam,undefined);_this4.config.logger.log('debug',response.status,'POST',"https://login.".concat(_this4.config.environment,"/oauth/token"),request.headers,undefined,bodyParam,undefined);// Get access token from response
var access_token=response.data.access_token;_this4.setAccessToken(access_token);_this4.authData.tokenExpiryTime=new Date().getTime()+response.data['expires_in']*1000;_this4.authData.tokenExpiryTimeString=new Date(_this4.authData.tokenExpiryTime).toUTCString();// Return auth data
resolve(_this4.authData);})["catch"](function(error){// Log error
if(error.response){_this4.config.logger.log('error',error.response.status,'POST',"https://login.".concat(_this4.config.environment,"/oauth/token"),request.headers,error.response.headers,bodyParam,error.response.data);}reject(error);});});}/**
	 * @description Generate a random string used as PKCE Code Verifier - length = 43 to 128.
	 * @param {number} nChar - code length
	 */},{key:"generatePKCECodeVerifier",value:function generatePKCECodeVerifier(nChar){if(nChar<43||nChar>128){throw new Error("PKCE Code Verifier (length) must be between 43 and 128 characters");}// Check for window
{var unreservedCharacters="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~";var randomString=Array.from(crypto.getRandomValues(new Uint32Array(nChar))).map(function(x){return unreservedCharacters[x%unreservedCharacters.length];}).join('');return randomString;}}/**
	 * @description Compute Base64Url PKCE Code Challenge from Code Verifier.
	 * @param {string} code - code verifier used to generate the code challenge
	 */},{key:"computePKCECodeChallenge",value:function computePKCECodeChallenge(code){if(code.length<43||code.length>128){throw new Error("PKCE Code Verifier (length) must be between 43 and 128 characters");}// Check for window
{// browser
var utf8=new TextEncoder().encode(code);return new Promise(function(resolve,reject){window.crypto.subtle.digest("SHA-256",utf8).then(function(hashBuffer){var hashBase64=Buffer.from(hashBuffer).toString('base64');var hashBase64Url=hashBase64.replaceAll("+","-").replaceAll("/","_");hashBase64Url=hashBase64Url.split("=")[0];resolve(hashBase64Url);})["catch"](function(error){// Handle failure
return reject(new Error("Code Challenge Error ".concat(error)));});});}}/**
    * @description Initiates the pkce auth code grant login flow. Will attempt to load the token from local storage, if enabled.
    * @param {string} clientId - The client ID of an OAuth Implicit Grant client
    * @param {string} redirectUri - The redirect URI of the OAuth Implicit Grant client
    * @param {object} opts - (optional) Additional options
    * @param {string} opts.state - (optional) An arbitrary string to be passed back with the login response. Used for client apps to associate login responses with a request.
    * @param {string} opts.org - (optional) The organization name that would normally used when specifying an organization name when logging in. This is only used when a provider is also specified.
    * @param {string} opts.provider - (optional) Authentication provider to log in with e.g. okta, adfs, salesforce, onelogin. This is only used when an org is also specified.
    * @param {string} codeVerifier - (optional) code verifier used to generate the code challenge
    */},{key:"loginPKCEGrant",value:function loginPKCEGrant(clientId,redirectUri,opts,codeVerifier){var _this5=this;// Need Local Storage or non null codeVerifier as parameter
if(!this.hasLocalStorage&&!codeVerifier){throw new Error("loginPKCEGrant requires Local Storage or codeVerifier as input parameter");}// Check for auth code in query
var query=this._setValuesFromUrlQuery();this.clientId=clientId;this.redirectUri=redirectUri;this.codeVerifier=codeVerifier;if(!opts)opts={};return new Promise(function(resolve,reject){// Abort if org and provider are not set together
if(opts.org&&!opts.provider){reject(new Error('opts.provider must be set if opts.org is set'));}else if(opts.provider&&!opts.org){reject(new Error('opts.org must be set if opts.provider is set'));}// Abort on auth error
if(query&&query.error){// remove codeVerifier from session storage
if(_this5.hasLocalStorage){sessionStorage.removeItem("genesys_cloud_sdk_pkce_code_verifier");}// reset access token if any was stored
_this5._saveSettings({accessToken:undefined});return reject(new Error("[".concat(query.error,"] ").concat(query.error_description)));}// Get token on auth code
if(query&&query.code){if(!_this5.codeVerifier){// load codeVerifier from session storage
if(_this5.hasLocalStorage){_this5.codeVerifier=sessionStorage.getItem("genesys_cloud_sdk_pkce_code_verifier");}}_this5.authorizePKCEGrant(_this5.clientId,_this5.codeVerifier,query.code,_this5.redirectUri).then(function(){// Do authenticated things
_this5._testTokenAccess().then(function(){if(!_this5.authData.state&&query.state)_this5.authData.state=query.state;// remove codeVerifier from session storage
if(_this5.hasLocalStorage){sessionStorage.removeItem("genesys_cloud_sdk_pkce_code_verifier");}resolve(_this5.authData);})["catch"](function(error){// Handle failure response
_this5._saveSettings({accessToken:undefined});// remove codeVerifier from session storage
if(_this5.hasLocalStorage){sessionStorage.removeItem("genesys_cloud_sdk_pkce_code_verifier");}return reject(new Error("[".concat(error.name,"] ").concat(error.msg)));});})["catch"](function(error){// Handle failure response
_this5._saveSettings({accessToken:undefined});// remove codeVerifier from session storage
if(_this5.hasLocalStorage){sessionStorage.removeItem("genesys_cloud_sdk_pkce_code_verifier");}return reject(new Error("[".concat(error.name,"] ").concat(error.msg)));});}else{// Test token (if previously stored) and proceed with login
_this5._testTokenAccess().then(function(){if(!_this5.authData.state&&opts.state)_this5.authData.state=opts.state;resolve(_this5.authData);})["catch"](function(error){if(!_this5.codeVerifier){_this5.codeVerifier=_this5.generatePKCECodeVerifier(128);// save codeVerifier in session storage
if(_this5.hasLocalStorage){sessionStorage.setItem("genesys_cloud_sdk_pkce_code_verifier",_this5.codeVerifier);}}_this5.computePKCECodeChallenge(_this5.codeVerifier).then(function(codeChallenge){var tokenQuery={client_id:encodeURIComponent(_this5.clientId),redirect_uri:encodeURIComponent(_this5.redirectUri),code_challenge:encodeURIComponent(codeChallenge),response_type:'code',code_challenge_method:'S256'};if(opts.state)tokenQuery.state=encodeURIComponent(opts.state);if(opts.org)tokenQuery.org=encodeURIComponent(opts.org);if(opts.provider)tokenQuery.provider=encodeURIComponent(opts.provider);var url=_this5._buildAuthUrl('oauth/authorize',tokenQuery);window.location.replace(url);})["catch"](function(err){return reject(new Error("[".concat(err.name,"]")));});});}});}/**
    * @description Parses the URL Query, grabs the code, and clears the query param. If no code is found, no action is taken.
    */},{key:"_setValuesFromUrlQuery",value:function _setValuesFromUrlQuery(){// Check for window
if(!(typeof window!=='undefined'&&window.location.search))return;// Process query string
var query={};var queryParams=new URLSearchParams(window.location.search);var code=queryParams.get('code');var error=queryParams.get('error');var errorDescription=queryParams.get('error_description');var state=queryParams.get('state');// Check for error
if(error){query.error=error;if(errorDescription){query.error_description=errorDescription;}return query;}// Everything goes in here because we only want to act if we found an access token
if(code){query.code=code;if(state){query.state=state;}}// Remove code from URL
// Credit: https://stackoverflow.com/questions/1397329/how-to-remove-the-hash-from-window-location-with-javascript-without-page-refresh/5298684#5298684
var scrollV,scrollH,loc=window.location;if('replaceState'in history){history.replaceState('',document.title,loc.pathname);}else{// Prevent scrolling by storing the page's current scroll offset
scrollV=document.body.scrollTop;scrollH=document.body.scrollLeft;// Remove code
history.pushState('',document.title,loc.pathname);// Restore the scroll offset, should be flicker free
document.body.scrollTop=scrollV;document.body.scrollLeft=scrollH;}return query;}/**
	 * @description Initiates the Code Authorization. Only available in node apps.
	 * @param {string} clientId - The client ID of an OAuth Code Authorization Grant client
	 * @param {string} clientSecret - The client secret of an OAuth Code Authorization Grant client
	 * @param {string} authCode - Authorization code
	 * @param {string} redirectUri - Authorized redirect URI for your Code Authorization client
	 */},{key:"loginCodeAuthorizationGrant",value:function loginCodeAuthorizationGrant(clientId,clientSecret,authCode,redirectUri){var _this6=this;this.clientId=clientId;this.clientSecret=clientSecret;return new Promise(function(resolve,reject){if(typeof window!=='undefined'){reject(new Error('The Code Authorization grant is not supported in a browser.'));return;}var encodedData=Buffer.from(clientId+':'+clientSecret).toString('base64');var request=_this6._formAuthRequest(encodedData,{grant_type:'authorization_code',code:authCode,redirect_uri:redirectUri});request.proxy=_this6.proxy;var bodyParam={grant_type:'authorization_code',code:authCode,redirect_uri:redirectUri};// Handle response
_this6._handleCodeAuthorizationResponse(request,bodyParam,resolve,reject);});}/**
	 * @description Requests a new access token for Code Authorization. Only available in node apps.
	 * @param {string} clientId - The client ID of an OAuth Code Authorization Grant client
	 * @param {string} clientSecret - The client secret of an OAuth Code Authorization Grant client
	 * @param {string} authCode - Authorization code
	 * @param {string} redirectUri - Authorized redirect URI for your Code Authorization client
	 */},{key:"refreshCodeAuthorizationGrant",value:function refreshCodeAuthorizationGrant(clientId,clientSecret,refreshToken){var _this7=this;return new Promise(function(resolve,reject){if(typeof window!=='undefined'){reject(new Error('The Code Authorization grant is not supported in a browser.'));return;}var encodedData=Buffer.from(clientId+':'+clientSecret).toString('base64');var request=_this7._formAuthRequest(encodedData,{grant_type:'refresh_token',refresh_token:refreshToken});request.proxy=_this7.proxy;var bodyParam={grant_type:'refresh_token',refresh_token:refreshToken};// Handle response
_this7._handleCodeAuthorizationResponse(request,bodyParam,resolve,reject);});}/**
	 * @description Handles the response for code auth requests
	 * @param {object} request - Authorization request object
	 * @param {object} bodyParam - Input body data for authorization request
	 * @param {function} resolve - Promise resolve callback
	 * @param {function} reject - Promise reject callback
	 */},{key:"_handleCodeAuthorizationResponse",value:function _handleCodeAuthorizationResponse(request,bodyParam,resolve,reject){var _this8=this;request.then(function(response){// Logging
_this8.config.logger.log('trace',response.status,'POST',"https://login.".concat(_this8.config.environment,"/oauth/token"),request.headers,response.headers,bodyParam,undefined);_this8.config.logger.log('debug',response.status,'POST',"https://login.".concat(_this8.config.environment,"/oauth/token"),request.headers,undefined,bodyParam,undefined);// Get access token from response
var access_token=response.data.access_token;var refresh_token=response.data.refresh_token;_this8.setAccessToken(access_token);_this8.authData.refreshToken=refresh_token;_this8.authData.tokenExpiryTime=new Date().getTime()+response.data['expires_in']*1000;_this8.authData.tokenExpiryTimeString=new Date(_this8.authData.tokenExpiryTime).toUTCString();// Return auth data
resolve(_this8.authData);})["catch"](function(error){// Log error
if(error.response){_this8.config.logger.log('error',error.response.status,'POST',"https://login.".concat(_this8.config.environment,"/oauth/token"),request.headers,error.response.headers,bodyParam,error.response.data);}reject(error);});}/**
	 * @description Utility function to create the request for auth requests
	 * @param {string} encodedData - Base64 encoded client and clientSecret pair
	 * @param {object} data - data to url form encode
	 */},{key:"_formAuthRequest",value:function _formAuthRequest(encodedData,data){var request=axios$1({method:"POST",url:"https://login.".concat(this.config.environment,"/oauth/token"),headers:{'Authorization':'Basic '+encodedData,'Content-Type':'application/x-www-form-urlencoded'},data:qs__default["default"].stringify(data)});return request;}/**
	 * @description Handles an expired access token. Only available in node apps.
	 * @param {string} statusCode - The status code of a request
	 */},{key:"_handleExpiredAccessToken",value:function _handleExpiredAccessToken(){var _this9=this;return new Promise(function(resolve,reject){if(typeof window!=='undefined'){reject(new Error('This method is not supported in a browser.'));return;}if(!_this9.refreshInProgress){_this9.refreshInProgress=true;_this9.refreshCodeAuthorizationGrant(_this9.clientId,_this9.clientSecret,_this9.authData.refreshToken).then(function(){_this9.refreshInProgress=false;resolve();})["catch"](function(err){// Handle failure response
_this9.refreshInProgress=false;reject(err);});}else{// Wait refresh_token_wait_max seconds for other thread to complete refresh
_this9._sleep(_this9.config.refresh_token_wait_max).then(function(){if(_this9.refreshInProgress)reject(new Error("Token refresh took longer than ".concat(_this9.config.refresh_token_wait_max," seconds")));else resolve();});}});}/**
	 * @description Sleeps for a defined length
	 * @param {int} millis - Length to sleep in milliseconds
	 */},{key:"_sleep",value:function _sleep(millis){return new Promise(function(resolve){return setTimeout(resolve,millis);});}/**
	 * @description Loads token from storage, if enabled, and checks to ensure it works.
	 */},{key:"_testTokenAccess",value:function _testTokenAccess(){var _this10=this;return new Promise(function(resolve,reject){// Load from storage
_this10._loadSettings();// Check if there is a token to test
if(!_this10.authentications['PureCloud OAuth'].accessToken){reject(new Error('Token is not set'));return;}// Test token
_this10.callApi('/api/v2/tokens/me','GET',null,null,null,null,null,['PureCloud OAuth'],['application/json'],['application/json']).then(function(){resolve();})["catch"](function(error){_this10._saveSettings({accessToken:undefined});reject(error);});});}/**
	 * @description Parses the URL hash, grabs the access token, and clears the hash. If no access token is found, no action is taken.
	 */},{key:"_setValuesFromUrlHash",value:function _setValuesFromUrlHash(){// Check for window
if(!(typeof window!=='undefined'&&window.location.hash))return;// Process hash string into object
var hashRegex=new RegExp("^#*(.+?)=(.+?)$",'i');var hash={};window.location.hash.split('&').forEach(function(h){var match=hashRegex.exec(h);if(match)hash[match[1]]=decodeURIComponent(decodeURIComponent(match[2].replace(/\+/g,'%20')));});// Check for error
if(hash.error){return hash;}// Everything goes in here because we only want to act if we found an access token
if(hash.access_token){var opts={};if(hash.state){opts.state=hash.state;}if(hash.expires_in){opts.tokenExpiryTime=new Date().getTime()+parseInt(hash.expires_in.replace(/\+/g,'%20'))*1000;opts.tokenExpiryTimeString=new Date(opts.tokenExpiryTime).toUTCString();}// Set access token
opts.accessToken=hash.access_token.replace(/\+/g,'%20');// Remove hash from URL
// Credit: https://stackoverflow.com/questions/1397329/how-to-remove-the-hash-from-window-location-with-javascript-without-page-refresh/5298684#5298684
var scrollV,scrollH,loc=window.location;if('replaceState'in history){history.replaceState('',document.title,loc.pathname+loc.search);}else{// Prevent scrolling by storing the page's current scroll offset
scrollV=document.body.scrollTop;scrollH=document.body.scrollLeft;// Remove hash
loc.hash='';// Restore the scroll offset, should be flicker free
document.body.scrollTop=scrollV;document.body.scrollLeft=scrollH;}this._saveSettings(opts);}}/**
	 * @description Sets the access token to be used with requests
	 * @param {string} token - The access token
	 */},{key:"setAccessToken",value:function setAccessToken(token){this._saveSettings({accessToken:token});}/**
	 * @description Sets the storage key to use when persisting the access token
	 * @param {string} storageKey - The storage key name
	 */},{key:"setStorageKey",value:function setStorageKey(storageKey){// Set storage key
this.storageKey=storageKey;// Trigger storage of current token
this.setAccessToken(this.authentications['PureCloud OAuth'].accessToken);}/**
	 * @description Redirects the user to the PureCloud logout page
	 */},{key:"logout",value:function logout(logoutRedirectUri){if(this.hasLocalStorage){this._saveSettings({accessToken:undefined,state:undefined,tokenExpiryTime:undefined,tokenExpiryTimeString:undefined});}var query={client_id:encodeURIComponent(this.clientId)};if(logoutRedirectUri)query['redirect_uri']=encodeURI(logoutRedirectUri);var url=this._buildAuthUrl('logout',query);window.location.replace(url);}/**
	 * @description Constructs a URL to the auth server
	 * @param {string} path - The path for the URL
	 * @param {object} query - An object of key/value pairs to use for querystring keys/values
	 */},{key:"_buildAuthUrl",value:function _buildAuthUrl(path,query){if(!query)query={};return Object.keys(query).reduce(function(url,key){return!query[key]?url:"".concat(url,"&").concat(key,"=").concat(query[key]);},"".concat(this.config.authUrl,"/").concat(path,"?"));}/**
	 * Returns a string representation for an actual parameter.
	 * @param param The actual parameter.
	 * @returns {String} The string representation of <code>param</code>.
	 */},{key:"paramToString",value:function paramToString(param){if(!param){return'';}if(param instanceof Date){return param.toJSON();}return param.toString();}/**
	 * Returns query parameters serialized in the format needed for an axios request.
	 * @param param The unserialized query parameters.
	 * @returns {Object} The serialized representation the query parameters.
	 */},{key:"serialize",value:function serialize(obj){var result={};for(var p in obj){if(obj.hasOwnProperty(p)&&obj[p]!==undefined){result[encodeURIComponent(p)]=Array.isArray(obj[p])?obj[p].join(","):this.paramToString(obj[p]);}}return result;}/**
	 * Adds headers onto an existing header object (may be empty)
	 * @param existingHeaders The existing header object.
	 * @param newHeaders New headers.
	 * @returns {Object} The combination of all headers.
	 */},{key:"addHeaders",value:function addHeaders(existingHeaders){for(var _len3=arguments.length,newHeaders=new Array(_len3>1?_len3-1:0),_key4=1;_key4<_len3;_key4++){newHeaders[_key4-1]=arguments[_key4];}if(existingHeaders){existingHeaders=Object.assign.apply(Object,[existingHeaders].concat(newHeaders));}else{existingHeaders=Object.assign.apply(Object,newHeaders);}return existingHeaders;}/**
	 * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.
	 * NOTE: query parameters are not handled here.
	 * @param {String} path The path to append to the base URL.
	 * @param {Object} pathParams The parameter values to append.
	 * @returns {String} The encoded path with parameter values substituted.
	 */},{key:"buildUrl",value:function buildUrl(path,pathParams){var _this11=this;if(!path.match(/^\//)){path="/".concat(path);}var url=this.config.basePath+path;url=url.replace(/\{([\w-]+)\}/g,function(fullMatch,key){var value;if(pathParams.hasOwnProperty(key)){value=_this11.paramToString(pathParams[key]);}else{value=fullMatch;}return encodeURIComponent(value);});return url;}/**
	 * Checks whether the given content type represents JSON.<br>
	 * JSON content type examples:<br>
	 * <ul>
	 * <li>application/json</li>
	 * <li>application/json; charset=UTF8</li>
	 * <li>APPLICATION/JSON</li>
	 * </ul>
	 * @param {String} contentType The MIME content type to check.
	 * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.
	 */},{key:"isJsonMime",value:function isJsonMime(contentType){return Boolean(contentType&&contentType.match(/^application\/json(;.*)?$/i));}/**
	 * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.
	 * @param {Array.<String>} contentTypes
	 * @returns {String} The chosen content type, preferring JSON.
	 */},{key:"jsonPreferredMime",value:function jsonPreferredMime(contentTypes){for(var i=0;i<contentTypes.length;i++){if(this.isJsonMime(contentTypes[i])){return contentTypes[i];}}return contentTypes[0];}/**
	 * Checks whether the given parameter value represents file-like content.
	 * @param param The parameter to check.
	 * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.
	 */},{key:"isFileParam",value:function isFileParam(param){// Buffer in Node.js
if(typeof Buffer==='function'&&param instanceof Buffer){return true;}// Blob in browser
if(typeof Blob==='function'&&param instanceof Blob){return true;}// File in browser (it seems File object is also instance of Blob, but keep this for safe)
if(typeof File==='function'&&param instanceof File){return true;}return false;}/**
	 * Normalizes parameter values:
	 * <ul>
	 * <li>remove nils</li>
	 * <li>keep files and arrays</li>
	 * <li>format to string with `paramToString` for other cases</li>
	 * </ul>
	 * @param {Object.<String, Object>} params The parameters as object properties.
	 * @returns {Object.<String, Object>} normalized parameters.
	 */},{key:"normalizeParams",value:function normalizeParams(params){var newParams={};for(var key in params){if(params.hasOwnProperty(key)&&params[key]!==undefined){var value=params[key];if(this.isFileParam(value)||Array.isArray(value)){newParams[key]=value;}else{newParams[key]=this.paramToString(value);}}}return newParams;}/**
	 * Builds a string representation of an array-type actual parameter, according to the given collection format.
	 * @param {Array} param An array parameter.
	 * @param {module:purecloud-platform-client-v2/ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.
	 * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns
	 * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.
	 */},{key:"buildCollectionParam",value:function buildCollectionParam(param,collectionFormat){if(!param)return;if(!Array.isArray(param)){param=[param];}switch(collectionFormat){case'csv':return param.map(this.paramToString).join(',');case'ssv':return param.map(this.paramToString).join(' ');case'tsv':return param.map(this.paramToString).join('\t');case'pipes':return param.map(this.paramToString).join('|');case'multi':// return the array directly as axios will handle it as expected
return param.map(this.paramToString);default:throw new Error("Unknown collection format: ".concat(collectionFormat));}}/**
	 * Applies authentication headers to the request.
	 * @param {Object} request The axios request config object.
	 * @param {Array.<String>} authNames An array of authentication method names.
	 */},{key:"applyAuthToRequest",value:function applyAuthToRequest(request,authNames){var _this12=this;authNames.forEach(function(authName){var auth=_this12.authentications[authName];switch(auth.type){case'basic':if(auth.username||auth.password){request.auth={username:auth.username||'',password:auth.password||''};}break;case'apiKey':if(auth.apiKey){var data={};if(auth.apiKeyPrefix){data[auth.name]="".concat(auth.apiKeyPrefix," ").concat(auth.apiKey);}else{data[auth.name]=auth.apiKey;}if(auth['in']==='header'){request.headers=_this12.addHeaders(request.headers,data);}else{request.params=_this12.serialize(data);}}break;case'oauth2':if(auth.accessToken){request.headers=_this12.addHeaders(request.headers,{'Authorization':"Bearer ".concat(auth.accessToken)});}break;default:throw new Error("Unknown authentication type: ".concat(auth.type));}});}/**
	 * @description Sets the proxy agent axios will use for requests 
	 * @param {any} agent - The proxy agent
	 */},{key:"setProxyAgent",value:function setProxyAgent(agent){this.proxyAgent=agent;}/**
	 * Invokes the REST service using the supplied settings and parameters.
	 * @param {String} path The base URL to invoke.
	 * @param {String} httpMethod The HTTP method to use.
	 * @param {Object.<String, String>} pathParams A map of path parameters and their values.
	 * @param {Object.<String, Object>} queryParams A map of query parameters and their values.
	 * @param {Object.<String, Object>} headerParams A map of header parameters and their values.
	 * @param {Object.<String, Object>} formParams A map of form parameters and their values.
	 * @param {Object} bodyParam The value to pass as the request body.
	 * @param {Array.<String>} authNames An array of authentication type names.
	 * @param {Array.<String>} contentTypes An array of request MIME types.
	 * @param {Array.<String>} accepts An array of acceptable response MIME types.types or the
	 * constructor for a complex type.
	 * @returns {Promise} A Promise object.
	 */},{key:"callApi",value:function callApi(path,httpMethod,pathParams,queryParams,headerParams,formParams,bodyParam,authNames,contentTypes,accepts){var _this13=this;return new Promise(function(resolve,reject){sendRequest(_this13);function sendRequest(that){var url=that.buildUrl(path,pathParams);var request={method:httpMethod,url:url,httpsAgent:that.proxyAgent,timeout:that.timeout,params:that.serialize(queryParams)};// apply authentications
that.applyAuthToRequest(request,authNames);// set header parameters
var defaultHeaders=that.defaultHeaders;var normalizedHeaderParams=that.normalizeParams(headerParams);request.headers=that.addHeaders(request.headers,defaultHeaders,normalizedHeaderParams);var contentType=that.jsonPreferredMime(contentTypes);if(contentType){request.headers['Content-Type']=contentType;}else if(!request.headers['Content-Type']){request.headers['Content-Type']='application/json';}if(contentType==='application/x-www-form-urlencoded'){request.data=that.normalizeParams(formParams);}else if(contentType=='multipart/form-data'){var _formParams=that.normalizeParams(formParams);for(var key in _formParams){if(_formParams.hasOwnProperty(key)){// Looks like axios handles files and forms the same way
var formData=new FormData();formData.set(key,_formParams[key]);request.data=formData;}}}else if(bodyParam){request.data=bodyParam;}var accept=that.jsonPreferredMime(accepts);if(accept){request.headers['Accept']=accept;}axios$1.request(request).then(function(response){// Build response object
var data=that.returnExtended===true?{status:response.status,statusText:response.statusText,headers:response.headers,body:response.data,text:response.text,error:null}:response.data?response.data:response.text;// Debug logging
that.config.logger.log('trace',response.status,httpMethod,url,request.headers,response.headers,bodyParam,undefined);that.config.logger.log('debug',response.status,httpMethod,url,request.headers,undefined,bodyParam,undefined);// Resolve promise
resolve(data);})["catch"](function(error){var data=error;if(error.response&&error.response.status==401&&that.config.refresh_access_token&&that.authData.refreshToken!==""){that._handleExpiredAccessToken().then(function(){sendRequest(that);})["catch"](function(err){reject(err);});}else if(error.response){// Log error
that.config.logger.log('error',error.response.status,httpMethod,url,request.headers,error.response.headers,bodyParam,error.response.data);data=that.returnExtended===true?{status:error.response.status,statusText:error.response.statusText,headers:error.response.headers,body:error.response.data,text:error.response.text,error:error}:error.response.data?error.response.data:error.response.text;}reject(data);});}});}}]);return ApiClient;}();var AlertingApi=/*#__PURE__*/function(){/**
	 * Alerting service.
	 * @module purecloud-platform-client-v2/api/AlertingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new AlertingApi. 
	 * @alias module:purecloud-platform-client-v2/api/AlertingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function AlertingApi(apiClient){_classCallCheck(this,AlertingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an alert
	 * 
	 * @param {String} alertId Alert ID
	 */_createClass(AlertingApi,[{key:"deleteAlertingAlert",value:function deleteAlertingAlert(alertId){// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling deleteAlertingAlert';}return this.apiClient.callApi('/api/v2/alerting/alerts/{alertId}','DELETE',{'alertId':alertId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an interaction stats alert
	 * Apps should migrate to use DELETE /api/v2/alerting/alerts/{alertId}.
	 * @param {String} alertId Alert ID
	 * @deprecated
	 */},{key:"deleteAlertingInteractionstatsAlert",value:function deleteAlertingInteractionstatsAlert(alertId){// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling deleteAlertingInteractionstatsAlert';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/alerts/{alertId}','DELETE',{'alertId':alertId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an interaction stats rule
	 * Apps should migrate to use DELETE /api/v2/alerting/rules/{ruleId}.
	 * @param {String} ruleId Rule ID
	 * @deprecated
	 */},{key:"deleteAlertingInteractionstatsRule",value:function deleteAlertingInteractionstatsRule(ruleId){// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling deleteAlertingInteractionstatsRule';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/rules/{ruleId}','DELETE',{'ruleId':ruleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a rule.
	 * 
	 * @param {String} ruleId Rule Id
	 */},{key:"deleteAlertingRule",value:function deleteAlertingRule(ruleId){// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling deleteAlertingRule';}return this.apiClient.callApi('/api/v2/alerting/rules/{ruleId}','DELETE',{'ruleId':ruleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an alert
	 * 
	 * @param {String} alertId Alert ID
	 */},{key:"getAlertingAlert",value:function getAlertingAlert(alertId){// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling getAlertingAlert';}return this.apiClient.callApi('/api/v2/alerting/alerts/{alertId}','GET',{'alertId':alertId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets active alert count for a user
	 * Apps should migrate to use POST /api/v2/alerting/alerts/query with the queryType set to Count and alertStatus to Active in the request body.
	 * @deprecated
	 */},{key:"getAlertingAlertsActive",value:function getAlertingAlertsActive(){return this.apiClient.callApi('/api/v2/alerting/alerts/active','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an interaction stats alert
	 * Apps should migrate to use GET /api/v2/alerting/alerts/{alertId}.
	 * @param {String} alertId Alert ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"getAlertingInteractionstatsAlert",value:function getAlertingInteractionstatsAlert(alertId,opts){opts=opts||{};// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling getAlertingInteractionstatsAlert';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/alerts/{alertId}','GET',{'alertId':alertId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get interaction stats alert list
	 * Apps should migrate to use POST /api/v2/alerting/alerts/query.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"getAlertingInteractionstatsAlerts",value:function getAlertingInteractionstatsAlerts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/alerting/interactionstats/alerts','GET',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets user unread count of interaction stats alerts
	 * Apps should migrate to use POST /api/v2/alerting/alerts/query with the queryType set to Count and viewStatus to Unread in the request body.
	 * @deprecated
	 */},{key:"getAlertingInteractionstatsAlertsUnread",value:function getAlertingInteractionstatsAlertsUnread(){return this.apiClient.callApi('/api/v2/alerting/interactionstats/alerts/unread','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an interaction stats rule
	 * Apps should migrate to use GET /api/v2/alerting/rules/{ruleId}.
	 * @param {String} ruleId Rule ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"getAlertingInteractionstatsRule",value:function getAlertingInteractionstatsRule(ruleId,opts){opts=opts||{};// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling getAlertingInteractionstatsRule';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/rules/{ruleId}','GET',{'ruleId':ruleId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an interaction stats rule list
	 * Apps should migrate to use POST /api/v2/alerting/rules/query.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"getAlertingInteractionstatsRules",value:function getAlertingInteractionstatsRules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/alerting/interactionstats/rules','GET',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a rule.
	 * 
	 * @param {String} ruleId Rule Id
	 */},{key:"getAlertingRule",value:function getAlertingRule(ruleId){// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling getAlertingRule';}return this.apiClient.callApi('/api/v2/alerting/rules/{ruleId}','GET',{'ruleId':ruleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Allows an entity to mute/snooze an alert or update the unread status of the alert.
	 * Snoozing an alert temporarily stop it from resending notifications to individualsas well as other services within Genesys Cloud for a given period.  Muting an alert will only block the notifications to individuals.
	 * @param {String} alertId Alert ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchAlertingAlert",value:function patchAlertingAlert(alertId,opts){opts=opts||{};// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling patchAlertingAlert';}return this.apiClient.callApi('/api/v2/alerting/alerts/{alertId}','PATCH',{'alertId':alertId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk alert updates
	 * 
	 * @param {Object} body 
	 */},{key:"patchAlertingAlertsBulk",value:function patchAlertingAlertsBulk(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchAlertingAlertsBulk';}return this.apiClient.callApi('/api/v2/alerting/alerts/bulk','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update of notification lists
	 * 
	 * @param {Object} body 
	 */},{key:"patchAlertingRulesBulk",value:function patchAlertingRulesBulk(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchAlertingRulesBulk';}return this.apiClient.callApi('/api/v2/alerting/rules/bulk','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a paged list of alerts. The max page size is 50
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postAlertingAlertsQuery",value:function postAlertingAlertsQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/alerting/alerts/query','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an interaction stats rule
	 * Apps should migrate to use POST /api/v2/alerting/rules.
	 * @param {Object} body AlertingRule
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"postAlertingInteractionstatsRules",value:function postAlertingInteractionstatsRules(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAlertingInteractionstatsRules';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/rules','POST',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Rule.
	 * 
	 * @param {Object} body rule to be created
	 */},{key:"postAlertingRules",value:function postAlertingRules(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAlertingRules';}return this.apiClient.callApi('/api/v2/alerting/rules','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove rules
	 * 
	 * @param {Object} body 
	 */},{key:"postAlertingRulesBulkRemove",value:function postAlertingRulesBulkRemove(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAlertingRulesBulkRemove';}return this.apiClient.callApi('/api/v2/alerting/rules/bulk/remove','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a paged list of rules.  The max size of the page is 50 items.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postAlertingRulesQuery",value:function postAlertingRulesQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/alerting/rules/query','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an alert read status
	 * 
	 * @param {String} alertId Alert ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"putAlertingAlert",value:function putAlertingAlert(alertId,opts){opts=opts||{};// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling putAlertingAlert';}return this.apiClient.callApi('/api/v2/alerting/alerts/{alertId}','PUT',{'alertId':alertId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an interaction stats alert read status
	 * Apps should migrate to use PUT /api/v2/alerting/alerts/{alertId}.
	 * @param {String} alertId Alert ID
	 * @param {Object} body InteractionStatsAlert
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"putAlertingInteractionstatsAlert",value:function putAlertingInteractionstatsAlert(alertId,body,opts){opts=opts||{};// verify the required parameter 'alertId' is set
if(alertId===undefined||alertId===null){throw'Missing the required parameter "alertId" when calling putAlertingInteractionstatsAlert';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAlertingInteractionstatsAlert';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/alerts/{alertId}','PUT',{'alertId':alertId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an interaction stats rule
	 * Apps should migrate to use PUT /api/v2/alerting/rules/{ruleId}.
	 * @param {String} ruleId Rule ID
	 * @param {Object} body AlertingRule
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"putAlertingInteractionstatsRule",value:function putAlertingInteractionstatsRule(ruleId,body,opts){opts=opts||{};// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling putAlertingInteractionstatsRule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAlertingInteractionstatsRule';}return this.apiClient.callApi('/api/v2/alerting/interactionstats/rules/{ruleId}','PUT',{'ruleId':ruleId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a rule
	 * 
	 * @param {String} ruleId Rule Id
	 * @param {Object} body rule to be updated
	 */},{key:"putAlertingRule",value:function putAlertingRule(ruleId,body){// verify the required parameter 'ruleId' is set
if(ruleId===undefined||ruleId===null){throw'Missing the required parameter "ruleId" when calling putAlertingRule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAlertingRule';}return this.apiClient.callApi('/api/v2/alerting/rules/{ruleId}','PUT',{'ruleId':ruleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return AlertingApi;}();var AnalyticsApi=/*#__PURE__*/function(){/**
	 * Analytics service.
	 * @module purecloud-platform-client-v2/api/AnalyticsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new AnalyticsApi. 
	 * @alias module:purecloud-platform-client-v2/api/AnalyticsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function AnalyticsApi(apiClient){_classCallCheck(this,AnalyticsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete/cancel an async details job
	 * 
	 * @param {String} jobId jobId
	 */_createClass(AnalyticsApi,[{key:"deleteAnalyticsConversationsDetailsJob",value:function deleteAnalyticsConversationsDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling deleteAnalyticsConversationsDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}','DELETE',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a scheduled report job.
	 * 
	 * @param {String} scheduleId Schedule ID
	 */},{key:"deleteAnalyticsReportingSchedule",value:function deleteAnalyticsReportingSchedule(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling deleteAnalyticsReportingSchedule';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}','DELETE',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete/cancel an async request
	 * 
	 * @param {String} jobId jobId
	 */},{key:"deleteAnalyticsUsersDetailsJob",value:function deleteAnalyticsUsersDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling deleteAnalyticsUsersDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}','DELETE',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for action aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsActionsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsActionsAggregatesJob",value:function getAnalyticsActionsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsActionsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/actions/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsActionsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsActionsAggregatesJobResults",value:function getAnalyticsActionsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsActionsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/actions/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Reporting Turns.
	 * Returns the reporting turns grouped by session, in reverse chronological order from the date the session was created, with the reporting turns from the most recent session appearing at the start of the list. For pagination, clients should keep sending requests using the value of nextUri in the response, until its no longer present, only then have all items have been returned. Note: resources returned by this endpoint are not persisted indefinitely, as they are deleted after approximately, but not before, 10 days.
	 * @param {String} botFlowId ID of the bot flow.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the ID of the last item in the list of entities that has been returned.
	 * @param {String} opts.pageSize Max number of entities to return. Maximum of 250 (default to 50)
	 * @param {String} opts.interval Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {String} opts.actionId Optional action ID to get the reporting turns associated to a particular flow action
	 * @param {String} opts.sessionId Optional session ID to get the reporting turns for a particular session. Specifying a session ID alongside an action ID or a language or any ask action results is not allowed.
	 * @param {String} opts.language Optional language code to get the reporting turns for a particular language
	 * @param {Object} opts.askActionResults Optional case-insensitive comma separated list of ask action results to filter the reporting turns.
	 */},{key:"getAnalyticsBotflowReportingturns",value:function getAnalyticsBotflowReportingturns(botFlowId,opts){opts=opts||{};// verify the required parameter 'botFlowId' is set
if(botFlowId===undefined||botFlowId===null){throw'Missing the required parameter "botFlowId" when calling getAnalyticsBotflowReportingturns';}return this.apiClient.callApi('/api/v2/analytics/botflows/{botFlowId}/reportingturns','GET',{'botFlowId':botFlowId},{'after':opts['after'],'pageSize':opts['pageSize'],'interval':opts['interval'],'actionId':opts['actionId'],'sessionId':opts['sessionId'],'language':opts['language'],'askActionResults':opts['askActionResults']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Bot Flow Sessions.
	 * Returns the bot flow sessions in reverse chronological order from the date they were created. For pagination, clients should keep sending requests using the value of nextUri in the response, until its no longer present, only then have all items have been returned. Note: resources returned by this endpoint are not persisted indefinitely, as they are deleted after approximately, but not before, 10 days.
	 * @param {String} botFlowId ID of the bot flow.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the ID of the last item in the list of entities that has been returned.
	 * @param {String} opts.pageSize Max number of entities to return. Maximum of 250 (default to 50)
	 * @param {String} opts.interval Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.botResultCategories Optional case-insensitive comma separated list of Bot Result Categories to filter sessions by.
	 * @param {String} opts.endLanguage Optional case-insensitive language code to filter sessions by the language the sessions ended in.
	 */},{key:"getAnalyticsBotflowSessions",value:function getAnalyticsBotflowSessions(botFlowId,opts){opts=opts||{};// verify the required parameter 'botFlowId' is set
if(botFlowId===undefined||botFlowId===null){throw'Missing the required parameter "botFlowId" when calling getAnalyticsBotflowSessions';}return this.apiClient.callApi('/api/v2/analytics/botflows/{botFlowId}/sessions','GET',{'botFlowId':botFlowId},{'after':opts['after'],'pageSize':opts['pageSize'],'interval':opts['interval'],'botResultCategories':opts['botResultCategories'],'endLanguage':opts['endLanguage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for bot aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsBotsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsBotsAggregatesJob",value:function getAnalyticsBotsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsBotsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/bots/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsBotsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsBotsAggregatesJobResults",value:function getAnalyticsBotsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsBotsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/bots/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a conversation by id
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getAnalyticsConversationDetails",value:function getAnalyticsConversationDetails(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getAnalyticsConversationDetails';}return this.apiClient.callApi('/api/v2/analytics/conversations/{conversationId}/details','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for conversation aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsConversationsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsConversationsAggregatesJob",value:function getAnalyticsConversationsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsConversationsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsConversationsAggregatesJobResults",value:function getAnalyticsConversationsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets multiple conversations by id
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id Comma-separated conversation ids
	 */},{key:"getAnalyticsConversationsDetails",value:function getAnalyticsConversationsDetails(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/analytics/conversations/details','GET',{},{'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for conversation details
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getAnalyticsConversationsDetailsJob",value:function getAnalyticsConversationsDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async details job
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize The desired maximum number of results
	 */},{key:"getAnalyticsConversationsDetailsJobResults",value:function getAnalyticsConversationsDetailsJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsDetailsJobResults';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Lookup the datalake availability date and time
	 * 
	 */},{key:"getAnalyticsConversationsDetailsJobsAvailability",value:function getAnalyticsConversationsDetailsJobsAvailability(){return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/availability','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get analytics data retention setting
	 * 
	 */},{key:"getAnalyticsDataretentionSettings",value:function getAnalyticsDataretentionSettings(){return this.apiClient.callApi('/api/v2/analytics/dataretention/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for evaluation aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsEvaluationsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsEvaluationsAggregatesJob",value:function getAnalyticsEvaluationsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsEvaluationsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsEvaluationsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsEvaluationsAggregatesJobResults",value:function getAnalyticsEvaluationsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsEvaluationsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for flow execution aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsFlowexecutionsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsFlowexecutionsAggregatesJob",value:function getAnalyticsFlowexecutionsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowexecutionsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/flowexecutions/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsFlowexecutionsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsFlowexecutionsAggregatesJobResults",value:function getAnalyticsFlowexecutionsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowexecutionsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/flowexecutions/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for Flow aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsFlowsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsFlowsAggregatesJob",value:function getAnalyticsFlowsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsFlowsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsFlowsAggregatesJobResults",value:function getAnalyticsFlowsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for journey aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsJourneysAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsJourneysAggregatesJob",value:function getAnalyticsJourneysAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsJourneysAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsJourneysAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsJourneysAggregatesJobResults",value:function getAnalyticsJourneysAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsJourneysAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for knowledge aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsKnowledgeAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsKnowledgeAggregatesJob",value:function getAnalyticsKnowledgeAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsKnowledgeAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/knowledge/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsKnowledgeAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsKnowledgeAggregatesJobResults",value:function getAnalyticsKnowledgeAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsKnowledgeAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/knowledge/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all view export requests for a user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getAnalyticsReportingExports",value:function getAnalyticsReportingExports(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/analytics/reporting/exports','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all export metadata
	 * 
	 */},{key:"getAnalyticsReportingExportsMetadata",value:function getAnalyticsReportingExportsMetadata(){return this.apiClient.callApi('/api/v2/analytics/reporting/exports/metadata','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of reporting metadata.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.locale Locale
	 */},{key:"getAnalyticsReportingMetadata",value:function getAnalyticsReportingMetadata(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/analytics/reporting/metadata','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'locale':opts['locale']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a reporting metadata.
	 * 
	 * @param {String} reportId Report ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.locale Locale
	 */},{key:"getAnalyticsReportingReportIdMetadata",value:function getAnalyticsReportingReportIdMetadata(reportId,opts){opts=opts||{};// verify the required parameter 'reportId' is set
if(reportId===undefined||reportId===null){throw'Missing the required parameter "reportId" when calling getAnalyticsReportingReportIdMetadata';}return this.apiClient.callApi('/api/v2/analytics/reporting/{reportId}/metadata','GET',{'reportId':reportId},{'locale':opts['locale']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of report formats
	 * Get a list of report formats.
	 */},{key:"getAnalyticsReportingReportformats",value:function getAnalyticsReportingReportformats(){return this.apiClient.callApi('/api/v2/analytics/reporting/reportformats','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a scheduled report job.
	 * 
	 * @param {String} scheduleId Schedule ID
	 */},{key:"getAnalyticsReportingSchedule",value:function getAnalyticsReportingSchedule(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getAnalyticsReportingSchedule';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}','GET',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of completed scheduled report jobs.
	 * 
	 * @param {String} scheduleId Schedule ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber  (default to 1)
	 * @param {Number} opts.pageSize  (default to 25)
	 */},{key:"getAnalyticsReportingScheduleHistory",value:function getAnalyticsReportingScheduleHistory(scheduleId,opts){opts=opts||{};// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getAnalyticsReportingScheduleHistory';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}/history','GET',{'scheduleId':scheduleId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get most recently completed scheduled report job.
	 * 
	 * @param {String} scheduleId Schedule ID
	 */},{key:"getAnalyticsReportingScheduleHistoryLatest",value:function getAnalyticsReportingScheduleHistoryLatest(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getAnalyticsReportingScheduleHistoryLatest';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}/history/latest','GET',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * A completed scheduled report job
	 * A completed scheduled report job.
	 * @param {String} runId Run ID
	 * @param {String} scheduleId Schedule ID
	 */},{key:"getAnalyticsReportingScheduleHistoryRunId",value:function getAnalyticsReportingScheduleHistoryRunId(runId,scheduleId){// verify the required parameter 'runId' is set
if(runId===undefined||runId===null){throw'Missing the required parameter "runId" when calling getAnalyticsReportingScheduleHistoryRunId';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getAnalyticsReportingScheduleHistoryRunId';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}/history/{runId}','GET',{'runId':runId,'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of scheduled report jobs
	 * Get a list of scheduled report jobs.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getAnalyticsReportingSchedules",value:function getAnalyticsReportingSchedules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/analytics/reporting/schedules','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get AnalyticsReportingSettings for an organization
	 * 
	 */},{key:"getAnalyticsReportingSettings",value:function getAnalyticsReportingSettings(){return this.apiClient.callApi('/api/v2/analytics/reporting/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of report time periods.
	 * 
	 */},{key:"getAnalyticsReportingTimeperiods",value:function getAnalyticsReportingTimeperiods(){return this.apiClient.callApi('/api/v2/analytics/reporting/timeperiods','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for resolution aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsResolutionsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsResolutionsAggregatesJob",value:function getAnalyticsResolutionsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsResolutionsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/resolutions/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsResolutionsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsResolutionsAggregatesJobResults",value:function getAnalyticsResolutionsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsResolutionsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/resolutions/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for survey aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsSurveysAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsSurveysAggregatesJob",value:function getAnalyticsSurveysAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsSurveysAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsSurveysAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsSurveysAggregatesJobResults",value:function getAnalyticsSurveysAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsSurveysAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for task management aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsTaskmanagementAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsTaskmanagementAggregatesJob",value:function getAnalyticsTaskmanagementAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsTaskmanagementAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/taskmanagement/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async task management query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsTaskmanagementAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsTaskmanagementAggregatesJobResults",value:function getAnalyticsTaskmanagementAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsTaskmanagementAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/taskmanagement/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for transcript aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsTranscriptsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsTranscriptsAggregatesJob",value:function getAnalyticsTranscriptsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsTranscriptsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/transcripts/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsTranscriptsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsTranscriptsAggregatesJobResults",value:function getAnalyticsTranscriptsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsTranscriptsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/transcripts/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for user aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsUsersAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsUsersAggregatesJob",value:function getAnalyticsUsersAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsUsersAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsUsersAggregatesJobResults",value:function getAnalyticsUsersAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for user details
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getAnalyticsUsersDetailsJob",value:function getAnalyticsUsersDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize The desired maximum number of results
	 */},{key:"getAnalyticsUsersDetailsJobResults",value:function getAnalyticsUsersDetailsJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersDetailsJobResults';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Lookup the datalake availability date and time
	 * 
	 */},{key:"getAnalyticsUsersDetailsJobsAvailability",value:function getAnalyticsUsersDetailsJobsAvailability(){return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/availability','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch AnalyticsReportingSettings values for an organization
	 * 
	 * @param {Object} body AnalyticsReportingSettingsRequest
	 */},{key:"patchAnalyticsReportingSettings",value:function patchAnalyticsReportingSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchAnalyticsReportingSettings';}return this.apiClient.callApi('/api/v2/analytics/reporting/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for action aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsActionsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsActionsAggregatesJobs",value:function postAnalyticsActionsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsActionsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/actions/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for action aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsActionsAggregatesQuery",value:function postAnalyticsActionsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsActionsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/actions/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for bot aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsBotsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsBotsAggregatesJobs",value:function postAnalyticsBotsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsBotsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/bots/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for bot aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsBotsAggregatesQuery",value:function postAnalyticsBotsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsBotsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/bots/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Index conversation properties
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body request
	 */},{key:"postAnalyticsConversationDetailsProperties",value:function postAnalyticsConversationDetailsProperties(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postAnalyticsConversationDetailsProperties';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationDetailsProperties';}return this.apiClient.callApi('/api/v2/analytics/conversations/{conversationId}/details/properties','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsConversationsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsConversationsActivityQuery",value:function postAnalyticsConversationsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsConversationsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsConversationsAggregatesJobs",value:function postAnalyticsConversationsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsAggregatesQuery",value:function postAnalyticsConversationsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation details asynchronously
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsDetailsJobs",value:function postAnalyticsConversationsDetailsJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsDetailsJobs';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation details
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsDetailsQuery",value:function postAnalyticsConversationsDetailsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsDetailsQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postAnalyticsConversationsTranscriptsQuery",value:function postAnalyticsConversationsTranscriptsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsTranscriptsQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/transcripts/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for evaluation aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsEvaluationsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsEvaluationsAggregatesJobs",value:function postAnalyticsEvaluationsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsEvaluationsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for evaluation aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsEvaluationsAggregatesQuery",value:function postAnalyticsEvaluationsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsEvaluationsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow execution aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsFlowexecutionsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowexecutionsAggregatesJobs",value:function postAnalyticsFlowexecutionsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowexecutionsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/flowexecutions/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow execution aggregates
	 * 
	 * @param {Object} body query
	 * postAnalyticsFlowexecutionsAggregatesQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowexecutionsAggregatesQuery",value:function postAnalyticsFlowexecutionsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowexecutionsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/flowexecutions/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsFlowsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowsActivityQuery",value:function postAnalyticsFlowsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsFlowsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowsAggregatesJobs",value:function postAnalyticsFlowsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsFlowsAggregatesQuery",value:function postAnalyticsFlowsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsFlowsObservationsQuery",value:function postAnalyticsFlowsObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for journey aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsJourneysAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsJourneysAggregatesJobs",value:function postAnalyticsJourneysAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsJourneysAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for journey aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsJourneysAggregatesQuery",value:function postAnalyticsJourneysAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsJourneysAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for knowledge aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsKnowledgeAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsKnowledgeAggregatesJobs",value:function postAnalyticsKnowledgeAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsKnowledgeAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/knowledge/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for knowledge aggregates
	 * 
	 * @param {Object} body query
	 * postAnalyticsKnowledgeAggregatesQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsKnowledgeAggregatesQuery",value:function postAnalyticsKnowledgeAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsKnowledgeAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/knowledge/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for queue observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsQueuesObservationsQuery",value:function postAnalyticsQueuesObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsQueuesObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/queues/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate a view export request
	 * This API creates a reporting export but the desired way to export analytics data is to use the analytics query APIs instead
	 * @param {Object} body ReportingExportJobRequest
	 */},{key:"postAnalyticsReportingExports",value:function postAnalyticsReportingExports(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsReportingExports';}return this.apiClient.callApi('/api/v2/analytics/reporting/exports','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Place a scheduled report immediately into the reporting queue
	 * This route is deprecated, please use POST:api/v2/analytics/reporting/exports/{exportId}/execute instead
	 * @param {String} scheduleId Schedule ID
	 * @deprecated
	 */},{key:"postAnalyticsReportingScheduleRunreport",value:function postAnalyticsReportingScheduleRunreport(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postAnalyticsReportingScheduleRunreport';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}/runreport','POST',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a scheduled report job
	 * This route is deprecated, please use POST:api/v2/analytics/reporting/exports instead
	 * @param {Object} body ReportSchedule
	 * @deprecated
	 */},{key:"postAnalyticsReportingSchedules",value:function postAnalyticsReportingSchedules(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsReportingSchedules';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for resolution aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsResolutionsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsResolutionsAggregatesJobs",value:function postAnalyticsResolutionsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsResolutionsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/resolutions/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsRoutingActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsRoutingActivityQuery",value:function postAnalyticsRoutingActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsRoutingActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/routing/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for survey aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsSurveysAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsSurveysAggregatesJobs",value:function postAnalyticsSurveysAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsSurveysAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for survey aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsSurveysAggregatesQuery",value:function postAnalyticsSurveysAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsSurveysAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for task management aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsTaskmanagementAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsTaskmanagementAggregatesJobs",value:function postAnalyticsTaskmanagementAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTaskmanagementAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/taskmanagement/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for task management aggregates
	 * 
	 * @param {Object} body query
	 * postAnalyticsTaskmanagementAggregatesQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsTaskmanagementAggregatesQuery",value:function postAnalyticsTaskmanagementAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTaskmanagementAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/taskmanagement/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for team activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsTeamsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsTeamsActivityQuery",value:function postAnalyticsTeamsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTeamsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/teams/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for transcript aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsTranscriptsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsTranscriptsAggregatesJobs",value:function postAnalyticsTranscriptsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTranscriptsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/transcripts/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for transcript aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsTranscriptsAggregatesQuery",value:function postAnalyticsTranscriptsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTranscriptsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/transcripts/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsUsersActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsUsersActivityQuery",value:function postAnalyticsUsersActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/users/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsUsersAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsUsersAggregatesJobs",value:function postAnalyticsUsersAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersAggregatesQuery",value:function postAnalyticsUsersAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user details asynchronously
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersDetailsJobs",value:function postAnalyticsUsersDetailsJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersDetailsJobs';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user details
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersDetailsQuery",value:function postAnalyticsUsersDetailsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersDetailsQuery';}return this.apiClient.callApi('/api/v2/analytics/users/details/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersObservationsQuery",value:function postAnalyticsUsersObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/users/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update analytics data retention setting
	 * 
	 * @param {Object} body retentionDays
	 */},{key:"putAnalyticsDataretentionSettings",value:function putAnalyticsDataretentionSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAnalyticsDataretentionSettings';}return this.apiClient.callApi('/api/v2/analytics/dataretention/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a scheduled report job.
	 * This route is deprecated, please use PATCH:api/v2/analytics/reporting/exports/{exportId}/schedule instead
	 * @param {String} scheduleId Schedule ID
	 * @param {Object} body ReportSchedule
	 * @deprecated
	 */},{key:"putAnalyticsReportingSchedule",value:function putAnalyticsReportingSchedule(scheduleId,body){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling putAnalyticsReportingSchedule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAnalyticsReportingSchedule';}return this.apiClient.callApi('/api/v2/analytics/reporting/schedules/{scheduleId}','PUT',{'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return AnalyticsApi;}();var ArchitectApi=/*#__PURE__*/function(){/**
	 * Architect service.
	 * @module purecloud-platform-client-v2/api/ArchitectApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ArchitectApi. 
	 * @alias module:purecloud-platform-client-v2/api/ArchitectApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ArchitectApi(apiClient){_classCallCheck(this,ArchitectApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Deletes a emergency group by ID
	 * 
	 * @param {String} emergencyGroupId Emergency group ID
	 */_createClass(ArchitectApi,[{key:"deleteArchitectEmergencygroup",value:function deleteArchitectEmergencygroup(emergencyGroupId){// verify the required parameter 'emergencyGroupId' is set
if(emergencyGroupId===undefined||emergencyGroupId===null){throw'Missing the required parameter "emergencyGroupId" when calling deleteArchitectEmergencygroup';}return this.apiClient.callApi('/api/v2/architect/emergencygroups/{emergencyGroupId}','DELETE',{'emergencyGroupId':emergencyGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a grammar.
	 * 
	 * @param {String} grammarId grammar ID
	 * deleteArchitectGrammar is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteArchitectGrammar",value:function deleteArchitectGrammar(grammarId){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling deleteArchitectGrammar';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}','DELETE',{'grammarId':grammarId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete specified grammar language
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * deleteArchitectGrammarLanguage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteArchitectGrammarLanguage",value:function deleteArchitectGrammarLanguage(grammarId,languageCode){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling deleteArchitectGrammarLanguage';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectGrammarLanguage';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}','DELETE',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Clear the DTMF mode file for the grammar language if there is one
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * deleteArchitectGrammarLanguageFilesDtmf is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteArchitectGrammarLanguageFilesDtmf",value:function deleteArchitectGrammarLanguageFilesDtmf(grammarId,languageCode){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling deleteArchitectGrammarLanguageFilesDtmf';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectGrammarLanguageFilesDtmf';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}/files/dtmf','DELETE',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Clear the voice mode file for the grammar language if there is one
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * deleteArchitectGrammarLanguageFilesVoice is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteArchitectGrammarLanguageFilesVoice",value:function deleteArchitectGrammarLanguageFilesVoice(grammarId,languageCode){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling deleteArchitectGrammarLanguageFilesVoice';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectGrammarLanguageFilesVoice';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}/files/voice','DELETE',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an IVR Config.
	 * 
	 * @param {String} ivrId IVR id
	 */},{key:"deleteArchitectIvr",value:function deleteArchitectIvr(ivrId){// verify the required parameter 'ivrId' is set
if(ivrId===undefined||ivrId===null){throw'Missing the required parameter "ivrId" when calling deleteArchitectIvr';}return this.apiClient.callApi('/api/v2/architect/ivrs/{ivrId}','DELETE',{'ivrId':ivrId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete specified user prompt
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.allResources Whether or not to delete all the prompt resources
	 */},{key:"deleteArchitectPrompt",value:function deleteArchitectPrompt(promptId,opts){opts=opts||{};// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling deleteArchitectPrompt';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}','DELETE',{'promptId':promptId},{'allResources':opts['allResources']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete specified user prompt resource
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 */},{key:"deleteArchitectPromptResource",value:function deleteArchitectPromptResource(promptId,languageCode){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling deleteArchitectPromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectPromptResource';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources/{languageCode}','DELETE',{'promptId':promptId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete specified user prompt resource audio
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 */},{key:"deleteArchitectPromptResourceAudio",value:function deleteArchitectPromptResourceAudio(promptId,languageCode){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling deleteArchitectPromptResourceAudio';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectPromptResourceAudio';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources/{languageCode}/audio','DELETE',{'promptId':promptId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Batch-delete a list of prompts
	 * Multiple IDs can be specified, in which case all specified prompts will be deleted.  Asynchronous.  Notification topic: v2.architect.prompts.{promptId}
	 * @param {Array.<String>} id List of Prompt IDs
	 */},{key:"deleteArchitectPrompts",value:function deleteArchitectPrompts(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteArchitectPrompts';}return this.apiClient.callApi('/api/v2/architect/prompts','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a schedule by id
	 * 
	 * @param {String} scheduleId Schedule ID
	 */},{key:"deleteArchitectSchedule",value:function deleteArchitectSchedule(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling deleteArchitectSchedule';}return this.apiClient.callApi('/api/v2/architect/schedules/{scheduleId}','DELETE',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes a schedule group by ID
	 * 
	 * @param {String} scheduleGroupId Schedule group ID
	 */},{key:"deleteArchitectSchedulegroup",value:function deleteArchitectSchedulegroup(scheduleGroupId){// verify the required parameter 'scheduleGroupId' is set
if(scheduleGroupId===undefined||scheduleGroupId===null){throw'Missing the required parameter "scheduleGroupId" when calling deleteArchitectSchedulegroup';}return this.apiClient.callApi('/api/v2/architect/schedulegroups/{scheduleGroupId}','DELETE',{'scheduleGroupId':scheduleGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a system prompt resource override.
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 */},{key:"deleteArchitectSystempromptResource",value:function deleteArchitectSystempromptResource(promptId,languageCode){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling deleteArchitectSystempromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteArchitectSystempromptResource';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}','DELETE',{'promptId':promptId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete flow
	 * 
	 * @param {String} flowId Flow ID
	 */},{key:"deleteFlow",value:function deleteFlow(flowId){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling deleteFlow';}return this.apiClient.callApi('/api/v2/flows/{flowId}','DELETE',{'flowId':flowId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Batch-delete a list of flows
	 * Multiple IDs can be specified, in which case all specified flows will be deleted.  Asynchronous.  Notification topic: v2.flows.{flowId}
	 * @param {Array.<String>} id List of Flow IDs
	 */},{key:"deleteFlows",value:function deleteFlows(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteFlows';}return this.apiClient.callApi('/api/v2/flows','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * deletes a specific datatable by id
	 * Deletes an entire datatable (including the schema and data) with a given datatableId
	 * @param {String} datatableId id of datatable
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.force force delete, even if in use (default to false)
	 */},{key:"deleteFlowsDatatable",value:function deleteFlowsDatatable(datatableId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling deleteFlowsDatatable';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}','DELETE',{'datatableId':datatableId},{'force':opts['force']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a row entry
	 * Deletes a row with a given rowId (the value of the key field).
	 * @param {String} datatableId id of datatable
	 * @param {String} rowId the key for the row
	 */},{key:"deleteFlowsDatatableRow",value:function deleteFlowsDatatableRow(datatableId,rowId){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling deleteFlowsDatatableRow';}// verify the required parameter 'rowId' is set
if(rowId===undefined||rowId===null){throw'Missing the required parameter "rowId" when calling deleteFlowsDatatableRow';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/rows/{rowId}','DELETE',{'datatableId':datatableId,'rowId':rowId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a flow milestone.
	 * 
	 * @param {String} milestoneId flow milestone ID
	 */},{key:"deleteFlowsMilestone",value:function deleteFlowsMilestone(milestoneId){// verify the required parameter 'milestoneId' is set
if(milestoneId===undefined||milestoneId===null){throw'Missing the required parameter "milestoneId" when calling deleteFlowsMilestone';}return this.apiClient.callApi('/api/v2/flows/milestones/{milestoneId}','DELETE',{'milestoneId':milestoneId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dependency Tracking objects that have a given display name
	 * 
	 * @param {String} name Object name to search for
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.objectType Object type(s) to search for
	 * @param {Boolean} opts.consumedResources Include resources each result item consumes
	 * @param {Boolean} opts.consumingResources Include resources that consume each result item
	 * @param {Array.<String>} opts.consumedResourceType Types of consumed resources to return, if consumed resources are requested
	 * @param {Array.<String>} opts.consumingResourceType Types of consuming resources to return, if consuming resources are requested
	 */},{key:"getArchitectDependencytracking",value:function getArchitectDependencytracking(name,opts){opts=opts||{};// verify the required parameter 'name' is set
if(name===undefined||name===null){throw'Missing the required parameter "name" when calling getArchitectDependencytracking';}return this.apiClient.callApi('/api/v2/architect/dependencytracking','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'name':name,'objectType':this.apiClient.buildCollectionParam(opts['objectType'],'multi'),'consumedResources':opts['consumedResources'],'consumingResources':opts['consumingResources'],'consumedResourceType':this.apiClient.buildCollectionParam(opts['consumedResourceType'],'multi'),'consumingResourceType':this.apiClient.buildCollectionParam(opts['consumingResourceType'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dependency Tracking build status for an organization
	 * 
	 */},{key:"getArchitectDependencytrackingBuild",value:function getArchitectDependencytrackingBuild(){return this.apiClient.callApi('/api/v2/architect/dependencytracking/build','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get resources that are consumed by a given Dependency Tracking object
	 * 
	 * @param {String} id Consuming object ID
	 * @param {String} version Consuming object version
	 * @param {Object} objectType Consuming object type.  Only versioned types are allowed here.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.resourceType Types of consumed resources to show
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getArchitectDependencytrackingConsumedresources",value:function getArchitectDependencytrackingConsumedresources(id,version,objectType,opts){opts=opts||{};// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling getArchitectDependencytrackingConsumedresources';}// verify the required parameter 'version' is set
if(version===undefined||version===null){throw'Missing the required parameter "version" when calling getArchitectDependencytrackingConsumedresources';}// verify the required parameter 'objectType' is set
if(objectType===undefined||objectType===null){throw'Missing the required parameter "objectType" when calling getArchitectDependencytrackingConsumedresources';}return this.apiClient.callApi('/api/v2/architect/dependencytracking/consumedresources','GET',{},{'id':id,'version':version,'objectType':objectType,'resourceType':this.apiClient.buildCollectionParam(opts['resourceType'],'multi'),'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get resources that consume a given Dependency Tracking object
	 * 
	 * @param {String} id Consumed object ID
	 * @param {Object} objectType Consumed object type
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.resourceType Types of consuming resources to show.  Only versioned types are allowed here.
	 * @param {String} opts.version Object version
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.flowFilter Show only checkedIn or published flows
	 */},{key:"getArchitectDependencytrackingConsumingresources",value:function getArchitectDependencytrackingConsumingresources(id,objectType,opts){opts=opts||{};// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling getArchitectDependencytrackingConsumingresources';}// verify the required parameter 'objectType' is set
if(objectType===undefined||objectType===null){throw'Missing the required parameter "objectType" when calling getArchitectDependencytrackingConsumingresources';}return this.apiClient.callApi('/api/v2/architect/dependencytracking/consumingresources','GET',{},{'id':id,'objectType':objectType,'resourceType':this.apiClient.buildCollectionParam(opts['resourceType'],'multi'),'version':opts['version'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'flowFilter':opts['flowFilter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dependency Tracking objects that consume deleted resources
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.name Name to search for
	 * @param {Array.<String>} opts.objectType Object type(s) to search for
	 * @param {Object} opts.flowFilter Show only checkedIn or published flows
	 * @param {Boolean} opts.consumedResources Return consumed resources? (default to false)
	 * @param {Array.<String>} opts.consumedResourceType Resource type(s) to return
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getArchitectDependencytrackingDeletedresourceconsumers",value:function getArchitectDependencytrackingDeletedresourceconsumers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/dependencytracking/deletedresourceconsumers','GET',{},{'name':opts['name'],'objectType':this.apiClient.buildCollectionParam(opts['objectType'],'multi'),'flowFilter':opts['flowFilter'],'consumedResources':opts['consumedResources'],'consumedResourceType':this.apiClient.buildCollectionParam(opts['consumedResourceType'],'multi'),'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Dependency Tracking object
	 * 
	 * @param {String} id Object ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.version Object version
	 * @param {Object} opts.objectType Object type
	 * @param {Boolean} opts.consumedResources Include resources this item consumes
	 * @param {Boolean} opts.consumingResources Include resources that consume this item
	 * @param {Array.<String>} opts.consumedResourceType Types of consumed resources to return, if consumed resources are requested
	 * @param {Array.<String>} opts.consumingResourceType Types of consuming resources to return, if consuming resources are requested
	 * @param {Boolean} opts.consumedResourceRequest Indicate that this is going to look up a consumed resource object
	 */},{key:"getArchitectDependencytrackingObject",value:function getArchitectDependencytrackingObject(id,opts){opts=opts||{};// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling getArchitectDependencytrackingObject';}return this.apiClient.callApi('/api/v2/architect/dependencytracking/object','GET',{},{'id':id,'version':opts['version'],'objectType':opts['objectType'],'consumedResources':opts['consumedResources'],'consumingResources':opts['consumingResources'],'consumedResourceType':this.apiClient.buildCollectionParam(opts['consumedResourceType'],'multi'),'consumingResourceType':this.apiClient.buildCollectionParam(opts['consumingResourceType'],'multi'),'consumedResourceRequest':opts['consumedResourceRequest']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Dependency Tracking type.
	 * 
	 * @param {String} typeId Type ID
	 */},{key:"getArchitectDependencytrackingType",value:function getArchitectDependencytrackingType(typeId){// verify the required parameter 'typeId' is set
if(typeId===undefined||typeId===null){throw'Missing the required parameter "typeId" when calling getArchitectDependencytrackingType';}return this.apiClient.callApi('/api/v2/architect/dependencytracking/types/{typeId}','GET',{'typeId':typeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dependency Tracking types.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getArchitectDependencytrackingTypes",value:function getArchitectDependencytrackingTypes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/dependencytracking/types','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dependency Tracking objects that depend on updated resources
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.name Name to search for
	 * @param {Array.<String>} opts.objectType Object type(s) to search for
	 * @param {Boolean} opts.consumedResources Return consumed resources? (default to false)
	 * @param {Array.<String>} opts.consumedResourceType Resource type(s) to return
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getArchitectDependencytrackingUpdatedresourceconsumers",value:function getArchitectDependencytrackingUpdatedresourceconsumers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/dependencytracking/updatedresourceconsumers','GET',{},{'name':opts['name'],'objectType':this.apiClient.buildCollectionParam(opts['objectType'],'multi'),'consumedResources':opts['consumedResources'],'consumedResourceType':this.apiClient.buildCollectionParam(opts['consumedResourceType'],'multi'),'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a emergency group by ID
	 * 
	 * @param {String} emergencyGroupId Emergency group ID
	 */},{key:"getArchitectEmergencygroup",value:function getArchitectEmergencygroup(emergencyGroupId){// verify the required parameter 'emergencyGroupId' is set
if(emergencyGroupId===undefined||emergencyGroupId===null){throw'Missing the required parameter "emergencyGroupId" when calling getArchitectEmergencygroup';}return this.apiClient.callApi('/api/v2/architect/emergencygroups/{emergencyGroupId}','GET',{'emergencyGroupId':emergencyGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of emergency groups.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.name Name of the Emergency Group to filter by.
	 */},{key:"getArchitectEmergencygroups",value:function getArchitectEmergencygroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/emergencygroups','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic emergency group objects filterable by query parameters.
	 * This returns emergency groups consisting of name and division. If one or more IDs are specified, the search will fetch flow outcomes that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.id ID of the Emergency Groups to filter by.
	 * @param {String} opts.name Name of the Emergency Group to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectEmergencygroupsDivisionviews",value:function getArchitectEmergencygroupsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/emergencygroups/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a grammar
	 * Returns a specified grammar
	 * @param {String} grammarId grammar ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeFileUrls Include grammar language file URLs
	 * getArchitectGrammar is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getArchitectGrammar",value:function getArchitectGrammar(grammarId,opts){opts=opts||{};// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling getArchitectGrammar';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}','GET',{'grammarId':grammarId},{'includeFileUrls':opts['includeFileUrls']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a grammar language.
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * getArchitectGrammarLanguage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getArchitectGrammarLanguage",value:function getArchitectGrammarLanguage(grammarId,languageCode){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling getArchitectGrammarLanguage';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getArchitectGrammarLanguage';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}','GET',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of grammars, filtered by query parameters
	 * Multiple IDs can be specified, in which case all matching grammars will be returned, and no other parameters will be evaluated.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.sortBy Sort by (default to id)
	 * @param {Object} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 * @param {Boolean} opts.includeFileUrls Include grammar language file URLs
	 * getArchitectGrammars is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getArchitectGrammars",value:function getArchitectGrammars(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/grammars','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'description':opts['description'],'nameOrDescription':opts['nameOrDescription'],'includeFileUrls':opts['includeFileUrls']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an IVR config.
	 * 
	 * @param {String} ivrId IVR id
	 */},{key:"getArchitectIvr",value:function getArchitectIvr(ivrId){// verify the required parameter 'ivrId' is set
if(ivrId===undefined||ivrId===null){throw'Missing the required parameter "ivrId" when calling getArchitectIvr';}return this.apiClient.callApi('/api/v2/architect/ivrs/{ivrId}','GET',{'ivrId':ivrId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get IVR configs.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.name Name of the IVR to filter by.
	 * @param {String} opts.dnis The phone number of the IVR to filter by.
	 * @param {String} opts.scheduleGroup The Schedule Group of the IVR to filter by.
	 */},{key:"getArchitectIvrs",value:function getArchitectIvrs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/ivrs','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'dnis':opts['dnis'],'scheduleGroup':opts['scheduleGroup']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic ivr configuration information objects filterable by query parameters.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.id ID of the IVR to filter by.
	 * @param {String} opts.name Name of the IVR to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectIvrsDivisionviews",value:function getArchitectIvrsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/ivrs/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get specified user prompt
	 * 
	 * @param {String} promptId Prompt ID
	 */},{key:"getArchitectPrompt",value:function getArchitectPrompt(promptId){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectPrompt';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}','GET',{'promptId':promptId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get generated prompt history
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} historyId History request ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortOrder Sort order (default to desc)
	 * @param {Object} opts.sortBy Sort by (default to timestamp)
	 * @param {Array.<String>} opts.action Flow actions to include (omit to include all)
	 */},{key:"getArchitectPromptHistoryHistoryId",value:function getArchitectPromptHistoryHistoryId(promptId,historyId,opts){opts=opts||{};// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectPromptHistoryHistoryId';}// verify the required parameter 'historyId' is set
if(historyId===undefined||historyId===null){throw'Missing the required parameter "historyId" when calling getArchitectPromptHistoryHistoryId';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/history/{historyId}','GET',{'promptId':promptId,'historyId':historyId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'action':this.apiClient.buildCollectionParam(opts['action'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get specified user prompt resource
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 */},{key:"getArchitectPromptResource",value:function getArchitectPromptResource(promptId,languageCode){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectPromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getArchitectPromptResource';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources/{languageCode}','GET',{'promptId':promptId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of user prompt resources
	 * The returned list is pageable, and query parameters can be used for filtering.
	 * @param {String} promptId Prompt ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getArchitectPromptResources",value:function getArchitectPromptResources(promptId,opts){opts=opts||{};// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectPromptResources';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources','GET',{'promptId':promptId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of user prompts
	 * The returned list is pageable, and query parameters can be used for filtering.  Multiple names can be specified, in which case all matching prompts will be returned, and no other filters will be evaluated.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 */},{key:"getArchitectPrompts",value:function getArchitectPrompts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/prompts','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'name':this.apiClient.buildCollectionParam(opts['name'],'multi'),'description':opts['description'],'nameOrDescription':opts['nameOrDescription'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a schedule by ID
	 * 
	 * @param {String} scheduleId Schedule ID
	 */},{key:"getArchitectSchedule",value:function getArchitectSchedule(scheduleId){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getArchitectSchedule';}return this.apiClient.callApi('/api/v2/architect/schedules/{scheduleId}','GET',{'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a schedule group by ID
	 * 
	 * @param {String} scheduleGroupId Schedule group ID
	 */},{key:"getArchitectSchedulegroup",value:function getArchitectSchedulegroup(scheduleGroupId){// verify the required parameter 'scheduleGroupId' is set
if(scheduleGroupId===undefined||scheduleGroupId===null){throw'Missing the required parameter "scheduleGroupId" when calling getArchitectSchedulegroup';}return this.apiClient.callApi('/api/v2/architect/schedulegroups/{scheduleGroupId}','GET',{'scheduleGroupId':scheduleGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of schedule groups.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.name Name of the Schedule Group to filter by.
	 * @param {String} opts.scheduleIds A comma-delimited list of Schedule IDs to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectSchedulegroups",value:function getArchitectSchedulegroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/schedulegroups','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'scheduleIds':opts['scheduleIds'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic schedule group configuration information objects filterable by query parameters.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.id ID of the schedule group to filter by.
	 * @param {String} opts.name Name of the schedule group to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectSchedulegroupsDivisionviews",value:function getArchitectSchedulegroupsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/schedulegroups/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of schedules.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.name Name of the Schedule to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectSchedules",value:function getArchitectSchedules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/schedules','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic schedule configuration information objects filterable by query parameters.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.id ID of the schedule group to filter by.
	 * @param {String} opts.name Name of the schedule group to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 */},{key:"getArchitectSchedulesDivisionviews",value:function getArchitectSchedulesDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/schedules/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a system prompt
	 * 
	 * @param {String} promptId promptId
	 */},{key:"getArchitectSystemprompt",value:function getArchitectSystemprompt(promptId){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectSystemprompt';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}','GET',{'promptId':promptId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get generated prompt history
	 * 
	 * @param {String} promptId promptId
	 * @param {String} historyId History request ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortOrder Sort order (default to desc)
	 * @param {Object} opts.sortBy Sort by (default to timestamp)
	 * @param {Array.<String>} opts.action Flow actions to include (omit to include all)
	 */},{key:"getArchitectSystempromptHistoryHistoryId",value:function getArchitectSystempromptHistoryHistoryId(promptId,historyId,opts){opts=opts||{};// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectSystempromptHistoryHistoryId';}// verify the required parameter 'historyId' is set
if(historyId===undefined||historyId===null){throw'Missing the required parameter "historyId" when calling getArchitectSystempromptHistoryHistoryId';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/history/{historyId}','GET',{'promptId':promptId,'historyId':historyId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'action':this.apiClient.buildCollectionParam(opts['action'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a system prompt resource.
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 */},{key:"getArchitectSystempromptResource",value:function getArchitectSystempromptResource(promptId,languageCode){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectSystempromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getArchitectSystempromptResource';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}','GET',{'promptId':promptId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get system prompt resources.
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 */},{key:"getArchitectSystempromptResources",value:function getArchitectSystempromptResources(promptId,opts){opts=opts||{};// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling getArchitectSystempromptResources';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/resources','GET',{'promptId':promptId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get System Prompts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {String} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 */},{key:"getArchitectSystemprompts",value:function getArchitectSystemprompts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/architect/systemprompts','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'description':opts['description'],'nameOrDescription':opts['nameOrDescription']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get flow
	 * 
	 * @param {String} flowId Flow ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.deleted Deleted flows (default to false)
	 */},{key:"getFlow",value:function getFlow(flowId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlow';}return this.apiClient.callApi('/api/v2/flows/{flowId}','GET',{'flowId':flowId},{'deleted':opts['deleted']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get generated flow history
	 * 
	 * @param {String} flowId Flow ID
	 * @param {String} historyId History request ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortOrder Sort order (default to desc)
	 * @param {Object} opts.sortBy Sort by (default to timestamp)
	 * @param {Array.<String>} opts.action Flow actions to include (omit to include all)
	 */},{key:"getFlowHistoryHistoryId",value:function getFlowHistoryHistoryId(flowId,historyId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowHistoryHistoryId';}// verify the required parameter 'historyId' is set
if(historyId===undefined||historyId===null){throw'Missing the required parameter "historyId" when calling getFlowHistoryHistoryId';}return this.apiClient.callApi('/api/v2/flows/{flowId}/history/{historyId}','GET',{'flowId':flowId,'historyId':historyId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'action':this.apiClient.buildCollectionParam(opts['action'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the latest configuration for flow
	 * 
	 * @param {String} flowId Flow ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.deleted Deleted flows (default to false)
	 */},{key:"getFlowLatestconfiguration",value:function getFlowLatestconfiguration(flowId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowLatestconfiguration';}return this.apiClient.callApi('/api/v2/flows/{flowId}/latestconfiguration','GET',{'flowId':flowId},{'deleted':opts['deleted']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get flow version
	 * 
	 * @param {String} flowId Flow ID
	 * @param {String} versionId Version ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.deleted Deleted flows
	 */},{key:"getFlowVersion",value:function getFlowVersion(flowId,versionId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getFlowVersion';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions/{versionId}','GET',{'flowId':flowId,'versionId':versionId},{'deleted':opts['deleted']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create flow version configuration
	 * 
	 * @param {String} flowId Flow ID
	 * @param {String} versionId Version ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.deleted Deleted flows
	 */},{key:"getFlowVersionConfiguration",value:function getFlowVersionConfiguration(flowId,versionId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersionConfiguration';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getFlowVersionConfiguration';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions/{versionId}/configuration','GET',{'flowId':flowId,'versionId':versionId},{'deleted':opts['deleted']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get overall health scores for all intents present in the NLU domain version associated with the bot flow version.
	 * 
	 * @param {String} flowId Flow ID.
	 * @param {String} versionId Version ID.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.language Language to filter for
	 */},{key:"getFlowVersionHealth",value:function getFlowVersionHealth(flowId,versionId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersionHealth';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getFlowVersionHealth';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions/{versionId}/health','GET',{'flowId':flowId,'versionId':versionId},{'language':opts['language']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get health scores and other health metrics for a specific intent. This includes the health metrics for each utterance in an intent.
	 * 
	 * @param {String} flowId Flow ID.
	 * @param {String} versionId Version ID.
	 * @param {String} intentId Intent ID.
	 * @param {Object} language Language to filter for
	 */},{key:"getFlowVersionIntentHealth",value:function getFlowVersionIntentHealth(flowId,versionId,intentId,language){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersionIntentHealth';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getFlowVersionIntentHealth';}// verify the required parameter 'intentId' is set
if(intentId===undefined||intentId===null){throw'Missing the required parameter "intentId" when calling getFlowVersionIntentHealth';}// verify the required parameter 'language' is set
if(language===undefined||language===null){throw'Missing the required parameter "language" when calling getFlowVersionIntentHealth';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/health','GET',{'flowId':flowId,'versionId':versionId,'intentId':intentId},{'language':language},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get health metrics associated with a specific utterance of an intent.
	 * 
	 * @param {String} flowId Flow ID.
	 * @param {String} versionId Version ID.
	 * @param {String} intentId Intent ID.
	 * @param {String} utteranceId Utterance ID.
	 * @param {Object} language Language to filter for
	 */},{key:"getFlowVersionIntentUtteranceHealth",value:function getFlowVersionIntentUtteranceHealth(flowId,versionId,intentId,utteranceId,language){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersionIntentUtteranceHealth';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getFlowVersionIntentUtteranceHealth';}// verify the required parameter 'intentId' is set
if(intentId===undefined||intentId===null){throw'Missing the required parameter "intentId" when calling getFlowVersionIntentUtteranceHealth';}// verify the required parameter 'utteranceId' is set
if(utteranceId===undefined||utteranceId===null){throw'Missing the required parameter "utteranceId" when calling getFlowVersionIntentUtteranceHealth';}// verify the required parameter 'language' is set
if(language===undefined||language===null){throw'Missing the required parameter "language" when calling getFlowVersionIntentUtteranceHealth';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions/{versionId}/intents/{intentId}/utterances/{utteranceId}/health','GET',{'flowId':flowId,'versionId':versionId,'intentId':intentId,'utteranceId':utteranceId},{'language':language},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get flow version list
	 * 
	 * @param {String} flowId Flow ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.deleted Include Deleted flows
	 */},{key:"getFlowVersions",value:function getFlowVersions(flowId,opts){opts=opts||{};// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling getFlowVersions';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions','GET',{'flowId':flowId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'deleted':opts['deleted']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of flows, filtered by query parameters
	 * If one or more IDs are specified, the search will fetch flows that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.type Type
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 * @param {String} opts.publishVersionId Publish version ID
	 * @param {String} opts.editableBy Editable by
	 * @param {String} opts.lockedBy Locked by
	 * @param {String} opts.lockedByClientId Locked by client ID
	 * @param {Object} opts.secure Secure
	 * @param {Boolean} opts.deleted Include deleted (default to false)
	 * @param {Boolean} opts.includeSchemas Include variable schemas (default to false)
	 * @param {String} opts.publishedAfter Published after
	 * @param {String} opts.publishedBefore Published before
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 */},{key:"getFlows",value:function getFlows(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows','GET',{},{'type':this.apiClient.buildCollectionParam(opts['type'],'multi'),'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'description':opts['description'],'nameOrDescription':opts['nameOrDescription'],'publishVersionId':opts['publishVersionId'],'editableBy':opts['editableBy'],'lockedBy':opts['lockedBy'],'lockedByClientId':opts['lockedByClientId'],'secure':opts['secure'],'deleted':opts['deleted'],'includeSchemas':opts['includeSchemas'],'publishedAfter':opts['publishedAfter'],'publishedBefore':opts['publishedBefore'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a specific datatable by id
	 * Given a datatableId returns the datatable object and schema associated with it.
	 * @param {String} datatableId id of datatable
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the result
	 */},{key:"getFlowsDatatable",value:function getFlowsDatatable(datatableId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatable';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}','GET',{'datatableId':datatableId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the state information about an export job
	 * Returns the state information about an export job.
	 * @param {String} datatableId id of datatable
	 * @param {String} exportJobId id of export job
	 */},{key:"getFlowsDatatableExportJob",value:function getFlowsDatatableExportJob(datatableId,exportJobId){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatableExportJob';}// verify the required parameter 'exportJobId' is set
if(exportJobId===undefined||exportJobId===null){throw'Missing the required parameter "exportJobId" when calling getFlowsDatatableExportJob';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}','GET',{'datatableId':datatableId,'exportJobId':exportJobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the state information about an import job
	 * Returns the state information about an import job.
	 * @param {String} datatableId id of datatable
	 * @param {String} importJobId id of import job
	 */},{key:"getFlowsDatatableImportJob",value:function getFlowsDatatableImportJob(datatableId,importJobId){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatableImportJob';}// verify the required parameter 'importJobId' is set
if(importJobId===undefined||importJobId===null){throw'Missing the required parameter "importJobId" when calling getFlowsDatatableImportJob';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/import/jobs/{importJobId}','GET',{'datatableId':datatableId,'importJobId':importJobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all recent import jobs
	 * Get all recent import jobs
	 * @param {String} datatableId id of datatable
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getFlowsDatatableImportJobs",value:function getFlowsDatatableImportJobs(datatableId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatableImportJobs';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/import/jobs','GET',{'datatableId':datatableId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a specific row for the datatable
	 * Given a datatableId and a rowId (the value of the key field) this will return the full row contents for that rowId.
	 * @param {String} datatableId id of datatable
	 * @param {String} rowId The key for the row
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.showbrief if true returns just the key field for the row (default to true)
	 */},{key:"getFlowsDatatableRow",value:function getFlowsDatatableRow(datatableId,rowId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatableRow';}// verify the required parameter 'rowId' is set
if(rowId===undefined||rowId===null){throw'Missing the required parameter "rowId" when calling getFlowsDatatableRow';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/rows/{rowId}','GET',{'datatableId':datatableId,'rowId':rowId},{'showbrief':opts['showbrief']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the rows for the datatable with the given id
	 * Returns all of the rows for the datatable with the given datatableId.  By default this will just be a truncated list returning the key for each row. Set showBrief to false to return all of the row contents.
	 * @param {String} datatableId id of datatable
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.showbrief If true returns just the key value of the row (default to true)
	 * @param {Object} opts.sortOrder Sort order (default to ascending)
	 */},{key:"getFlowsDatatableRows",value:function getFlowsDatatableRows(datatableId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatableRows';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/rows','GET',{'datatableId':datatableId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'showbrief':opts['showbrief'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of datatables for the org
	 * Returns a metadata list of the datatables associated with this org, including datatableId, name and description.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the result
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to ascending)
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 * @param {String} opts.name Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive.
	 */},{key:"getFlowsDatatables",value:function getFlowsDatatables(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/datatables','GET',{},{'expand':opts['expand'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a specific datatable by id
	 * Given a datatableId returns the datatable object and schema associated with it.
	 * @param {String} datatableId id of datatable
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the result
	 */},{key:"getFlowsDatatablesDivisionview",value:function getFlowsDatatablesDivisionview(datatableId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling getFlowsDatatablesDivisionview';}return this.apiClient.callApi('/api/v2/flows/datatables/divisionviews/{datatableId}','GET',{'datatableId':datatableId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of datatables for the org
	 * Returns a metadata list of the datatables associated with this org, including datatableId, name and description.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the result
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to ascending)
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 * @param {String} opts.name Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive.
	 */},{key:"getFlowsDatatablesDivisionviews",value:function getFlowsDatatablesDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/datatables/divisionviews','GET',{},{'expand':opts['expand'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic flow information objects filterable by query parameters.
	 * This returns a simplified version of /flow consisting of name and type. If one or more IDs are specified, the search will fetch flows that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.type Type
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {String} opts.publishVersionId Publish version ID
	 * @param {String} opts.publishedAfter Published after
	 * @param {String} opts.publishedBefore Published before
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 * @param {Boolean} opts.includeSchemas Include variable schemas (default to false)
	 */},{key:"getFlowsDivisionviews",value:function getFlowsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/divisionviews','GET',{},{'type':this.apiClient.buildCollectionParam(opts['type'],'multi'),'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'publishVersionId':opts['publishVersionId'],'publishedAfter':opts['publishedAfter'],'publishedBefore':opts['publishedBefore'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'includeSchemas':opts['includeSchemas']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a flow execution's details. Flow execution details are available for several days after the flow is started.
	 * 
	 * @param {String} flowExecutionId flow execution ID
	 */},{key:"getFlowsExecution",value:function getFlowsExecution(flowExecutionId){// verify the required parameter 'flowExecutionId' is set
if(flowExecutionId===undefined||flowExecutionId===null){throw'Missing the required parameter "flowExecutionId" when calling getFlowsExecution';}return this.apiClient.callApi('/api/v2/flows/executions/{flowExecutionId}','GET',{'flowExecutionId':flowExecutionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start a process (job) to prepare a download of a singular flow execution data instance by Id
	 * Returns a JobResult object that contains an ID that can be used to check status and/or download links when the process (job) is complete.
	 * @param {String} instanceId Instance ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand various details.
	 * getFlowsInstance is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getFlowsInstance",value:function getFlowsInstance(instanceId,opts){opts=opts||{};// verify the required parameter 'instanceId' is set
if(instanceId===undefined||instanceId===null){throw'Missing the required parameter "instanceId" when calling getFlowsInstance';}return this.apiClient.callApi('/api/v2/flows/instances/{instanceId}','GET',{'instanceId':instanceId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status and/or results of an asynchronous flow execution data retrieval job
	 * 
	 * @param {String} jobId The asynchronous job ID
	 * getFlowsInstancesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getFlowsInstancesJob",value:function getFlowsInstancesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getFlowsInstancesJob';}return this.apiClient.callApi('/api/v2/flows/instances/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of capabilities that the org can use to query for execution data
	 * Returns the queryable parameters that can be used to build a query for execution data.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand various query types.
	 * getFlowsInstancesQuerycapabilities is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getFlowsInstancesQuerycapabilities",value:function getFlowsInstancesQuerycapabilities(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/instances/querycapabilities','GET',{},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch Architect Job Status
	 * 
	 * @param {String} jobId Job ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getFlowsJob",value:function getFlowsJob(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getFlowsJob';}return this.apiClient.callApi('/api/v2/flows/jobs/{jobId}','GET',{'jobId':jobId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a flow milestone
	 * Returns a specified flow milestone
	 * @param {String} milestoneId flow milestone ID
	 */},{key:"getFlowsMilestone",value:function getFlowsMilestone(milestoneId){// verify the required parameter 'milestoneId' is set
if(milestoneId===undefined||milestoneId===null){throw'Missing the required parameter "milestoneId" when calling getFlowsMilestone';}return this.apiClient.callApi('/api/v2/flows/milestones/{milestoneId}','GET',{'milestoneId':milestoneId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of flow milestones, filtered by query parameters
	 * Multiple IDs can be specified, in which case all matching flow milestones will be returned, and no other parameters will be evaluated.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 */},{key:"getFlowsMilestones",value:function getFlowsMilestones(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/milestones','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'description':opts['description'],'nameOrDescription':opts['nameOrDescription'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic flow milestone information objects filterable by query parameters.
	 * This returns flow milestones consisting of name and division. If one or more IDs are specified, the search will fetch flow milestones that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 */},{key:"getFlowsMilestonesDivisionviews",value:function getFlowsMilestonesDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/milestones/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a flow outcome
	 * Returns a specified flow outcome
	 * @param {String} flowOutcomeId flow outcome ID
	 */},{key:"getFlowsOutcome",value:function getFlowsOutcome(flowOutcomeId){// verify the required parameter 'flowOutcomeId' is set
if(flowOutcomeId===undefined||flowOutcomeId===null){throw'Missing the required parameter "flowOutcomeId" when calling getFlowsOutcome';}return this.apiClient.callApi('/api/v2/flows/outcomes/{flowOutcomeId}','GET',{'flowOutcomeId':flowOutcomeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of flow outcomes, filtered by query parameters
	 * Multiple IDs can be specified, in which case all matching flow outcomes will be returned, and no other parameters will be evaluated.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {String} opts.description Description
	 * @param {String} opts.nameOrDescription Name or description
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 */},{key:"getFlowsOutcomes",value:function getFlowsOutcomes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/outcomes','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'description':opts['description'],'nameOrDescription':opts['nameOrDescription'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic flow outcome information objects filterable by query parameters.
	 * This returns flow outcomes consisting of name and division. If one or more IDs are specified, the search will fetch flow outcomes that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to id)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 * @param {Array.<String>} opts.id ID
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.divisionId division ID(s)
	 */},{key:"getFlowsOutcomesDivisionviews",value:function getFlowsOutcomesDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/outcomes/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a grammar
	 * 
	 * @param {String} grammarId grammar ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 * patchArchitectGrammar is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchArchitectGrammar",value:function patchArchitectGrammar(grammarId,opts){opts=opts||{};// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling patchArchitectGrammar';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}','PATCH',{'grammarId':grammarId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a grammar language
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 * patchArchitectGrammarLanguage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchArchitectGrammarLanguage",value:function patchArchitectGrammarLanguage(grammarId,languageCode,opts){opts=opts||{};// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling patchArchitectGrammarLanguage';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling patchArchitectGrammarLanguage';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}','PATCH',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Rebuild Dependency Tracking data for an organization
	 * Asynchronous.  Notification topic: v2.architect.dependencytracking.build
	 */},{key:"postArchitectDependencytrackingBuild",value:function postArchitectDependencytrackingBuild(){return this.apiClient.callApi('/api/v2/architect/dependencytracking/build','POST',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a new emergency group
	 * 
	 * @param {Object} body 
	 */},{key:"postArchitectEmergencygroups",value:function postArchitectEmergencygroups(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectEmergencygroups';}return this.apiClient.callApi('/api/v2/architect/emergencygroups','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a presigned URL for uploading a grammar DTMF mode file
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * @param {Object} body query
	 * postArchitectGrammarLanguageFilesDtmf is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postArchitectGrammarLanguageFilesDtmf",value:function postArchitectGrammarLanguageFilesDtmf(grammarId,languageCode,body){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling postArchitectGrammarLanguageFilesDtmf';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postArchitectGrammarLanguageFilesDtmf';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectGrammarLanguageFilesDtmf';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}/files/dtmf','POST',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a presigned URL for uploading a grammar voice mode file
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {String} languageCode Language
	 * @param {Object} body query
	 * postArchitectGrammarLanguageFilesVoice is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postArchitectGrammarLanguageFilesVoice",value:function postArchitectGrammarLanguageFilesVoice(grammarId,languageCode,body){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling postArchitectGrammarLanguageFilesVoice';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postArchitectGrammarLanguageFilesVoice';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectGrammarLanguageFilesVoice';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages/{languageCode}/files/voice','POST',{'grammarId':grammarId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new language for a given grammar
	 * 
	 * @param {String} grammarId Grammar ID
	 * @param {Object} body 
	 * postArchitectGrammarLanguages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postArchitectGrammarLanguages",value:function postArchitectGrammarLanguages(grammarId,body){// verify the required parameter 'grammarId' is set
if(grammarId===undefined||grammarId===null){throw'Missing the required parameter "grammarId" when calling postArchitectGrammarLanguages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectGrammarLanguages';}return this.apiClient.callApi('/api/v2/architect/grammars/{grammarId}/languages','POST',{'grammarId':grammarId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new grammar
	 * 
	 * @param {Object} body 
	 * postArchitectGrammars is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postArchitectGrammars",value:function postArchitectGrammars(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectGrammars';}return this.apiClient.callApi('/api/v2/architect/grammars','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create IVR config.
	 * 
	 * @param {Object} body 
	 */},{key:"postArchitectIvrs",value:function postArchitectIvrs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectIvrs';}return this.apiClient.callApi('/api/v2/architect/ivrs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate prompt history
	 * Asynchronous.  Notification topic: v2.architect.prompts.{promptId}
	 * @param {String} promptId Prompt ID
	 */},{key:"postArchitectPromptHistory",value:function postArchitectPromptHistory(promptId){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling postArchitectPromptHistory';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/history','POST',{'promptId':promptId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new user prompt resource
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {Object} body 
	 */},{key:"postArchitectPromptResources",value:function postArchitectPromptResources(promptId,body){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling postArchitectPromptResources';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectPromptResources';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources','POST',{'promptId':promptId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new user prompt
	 * 
	 * @param {Object} body 
	 */},{key:"postArchitectPrompts",value:function postArchitectPrompts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectPrompts';}return this.apiClient.callApi('/api/v2/architect/prompts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a new schedule group
	 * 
	 * @param {Object} body 
	 */},{key:"postArchitectSchedulegroups",value:function postArchitectSchedulegroups(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectSchedulegroups';}return this.apiClient.callApi('/api/v2/architect/schedulegroups','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new schedule.
	 * 
	 * @param {Object} body 
	 */},{key:"postArchitectSchedules",value:function postArchitectSchedules(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectSchedules';}return this.apiClient.callApi('/api/v2/architect/schedules','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate system prompt history
	 * Asynchronous.  Notification topic: v2.architect.systemprompts.{systemPromptId}
	 * @param {String} promptId promptId
	 */},{key:"postArchitectSystempromptHistory",value:function postArchitectSystempromptHistory(promptId){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling postArchitectSystempromptHistory';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/history','POST',{'promptId':promptId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create system prompt resource override.
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {Object} body 
	 */},{key:"postArchitectSystempromptResources",value:function postArchitectSystempromptResources(promptId,body){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling postArchitectSystempromptResources';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postArchitectSystempromptResources';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/resources','POST',{'promptId':promptId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate flow history
	 * Asynchronous.  Notification topic: v2.flows.{flowId}
	 * @param {String} flowId Flow ID
	 */},{key:"postFlowHistory",value:function postFlowHistory(flowId){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling postFlowHistory';}return this.apiClient.callApi('/api/v2/flows/{flowId}/history','POST',{'flowId':flowId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create flow version
	 * 
	 * @param {String} flowId Flow ID
	 * @param {Object.<String, {String: Object}>} body 
	 */},{key:"postFlowVersions",value:function postFlowVersions(flowId,body){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling postFlowVersions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlowVersions';}return this.apiClient.callApi('/api/v2/flows/{flowId}/versions','POST',{'flowId':flowId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create flow
	 * 
	 * @param {Object} body 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.language Language
	 */},{key:"postFlows",value:function postFlows(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlows';}return this.apiClient.callApi('/api/v2/flows','POST',{},{'language':opts['language']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Check-in flow
	 * Asynchronous.  Notification topic: v2.flows.{flowId}
	 * @param {String} flow Flow ID
	 */},{key:"postFlowsActionsCheckin",value:function postFlowsActionsCheckin(flow){// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsCheckin';}return this.apiClient.callApi('/api/v2/flows/actions/checkin','POST',{},{'flow':flow},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Check-out flow
	 * 
	 * @param {String} flow Flow ID
	 */},{key:"postFlowsActionsCheckout",value:function postFlowsActionsCheckout(flow){// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsCheckout';}return this.apiClient.callApi('/api/v2/flows/actions/checkout','POST',{},{'flow':flow},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deactivate flow
	 * 
	 * @param {String} flow Flow ID
	 */},{key:"postFlowsActionsDeactivate",value:function postFlowsActionsDeactivate(flow){// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsDeactivate';}return this.apiClient.callApi('/api/v2/flows/actions/deactivate','POST',{},{'flow':flow},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish flow
	 * Asynchronous.  Notification topic: v2.flows.{flowId}
	 * @param {String} flow Flow ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.version version
	 */},{key:"postFlowsActionsPublish",value:function postFlowsActionsPublish(flow,opts){opts=opts||{};// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsPublish';}return this.apiClient.callApi('/api/v2/flows/actions/publish','POST',{},{'flow':flow,'version':opts['version']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Revert flow
	 * 
	 * @param {String} flow Flow ID
	 */},{key:"postFlowsActionsRevert",value:function postFlowsActionsRevert(flow){// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsRevert';}return this.apiClient.callApi('/api/v2/flows/actions/revert','POST',{},{'flow':flow},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Unlock flow
	 * Allows for unlocking a flow in the case where there is no flow configuration available, and thus a check-in will not unlock the flow. The user must have Architect Admin permissions to perform this action.
	 * @param {String} flow Flow ID
	 */},{key:"postFlowsActionsUnlock",value:function postFlowsActionsUnlock(flow){// verify the required parameter 'flow' is set
if(flow===undefined||flow===null){throw'Missing the required parameter "flow" when calling postFlowsActionsUnlock';}return this.apiClient.callApi('/api/v2/flows/actions/unlock','POST',{},{'flow':flow},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Begin an export process for exporting all rows from a datatable
	 * Create an export job for exporting rows. The caller can then poll for status of the export using the token returned in the response
	 * @param {String} datatableId id of datatable
	 */},{key:"postFlowsDatatableExportJobs",value:function postFlowsDatatableExportJobs(datatableId){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling postFlowsDatatableExportJobs';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/export/jobs','POST',{'datatableId':datatableId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Begin an import process for importing rows into a datatable
	 * Create an import job for importing rows. The caller can then poll for status of the import using the token returned in the response
	 * @param {String} datatableId id of datatable
	 * @param {Object} body import job information
	 */},{key:"postFlowsDatatableImportJobs",value:function postFlowsDatatableImportJobs(datatableId,body){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling postFlowsDatatableImportJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlowsDatatableImportJobs';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/import/jobs','POST',{'datatableId':datatableId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new row entry for the datatable.
	 * Will add the passed in row entry to the datatable with the given datatableId after verifying it against the schema.  When building the request body within API Explorer, Pro mode should be used. The DataTableRow should be a json-ized stream of key -> value pairs {      "Field1": "XYZZY",      "Field2": false,      "KEY": "27272"  }
	 * @param {String} datatableId id of datatable
	 * @param {Object.<String, {String: Object}>} dataTableRow 
	 */},{key:"postFlowsDatatableRows",value:function postFlowsDatatableRows(datatableId,dataTableRow){// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling postFlowsDatatableRows';}// verify the required parameter 'dataTableRow' is set
if(dataTableRow===undefined||dataTableRow===null){throw'Missing the required parameter "dataTableRow" when calling postFlowsDatatableRows';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/rows','POST',{'datatableId':datatableId},{},{},{},dataTableRow,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new datatable with the specified json-schema definition
	 * This will create a new datatable with fields that match the property definitions in the JSON schema.  The schemas title field will be overridden by the name field in the DataTable object.  See also http://json-schema.org/
	 * @param {Object} body datatable json-schema
	 */},{key:"postFlowsDatatables",value:function postFlowsDatatables(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlowsDatatables';}return this.apiClient.callApi('/api/v2/flows/datatables','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.
	 * The launch is asynchronous, it returns as soon as the flow starts. You can use the returned ID to query its status if you need.
	 * @param {Object} flowLaunchRequest 
	 */},{key:"postFlowsExecutions",value:function postFlowsExecutions(flowLaunchRequest){// verify the required parameter 'flowLaunchRequest' is set
if(flowLaunchRequest===undefined||flowLaunchRequest===null){throw'Missing the required parameter "flowLaunchRequest" when calling postFlowsExecutions';}return this.apiClient.callApi('/api/v2/flows/executions','POST',{},{},{},{},flowLaunchRequest,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start a process (job) that will prepare a list of execution data IDs for download.
	 * Returns a JobResult object that contains an ID that can be used to check status and/or download links when the process (job) is complete.
	 * @param {Object} body Requested Flow Ids
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand various query types.
	 * postFlowsInstancesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postFlowsInstancesJobs",value:function postFlowsInstancesJobs(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlowsInstancesJobs';}return this.apiClient.callApi('/api/v2/flows/instances/jobs','POST',{},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the database of existing flow histories to look for particular flow criteria
	 * Returns a list of matching flow histories up to 200 max.
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.indexOnly indexes only
	 * postFlowsInstancesQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postFlowsInstancesQuery",value:function postFlowsInstancesQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postFlowsInstancesQuery';}return this.apiClient.callApi('/api/v2/flows/instances/query','POST',{},{'indexOnly':opts['indexOnly']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.
	 * 
	 */},{key:"postFlowsJobs",value:function postFlowsJobs(){return this.apiClient.callApi('/api/v2/flows/jobs','POST',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a flow milestone
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postFlowsMilestones",value:function postFlowsMilestones(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/milestones','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a flow outcome
	 * Asynchronous.  Notification topic: v2.flows.outcomes.{flowOutcomeId}
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postFlowsOutcomes",value:function postFlowsOutcomes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/flows/outcomes','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a emergency group by ID
	 * 
	 * @param {String} emergencyGroupId Emergency group ID
	 * @param {Object} body 
	 */},{key:"putArchitectEmergencygroup",value:function putArchitectEmergencygroup(emergencyGroupId,body){// verify the required parameter 'emergencyGroupId' is set
if(emergencyGroupId===undefined||emergencyGroupId===null){throw'Missing the required parameter "emergencyGroupId" when calling putArchitectEmergencygroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectEmergencygroup';}return this.apiClient.callApi('/api/v2/architect/emergencygroups/{emergencyGroupId}','PUT',{'emergencyGroupId':emergencyGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an IVR Config.
	 * 
	 * @param {String} ivrId IVR id
	 * @param {Object} body 
	 */},{key:"putArchitectIvr",value:function putArchitectIvr(ivrId,body){// verify the required parameter 'ivrId' is set
if(ivrId===undefined||ivrId===null){throw'Missing the required parameter "ivrId" when calling putArchitectIvr';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectIvr';}return this.apiClient.callApi('/api/v2/architect/ivrs/{ivrId}','PUT',{'ivrId':ivrId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update specified user prompt
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {Object} body 
	 */},{key:"putArchitectPrompt",value:function putArchitectPrompt(promptId,body){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling putArchitectPrompt';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectPrompt';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}','PUT',{'promptId':promptId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update specified user prompt resource
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 * @param {Object} body 
	 */},{key:"putArchitectPromptResource",value:function putArchitectPromptResource(promptId,languageCode,body){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling putArchitectPromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling putArchitectPromptResource';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectPromptResource';}return this.apiClient.callApi('/api/v2/architect/prompts/{promptId}/resources/{languageCode}','PUT',{'promptId':promptId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update schedule by ID
	 * 
	 * @param {String} scheduleId Schedule ID
	 * @param {Object} body 
	 */},{key:"putArchitectSchedule",value:function putArchitectSchedule(scheduleId,body){// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling putArchitectSchedule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectSchedule';}return this.apiClient.callApi('/api/v2/architect/schedules/{scheduleId}','PUT',{'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a schedule group by ID
	 * 
	 * @param {String} scheduleGroupId Schedule group ID
	 * @param {Object} body 
	 */},{key:"putArchitectSchedulegroup",value:function putArchitectSchedulegroup(scheduleGroupId,body){// verify the required parameter 'scheduleGroupId' is set
if(scheduleGroupId===undefined||scheduleGroupId===null){throw'Missing the required parameter "scheduleGroupId" when calling putArchitectSchedulegroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectSchedulegroup';}return this.apiClient.callApi('/api/v2/architect/schedulegroups/{scheduleGroupId}','PUT',{'scheduleGroupId':scheduleGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a system prompt resource override.
	 * 
	 * @param {String} promptId Prompt ID
	 * @param {String} languageCode Language
	 * @param {Object} body 
	 */},{key:"putArchitectSystempromptResource",value:function putArchitectSystempromptResource(promptId,languageCode,body){// verify the required parameter 'promptId' is set
if(promptId===undefined||promptId===null){throw'Missing the required parameter "promptId" when calling putArchitectSystempromptResource';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling putArchitectSystempromptResource';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putArchitectSystempromptResource';}return this.apiClient.callApi('/api/v2/architect/systemprompts/{promptId}/resources/{languageCode}','PUT',{'promptId':promptId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update flow
	 * 
	 * @param {String} flowId Flow ID
	 * @param {Object} body 
	 */},{key:"putFlow",value:function putFlow(flowId,body){// verify the required parameter 'flowId' is set
if(flowId===undefined||flowId===null){throw'Missing the required parameter "flowId" when calling putFlow';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putFlow';}return this.apiClient.callApi('/api/v2/flows/{flowId}','PUT',{'flowId':flowId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a specific datatable by id
	 * Updates a schema for a datatable with the given datatableId -updates allow only new fields to be added in the schema, no changes or removals of existing fields.
	 * @param {String} datatableId id of datatable
	 * @param {Object} body datatable json-schema
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the result
	 */},{key:"putFlowsDatatable",value:function putFlowsDatatable(datatableId,body,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling putFlowsDatatable';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putFlowsDatatable';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}','PUT',{'datatableId':datatableId},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a row entry
	 * Updates a row with the given rowId (the value of the key field) to the new values.  When building the request body within API Explorer, Pro mode should be used. The DataTableRow should be a json-ized stream of key -> value pairs {     "Field1": "XYZZY",     "Field2": false,     "KEY": "27272" }
	 * @param {String} datatableId id of datatable
	 * @param {String} rowId the key for the row
	 * @param {Object} opts Optional parameters
	 * @param {Object.<String, {String: Object}>} opts.body datatable row
	 */},{key:"putFlowsDatatableRow",value:function putFlowsDatatableRow(datatableId,rowId,opts){opts=opts||{};// verify the required parameter 'datatableId' is set
if(datatableId===undefined||datatableId===null){throw'Missing the required parameter "datatableId" when calling putFlowsDatatableRow';}// verify the required parameter 'rowId' is set
if(rowId===undefined||rowId===null){throw'Missing the required parameter "rowId" when calling putFlowsDatatableRow';}return this.apiClient.callApi('/api/v2/flows/datatables/{datatableId}/rows/{rowId}','PUT',{'datatableId':datatableId,'rowId':rowId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a flow milestone
	 * 
	 * @param {String} milestoneId flow milestone ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"putFlowsMilestone",value:function putFlowsMilestone(milestoneId,opts){opts=opts||{};// verify the required parameter 'milestoneId' is set
if(milestoneId===undefined||milestoneId===null){throw'Missing the required parameter "milestoneId" when calling putFlowsMilestone';}return this.apiClient.callApi('/api/v2/flows/milestones/{milestoneId}','PUT',{'milestoneId':milestoneId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a flow outcome
	 * Updates a flow outcome.  Asynchronous.  Notification topic: v2.flowoutcomes.{flowoutcomeId}
	 * @param {String} flowOutcomeId flow outcome ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"putFlowsOutcome",value:function putFlowsOutcome(flowOutcomeId,opts){opts=opts||{};// verify the required parameter 'flowOutcomeId' is set
if(flowOutcomeId===undefined||flowOutcomeId===null){throw'Missing the required parameter "flowOutcomeId" when calling putFlowsOutcome';}return this.apiClient.callApi('/api/v2/flows/outcomes/{flowOutcomeId}','PUT',{'flowOutcomeId':flowOutcomeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ArchitectApi;}();var AuditApi=/*#__PURE__*/function(){/**
	 * Audit service.
	 * @module purecloud-platform-client-v2/api/AuditApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new AuditApi. 
	 * @alias module:purecloud-platform-client-v2/api/AuditApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function AuditApi(apiClient){_classCallCheck(this,AuditApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get service mapping information used in realtime audits.
	 * 
	 */_createClass(AuditApi,[{key:"getAuditsQueryRealtimeServicemapping",value:function getAuditsQueryRealtimeServicemapping(){return this.apiClient.callApi('/api/v2/audits/query/realtime/servicemapping','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get service mapping information used in audits.
	 * 
	 */},{key:"getAuditsQueryServicemapping",value:function getAuditsQueryServicemapping(){return this.apiClient.callApi('/api/v2/audits/query/servicemapping','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status of audit query execution
	 * 
	 * @param {String} transactionId Transaction ID
	 */},{key:"getAuditsQueryTransactionId",value:function getAuditsQueryTransactionId(transactionId){// verify the required parameter 'transactionId' is set
if(transactionId===undefined||transactionId===null){throw'Missing the required parameter "transactionId" when calling getAuditsQueryTransactionId';}return this.apiClient.callApi('/api/v2/audits/query/{transactionId}','GET',{'transactionId':transactionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get results of audit query
	 * 
	 * @param {String} transactionId Transaction ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize Indicates maximum number of results in response. Default page size is 25 results. The maximum page size is 500. (default to 25)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getAuditsQueryTransactionIdResults",value:function getAuditsQueryTransactionIdResults(transactionId,opts){opts=opts||{};// verify the required parameter 'transactionId' is set
if(transactionId===undefined||transactionId===null){throw'Missing the required parameter "transactionId" when calling getAuditsQueryTransactionIdResults';}return this.apiClient.callApi('/api/v2/audits/query/{transactionId}/results','GET',{'transactionId':transactionId},{'cursor':opts['cursor'],'pageSize':opts['pageSize'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create audit query execution
	 * Use /api/v2/audits/query/servicemapping endpoint for a list of valid values
	 * @param {Object} body query
	 */},{key:"postAuditsQuery",value:function postAuditsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuditsQuery';}return this.apiClient.callApi('/api/v2/audits/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * This endpoint will only retrieve 14 days worth of audits for certain services. Please use /query to get a full list and older audits.
	 * Use /api/v2/audits/query/realtime/servicemapping endpoint for a list of valid values
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"postAuditsQueryRealtime",value:function postAuditsQueryRealtime(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuditsQueryRealtime';}return this.apiClient.callApi('/api/v2/audits/query/realtime','POST',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return AuditApi;}();var AuthorizationApi=/*#__PURE__*/function(){/**
	 * Authorization service.
	 * @module purecloud-platform-client-v2/api/AuthorizationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new AuthorizationApi. 
	 * @alias module:purecloud-platform-client-v2/api/AuthorizationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function AuthorizationApi(apiClient){_classCallCheck(this,AuthorizationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.force Force delete this division as well as the grants and objects associated with it (default to false)
	 */_createClass(AuthorizationApi,[{key:"deleteAuthorizationDivision",value:function deleteAuthorizationDivision(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling deleteAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','DELETE',{'divisionId':divisionId},{'force':opts['force']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an organization role.
	 * 
	 * @param {String} roleId Role ID
	 */},{key:"deleteAuthorizationRole",value:function deleteAuthorizationRole(roleId){// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling deleteAuthorizationRole';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}','DELETE',{'roleId':roleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a grant of a role in a division
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} divisionId the id of the division of the grant
	 * @param {String} roleId the id of the role of the grant
	 */},{key:"deleteAuthorizationSubjectDivisionRole",value:function deleteAuthorizationSubjectDivisionRole(subjectId,divisionId,roleId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling deleteAuthorizationSubjectDivisionRole';}// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling deleteAuthorizationSubjectDivisionRole';}// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling deleteAuthorizationSubjectDivisionRole';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}','DELETE',{'subjectId':subjectId,'divisionId':divisionId,'roleId':roleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns an authorization division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.objectCount Get count of objects in this division, grouped by type (default to false)
	 */},{key:"getAuthorizationDivision",value:function getAuthorizationDivision(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling getAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','GET',{'divisionId':divisionId},{'objectCount':opts['objectCount']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all grants for a given division.
	 * Returns all grants assigned to a given division. Maximum page size is 500.
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getAuthorizationDivisionGrants",value:function getAuthorizationDivisionGrants(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling getAuthorizationDivisionGrants';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}/grants','GET',{'divisionId':divisionId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of all divisions defined for the organization
	 * Request specific divisions by id using a query param "id", e.g.  ?id=5f777167-63be-4c24-ad41-374155d9e28b&id=72e9fb25-c484-488d-9312-7acba82435b3
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Boolean} opts.objectCount Include the count of objects contained in the division (default to false)
	 * @param {Array.<String>} opts.id Optionally request specific divisions by their IDs
	 * @param {String} opts.name Search term to filter by division name
	 */},{key:"getAuthorizationDivisions",value:function getAuthorizationDivisions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/divisions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'objectCount':opts['objectCount'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve the home division for the organization.
	 * Will not include object counts.
	 */},{key:"getAuthorizationDivisionsHome",value:function getAuthorizationDivisionsHome(){return this.apiClient.callApi('/api/v2/authorization/divisions/home','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the maximum allowed number of divisions.
	 * 
	 */},{key:"getAuthorizationDivisionsLimit",value:function getAuthorizationDivisionsLimit(){return this.apiClient.callApi('/api/v2/authorization/divisions/limit','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the current user has the given permission in.
	 * This route is deprecated, use authorization/divisionspermitted/paged/me instead.
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.name Search term to filter by division name
	 * @deprecated
	 */},{key:"getAuthorizationDivisionspermittedMe",value:function getAuthorizationDivisionspermittedMe(permission,opts){opts=opts||{};// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedMe';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/me','GET',{},{'name':opts['name'],'permission':permission},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the current user has the given permission in.
	 * 
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getAuthorizationDivisionspermittedPagedMe",value:function getAuthorizationDivisionspermittedPagedMe(permission,opts){opts=opts||{};// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedPagedMe';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/paged/me','GET',{},{'permission':permission,'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the specified user has the given permission in.
	 * This route is deprecated, use authorization/divisionspermitted/paged/me instead.
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @deprecated
	 */},{key:"getAuthorizationDivisionspermittedPagedSubjectId",value:function getAuthorizationDivisionspermittedPagedSubjectId(subjectId,permission,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getAuthorizationDivisionspermittedPagedSubjectId';}// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedPagedSubjectId';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/paged/{subjectId}','GET',{'subjectId':subjectId},{'permission':permission,'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all permissions.
	 * Retrieve a list of all permission defined in the system.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.queryType Query filter type
	 * @param {String} opts.query Comma-separated list of permissions or domains to query
	 */},{key:"getAuthorizationPermissions",value:function getAuthorizationPermissions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/permissions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'queryType':opts['queryType'],'query':opts['query']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of enabled products
	 * Gets the list of enabled products. Some example product names are: collaborateFree, collaboratePro, communicate, and engage.
	 */},{key:"getAuthorizationProducts",value:function getAuthorizationProducts(){return this.apiClient.callApi('/api/v2/authorization/products','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a single organization role.
	 * Get the organization role specified by its ID.
	 * @param {String} roleId Role ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.userCount Fetch the count of users who have this role granted in at least one division. Setting this value or defaulting to 'true' can lead to slower load times or timeouts for role queries with large member counts. (default to true)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand. unusedPermissions returns the permissions not used for the role
	 */},{key:"getAuthorizationRole",value:function getAuthorizationRole(roleId,opts){opts=opts||{};// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling getAuthorizationRole';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}','GET',{'roleId':roleId},{'userCount':opts['userCount'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an org role to default role comparison
	 * Compares any organization role to a default role id and show differences
	 * @param {String} leftRoleId Left Role ID
	 * @param {String} rightRoleId Right Role id
	 */},{key:"getAuthorizationRoleComparedefaultRightRoleId",value:function getAuthorizationRoleComparedefaultRightRoleId(leftRoleId,rightRoleId){// verify the required parameter 'leftRoleId' is set
if(leftRoleId===undefined||leftRoleId===null){throw'Missing the required parameter "leftRoleId" when calling getAuthorizationRoleComparedefaultRightRoleId';}// verify the required parameter 'rightRoleId' is set
if(rightRoleId===undefined||rightRoleId===null){throw'Missing the required parameter "rightRoleId" when calling getAuthorizationRoleComparedefaultRightRoleId';}return this.apiClient.callApi('/api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}','GET',{'leftRoleId':leftRoleId,'rightRoleId':rightRoleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the subjects' granted divisions in the specified role.
	 * Includes the divisions for which the subject has a grant.
	 * @param {String} roleId Role ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getAuthorizationRoleSubjectgrants",value:function getAuthorizationRoleSubjectgrants(roleId,opts){opts=opts||{};// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling getAuthorizationRoleSubjectgrants';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}/subjectgrants','GET',{'roleId':roleId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of the users in a specified role.
	 * Get an array of the UUIDs of the users in the specified role.
	 * @param {String} roleId Role ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getAuthorizationRoleUsers",value:function getAuthorizationRoleUsers(roleId,opts){opts=opts||{};// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling getAuthorizationRoleUsers';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}/users','GET',{'roleId':roleId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of all roles defined for the organization
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.name 
	 * @param {Array.<String>} opts.permission 
	 * @param {Array.<String>} opts.defaultRoleId 
	 * @param {Boolean} opts.userCount  (default to true)
	 * @param {Array.<String>} opts.id id
	 */},{key:"getAuthorizationRoles",value:function getAuthorizationRoles(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/roles','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'name':opts['name'],'permission':this.apiClient.buildCollectionParam(opts['permission'],'multi'),'defaultRoleId':this.apiClient.buildCollectionParam(opts['defaultRoleId'],'multi'),'userCount':opts['userCount'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get authorization settings
	 * 
	 */},{key:"getAuthorizationSettings",value:function getAuthorizationSettings(){return this.apiClient.callApi('/api/v2/authorization/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for a user.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 */},{key:"getAuthorizationSubject",value:function getAuthorizationSubject(subjectId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getAuthorizationSubject';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}','GET',{'subjectId':subjectId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for the currently authenticated user.
	 * 
	 */},{key:"getAuthorizationSubjectsMe",value:function getAuthorizationSubjectsMe(){return this.apiClient.callApi('/api/v2/authorization/subjects/me','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the count of roles granted to a list of subjects
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id id
	 */},{key:"getAuthorizationSubjectsRolecounts",value:function getAuthorizationSubjectsRolecounts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/subjects/rolecounts','GET',{},{'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for a user.
	 * 
	 * @param {String} subjectId User ID
	 */},{key:"getUserRoles",value:function getUserRoles(subjectId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getUserRoles';}return this.apiClient.callApi('/api/v2/users/{subjectId}/roles','GET',{'subjectId':subjectId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch Organization Role for needsUpdate Field
	 * Patch Organization Role for needsUpdate Field
	 * @param {String} roleId Role ID
	 * @param {Object} body Organization role
	 */},{key:"patchAuthorizationRole",value:function patchAuthorizationRole(roleId,body){// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling patchAuthorizationRole';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchAuthorizationRole';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}','PATCH',{'roleId':roleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Change authorization settings
	 * Change authorization settings
	 * @param {Object} body Authorization Settings
	 */},{key:"patchAuthorizationSettings",value:function patchAuthorizationSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchAuthorizationSettings';}return this.apiClient.callApi('/api/v2/authorization/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Assign a list of objects to a division
	 * Set the division of a specified list of objects. The objects must all be of the same type, one of:  CAMPAIGN, MANAGEMENTUNIT, FLOW, QUEUE, DATATABLES or USER.  The body of the request is a list of object IDs, which are expected to be  GUIDs, e.g. ["206ce31f-61ec-40ed-a8b1-be6f06303998","250a754e-f5e4-4f51-800f-a92f09d3bf8c"]
	 * @param {String} divisionId Division ID
	 * @param {Object} objectType The type of the objects. Must be one of the valid object types
	 * @param {Array.<String>} body Object Id List
	 */},{key:"postAuthorizationDivisionObject",value:function postAuthorizationDivisionObject(divisionId,objectType,body){// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationDivisionObject';}// verify the required parameter 'objectType' is set
if(objectType===undefined||objectType===null){throw'Missing the required parameter "objectType" when calling postAuthorizationDivisionObject';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationDivisionObject';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}/objects/{objectType}','POST',{'divisionId':divisionId,'objectType':objectType},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Recreate a previously deleted division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Recreated division data
	 */},{key:"postAuthorizationDivisionRestore",value:function postAuthorizationDivisionRestore(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationDivisionRestore';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}/restore','POST',{'divisionId':divisionId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a division.
	 * 
	 * @param {Object} body Division
	 */},{key:"postAuthorizationDivisions",value:function postAuthorizationDivisions(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationDivisions';}return this.apiClient.callApi('/api/v2/authorization/divisions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk-grant subjects and divisions with an organization role.
	 * 
	 * @param {String} roleId Role ID
	 * @param {Object} body Subjects and Divisions
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subjects are (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (default to PC_USER)
	 */},{key:"postAuthorizationRole",value:function postAuthorizationRole(roleId,body,opts){opts=opts||{};// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling postAuthorizationRole';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationRole';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}','POST',{'roleId':roleId},{'subjectType':opts['subjectType']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an unsaved org role to default role comparison
	 * Allows users to compare their existing roles in an unsaved state to its default role
	 * @param {String} leftRoleId Left Role ID
	 * @param {String} rightRoleId Right Role id
	 * @param {Object} body Organization role
	 */},{key:"postAuthorizationRoleComparedefaultRightRoleId",value:function postAuthorizationRoleComparedefaultRightRoleId(leftRoleId,rightRoleId,body){// verify the required parameter 'leftRoleId' is set
if(leftRoleId===undefined||leftRoleId===null){throw'Missing the required parameter "leftRoleId" when calling postAuthorizationRoleComparedefaultRightRoleId';}// verify the required parameter 'rightRoleId' is set
if(rightRoleId===undefined||rightRoleId===null){throw'Missing the required parameter "rightRoleId" when calling postAuthorizationRoleComparedefaultRightRoleId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationRoleComparedefaultRightRoleId';}return this.apiClient.callApi('/api/v2/authorization/roles/{leftRoleId}/comparedefault/{rightRoleId}','POST',{'leftRoleId':leftRoleId,'rightRoleId':rightRoleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an organization role.
	 * 
	 * @param {Object} body Organization role
	 */},{key:"postAuthorizationRoles",value:function postAuthorizationRoles(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationRoles';}return this.apiClient.callApi('/api/v2/authorization/roles','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Restores all default roles
	 * This endpoint serves several purposes. 1. It provides the org with default roles. This is important for default roles that will be added after go-live (they can retroactively add the new default-role). Note: When not using a query param of force=true, it only adds the default roles not configured for the org; it does not overwrite roles. 2. Using the query param force=true, you can restore all default roles. Note: This does not have an effect on custom roles.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.force Restore default roles (default to false)
	 */},{key:"postAuthorizationRolesDefault",value:function postAuthorizationRolesDefault(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/roles/default','POST',{},{'force':opts['force']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk-grant roles and divisions to a subject.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectBulkadd",value:function postAuthorizationSubjectBulkadd(subjectId,body,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkadd';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkadd';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkadd','POST',{'subjectId':subjectId},{'subjectType':opts['subjectType']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk-remove grants from a subject.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 */},{key:"postAuthorizationSubjectBulkremove",value:function postAuthorizationSubjectBulkremove(subjectId,body){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkremove';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkremove';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkremove','POST',{'subjectId':subjectId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace subject's roles and divisions with the exact list supplied in the request.
	 * This operation will not remove grants that are inherited from group membership. It will only set the grants directly applied to the subject.
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectBulkreplace",value:function postAuthorizationSubjectBulkreplace(subjectId,body,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkreplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkreplace';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkreplace','POST',{'subjectId':subjectId},{'subjectType':opts['subjectType']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Make a grant of a role in a division
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} divisionId the id of the division to which to make the grant
	 * @param {String} roleId the id of the role to grant
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is: PC_GROUP, PC_USER or PC_OAUTH_CLIENT (note: for cross-org authorization, please use the Organization Authorization endpoints) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectDivisionRole",value:function postAuthorizationSubjectDivisionRole(subjectId,divisionId,roleId,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectDivisionRole';}// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationSubjectDivisionRole';}// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling postAuthorizationSubjectDivisionRole';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}','POST',{'subjectId':subjectId,'divisionId':divisionId,'roleId':roleId},{'subjectType':opts['subjectType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} body Updated division data
	 */},{key:"putAuthorizationDivision",value:function putAuthorizationDivision(divisionId,body){// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling putAuthorizationDivision';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','PUT',{'divisionId':divisionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an organization role.
	 * Update
	 * @param {String} roleId Role ID
	 * @param {Object} body Organization role
	 */},{key:"putAuthorizationRole",value:function putAuthorizationRole(roleId,body){// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling putAuthorizationRole';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationRole';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}','PUT',{'roleId':roleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sets the users for the role
	 * 
	 * @param {String} roleId Role ID
	 * @param {Array.<String>} body List of user IDs
	 */},{key:"putAuthorizationRoleUsersAdd",value:function putAuthorizationRoleUsersAdd(roleId,body){// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling putAuthorizationRoleUsersAdd';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationRoleUsersAdd';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}/users/add','PUT',{'roleId':roleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Removes the users from the role
	 * 
	 * @param {String} roleId Role ID
	 * @param {Array.<String>} body List of user IDs
	 */},{key:"putAuthorizationRoleUsersRemove",value:function putAuthorizationRoleUsersRemove(roleId,body){// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling putAuthorizationRoleUsersRemove';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationRoleUsersRemove';}return this.apiClient.callApi('/api/v2/authorization/roles/{roleId}/users/remove','PUT',{'roleId':roleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Restore specified default roles
	 * 
	 * @param {Array.<Object>} body Organization roles list
	 */},{key:"putAuthorizationRolesDefault",value:function putAuthorizationRolesDefault(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationRolesDefault';}return this.apiClient.callApi('/api/v2/authorization/roles/default','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sets the user's roles
	 * 
	 * @param {String} subjectId User ID
	 * @param {Array.<String>} body List of roles
	 */},{key:"putUserRoles",value:function putUserRoles(subjectId,body){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling putUserRoles';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoles';}return this.apiClient.callApi('/api/v2/users/{subjectId}/roles','PUT',{'subjectId':subjectId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return AuthorizationApi;}();var BillingApi=/*#__PURE__*/function(){/**
	 * Billing service.
	 * @module purecloud-platform-client-v2/api/BillingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new BillingApi. 
	 * @alias module:purecloud-platform-client-v2/api/BillingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function BillingApi(apiClient){_classCallCheck(this,BillingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get a report of the billable license usages
	 * Report is of the billable usages (e.g. licenses and devices utilized) for a given period. If responses status is InProgress, wait a few seconds, then try the same request again.
	 * @param {Date} startDate The period start date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Date} endDate The period end date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 */_createClass(BillingApi,[{key:"getBillingReportsBillableusage",value:function getBillingReportsBillableusage(startDate,endDate){// verify the required parameter 'startDate' is set
if(startDate===undefined||startDate===null){throw'Missing the required parameter "startDate" when calling getBillingReportsBillableusage';}// verify the required parameter 'endDate' is set
if(endDate===undefined||endDate===null){throw'Missing the required parameter "endDate" when calling getBillingReportsBillableusage';}return this.apiClient.callApi('/api/v2/billing/reports/billableusage','GET',{},{'startDate':startDate,'endDate':endDate},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the billing overview for an organization that is managed by a partner.
	 * Tax Disclaimer: Prices returned by this API do not include applicable taxes. It is the responsibility of the customer to pay all taxes that are appropriate in their jurisdiction. See the PureCloud API Documentation in the Developer Center for more information about this API: https://developer.mypurecloud.com/api/rest/v2/
	 * @param {String} trustorOrgId The organization ID of the trustor (customer) organization.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.billingPeriodIndex 0 for active period (overview data may change until period closes). 1 for prior completed billing period. 2 for two billing cycles prior, and so on. (default to 0)
	 */},{key:"getBillingTrusteebillingoverviewTrustorOrgId",value:function getBillingTrusteebillingoverviewTrustorOrgId(trustorOrgId,opts){opts=opts||{};// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getBillingTrusteebillingoverviewTrustorOrgId';}return this.apiClient.callApi('/api/v2/billing/trusteebillingoverview/{trustorOrgId}','GET',{'trustorOrgId':trustorOrgId},{'billingPeriodIndex':opts['billingPeriodIndex']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return BillingApi;}();var CarrierServicesApi=/*#__PURE__*/function(){/**
	 * CarrierServices service.
	 * @module purecloud-platform-client-v2/api/CarrierServicesApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new CarrierServicesApi. 
	 * @alias module:purecloud-platform-client-v2/api/CarrierServicesApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function CarrierServicesApi(apiClient){_classCallCheck(this,CarrierServicesApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get location for the logged in user
	 * 
	 * @param {String} phoneNumber Phone number in E164 format
	 */_createClass(CarrierServicesApi,[{key:"getCarrierservicesIntegrationsEmergencylocationsMe",value:function getCarrierservicesIntegrationsEmergencylocationsMe(phoneNumber){// verify the required parameter 'phoneNumber' is set
if(phoneNumber===undefined||phoneNumber===null){throw'Missing the required parameter "phoneNumber" when calling getCarrierservicesIntegrationsEmergencylocationsMe';}return this.apiClient.callApi('/api/v2/carrierservices/integrations/emergencylocations/me','GET',{},{'phoneNumber':phoneNumber},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set current location for the logged in user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postCarrierservicesIntegrationsEmergencylocationsMe",value:function postCarrierservicesIntegrationsEmergencylocationsMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/carrierservices/integrations/emergencylocations/me','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return CarrierServicesApi;}();var ChatApi=/*#__PURE__*/function(){/**
	 * Chat service.
	 * @module purecloud-platform-client-v2/api/ChatApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ChatApi. 
	 * @alias module:purecloud-platform-client-v2/api/ChatApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ChatApi(apiClient){_classCallCheck(this,ChatApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a message in a room
	 * 
	 * @param {String} roomJid roomId
	 * @param {String} messageId messageId
	 * deleteChatsRoomMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */_createClass(ChatApi,[{key:"deleteChatsRoomMessage",value:function deleteChatsRoomMessage(roomJid,messageId){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling deleteChatsRoomMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling deleteChatsRoomMessage';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/messages/{messageId}','DELETE',{'roomJid':roomJid,'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove a user from a room.
	 * 
	 * @param {String} roomJid roomJid
	 * @param {String} userId userId
	 * deleteChatsRoomParticipant is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteChatsRoomParticipant",value:function deleteChatsRoomParticipant(roomJid,userId){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling deleteChatsRoomParticipant';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteChatsRoomParticipant';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/participants/{userId}','DELETE',{'roomJid':roomJid,'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove a pinned message from a room
	 * 
	 * @param {String} roomJid roomJid
	 * @param {String} pinnedMessageId pinnedMessageId
	 * deleteChatsRoomPinnedmessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteChatsRoomPinnedmessage",value:function deleteChatsRoomPinnedmessage(roomJid,pinnedMessageId){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling deleteChatsRoomPinnedmessage';}// verify the required parameter 'pinnedMessageId' is set
if(pinnedMessageId===undefined||pinnedMessageId===null){throw'Missing the required parameter "pinnedMessageId" when calling deleteChatsRoomPinnedmessage';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/pinnedmessages/{pinnedMessageId}','DELETE',{'roomJid':roomJid,'pinnedMessageId':pinnedMessageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a message to a user
	 * 
	 * @param {String} userId userId
	 * @param {String} messageId messageId
	 * deleteChatsUserMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteChatsUserMessage",value:function deleteChatsUserMessage(userId,messageId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteChatsUserMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling deleteChatsUserMessage';}return this.apiClient.callApi('/api/v2/chats/users/{userId}/messages/{messageId}','DELETE',{'userId':userId,'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a message
	 * 
	 * @param {String} messageId messageId
	 * getChatsMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsMessage",value:function getChatsMessage(messageId){// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getChatsMessage';}return this.apiClient.callApi('/api/v2/chats/messages/{messageId}','GET',{'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a room
	 * 
	 * @param {String} roomJid roomJid
	 * getChatsRoom is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsRoom",value:function getChatsRoom(roomJid){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling getChatsRoom';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}','GET',{'roomJid':roomJid},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get messages by id(s) from a room
	 * 
	 * @param {String} roomJid roomJid
	 * @param {String} messageIds messageIds, comma separated
	 * getChatsRoomMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsRoomMessage",value:function getChatsRoomMessage(roomJid,messageIds){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling getChatsRoomMessage';}// verify the required parameter 'messageIds' is set
if(messageIds===undefined||messageIds===null){throw'Missing the required parameter "messageIds" when calling getChatsRoomMessage';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/messages/{messageIds}','GET',{'roomJid':roomJid,'messageIds':messageIds},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a room's message history
	 * 
	 * @param {String} roomJid roomJid
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.limit The maximum number of messages to retrieve
	 * @param {String} opts.before The cutoff date for messages to retrieve
	 * @param {String} opts.after The beginning date for messages to retrieve
	 * getChatsRoomMessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsRoomMessages",value:function getChatsRoomMessages(roomJid,opts){opts=opts||{};// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling getChatsRoomMessages';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/messages','GET',{'roomJid':roomJid},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'limit':opts['limit'],'before':opts['before'],'after':opts['after']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Chat Settings.
	 * 
	 */},{key:"getChatsSettings",value:function getChatsSettings(){return this.apiClient.callApi('/api/v2/chats/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get history by thread
	 * 
	 * @param {String} threadId threadId
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.limit The maximum number of messages to retrieve
	 * @param {String} opts.before The cutoff date for messages to retrieve
	 * @param {String} opts.after The beginning date for messages to retrieve
	 * getChatsThreadMessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsThreadMessages",value:function getChatsThreadMessages(threadId,opts){opts=opts||{};// verify the required parameter 'threadId' is set
if(threadId===undefined||threadId===null){throw'Missing the required parameter "threadId" when calling getChatsThreadMessages';}return this.apiClient.callApi('/api/v2/chats/threads/{threadId}/messages','GET',{'threadId':threadId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'limit':opts['limit'],'before':opts['before'],'after':opts['after']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get messages by id(s) from a 1on1
	 * 
	 * @param {String} userId userId
	 * @param {String} messageIds messageIds, comma separated
	 * getChatsUserMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsUserMessage",value:function getChatsUserMessage(userId,messageIds){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getChatsUserMessage';}// verify the required parameter 'messageIds' is set
if(messageIds===undefined||messageIds===null){throw'Missing the required parameter "messageIds" when calling getChatsUserMessage';}return this.apiClient.callApi('/api/v2/chats/users/{userId}/messages/{messageIds}','GET',{'userId':userId,'messageIds':messageIds},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get 1on1 History between a user
	 * 
	 * @param {String} userId userId
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.limit The maximum number of messages to retrieve
	 * @param {String} opts.before The cutoff date for messages to retrieve
	 * @param {String} opts.after The beginning date for messages to retrieve
	 * getChatsUserMessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getChatsUserMessages",value:function getChatsUserMessages(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getChatsUserMessages';}return this.apiClient.callApi('/api/v2/chats/users/{userId}/messages','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'limit':opts['limit'],'before':opts['before'],'after':opts['after']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set properties for a room
	 * 
	 * @param {String} roomJid roomJid
	 * @param {Object} body Room properties
	 * patchChatsRoom is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchChatsRoom",value:function patchChatsRoom(roomJid,body){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling patchChatsRoom';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchChatsRoom';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}','PATCH',{'roomJid':roomJid},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Edit a message in a room
	 * 
	 * @param {String} roomJid roomId
	 * @param {String} messageId messageId
	 * @param {Object} body messageBody
	 * patchChatsRoomMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchChatsRoomMessage",value:function patchChatsRoomMessage(roomJid,messageId,body){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling patchChatsRoomMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling patchChatsRoomMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchChatsRoomMessage';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/messages/{messageId}','PATCH',{'roomJid':roomJid,'messageId':messageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch Chat Settings.
	 * 
	 * @param {Object} body Chat
	 */},{key:"patchChatsSettings",value:function patchChatsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchChatsSettings';}return this.apiClient.callApi('/api/v2/chats/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Edit a message to a user
	 * 
	 * @param {String} userId userId
	 * @param {String} messageId messageId
	 * @param {Object} body message body
	 * patchChatsUserMessage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchChatsUserMessage",value:function patchChatsUserMessage(userId,messageId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchChatsUserMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling patchChatsUserMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchChatsUserMessage';}return this.apiClient.callApi('/api/v2/chats/users/{userId}/messages/{messageId}','PATCH',{'userId':userId,'messageId':messageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a message to a room
	 * 
	 * @param {String} roomJid roomId
	 * @param {Object} body messageBody
	 * postChatsRoomMessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postChatsRoomMessages",value:function postChatsRoomMessages(roomJid,body){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling postChatsRoomMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postChatsRoomMessages';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/messages','POST',{'roomJid':roomJid},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join a room
	 * 
	 * @param {String} roomJid roomJid
	 * @param {String} userId userId
	 * postChatsRoomParticipant is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postChatsRoomParticipant",value:function postChatsRoomParticipant(roomJid,userId){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling postChatsRoomParticipant';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postChatsRoomParticipant';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/participants/{userId}','POST',{'roomJid':roomJid,'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add pinned messages for a room, up to a maximum of 5 pinned messages
	 * 
	 * @param {String} roomJid roomJid
	 * @param {Object} body Pinned Message Ids
	 * postChatsRoomPinnedmessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postChatsRoomPinnedmessages",value:function postChatsRoomPinnedmessages(roomJid,body){// verify the required parameter 'roomJid' is set
if(roomJid===undefined||roomJid===null){throw'Missing the required parameter "roomJid" when calling postChatsRoomPinnedmessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postChatsRoomPinnedmessages';}return this.apiClient.callApi('/api/v2/chats/rooms/{roomJid}/pinnedmessages','POST',{'roomJid':roomJid},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an adhoc room
	 * 
	 * @param {Object} body Room properties
	 * postChatsRooms is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postChatsRooms",value:function postChatsRooms(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postChatsRooms';}return this.apiClient.callApi('/api/v2/chats/rooms','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a message to a user
	 * 
	 * @param {String} userId userId
	 * @param {Object} body message body
	 * postChatsUserMessages is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postChatsUserMessages",value:function postChatsUserMessages(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postChatsUserMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postChatsUserMessages';}return this.apiClient.callApi('/api/v2/chats/users/{userId}/messages','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Chat Settings.
	 * 
	 * @param {Object} body Chat
	 */},{key:"putChatsSettings",value:function putChatsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putChatsSettings';}return this.apiClient.callApi('/api/v2/chats/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ChatApi;}();var CoachingApi=/*#__PURE__*/function(){/**
	 * Coaching service.
	 * @module purecloud-platform-client-v2/api/CoachingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new CoachingApi. 
	 * @alias module:purecloud-platform-client-v2/api/CoachingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function CoachingApi(apiClient){_classCallCheck(this,CoachingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an existing appointment
	 * Permission not required if you are the creator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 */_createClass(CoachingApi,[{key:"deleteCoachingAppointment",value:function deleteCoachingAppointment(appointmentId){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling deleteCoachingAppointment';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}','DELETE',{'appointmentId':appointmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an existing annotation
	 * You must have the appropriate permission for the type of annotation you are updating. Permission not required if you are the creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {String} annotationId The ID of the annotation.
	 */},{key:"deleteCoachingAppointmentAnnotation",value:function deleteCoachingAppointmentAnnotation(appointmentId,annotationId){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling deleteCoachingAppointmentAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling deleteCoachingAppointmentAnnotation';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/annotations/{annotationId}','DELETE',{'appointmentId':appointmentId,'annotationId':annotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve an appointment
	 * Permission not required if you are the attendee, creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 */},{key:"getCoachingAppointment",value:function getCoachingAppointment(appointmentId){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling getCoachingAppointment';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}','GET',{'appointmentId':appointmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve an annotation.
	 * You must have the appropriate permission for the type of annotation you are creating. Permission not required if you are related to the appointment (only the creator or facilitator can view private annotations).
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {String} annotationId The ID of the annotation.
	 */},{key:"getCoachingAppointmentAnnotation",value:function getCoachingAppointmentAnnotation(appointmentId,annotationId){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling getCoachingAppointmentAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling getCoachingAppointmentAnnotation';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/annotations/{annotationId}','GET',{'appointmentId':appointmentId,'annotationId':annotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of annotations.
	 * You must have the appropriate permission for the type of annotation you are creating. Permission not required if you are related to the appointment (only the creator or facilitator can view private annotations).
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getCoachingAppointmentAnnotations",value:function getCoachingAppointmentAnnotations(appointmentId,opts){opts=opts||{};// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling getCoachingAppointmentAnnotations';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/annotations','GET',{'appointmentId':appointmentId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of status changes for a coaching appointment.
	 * Permission not required if you are an attendee, creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getCoachingAppointmentStatuses",value:function getCoachingAppointmentStatuses(appointmentId,opts){opts=opts||{};// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling getCoachingAppointmentStatuses';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/statuses','GET',{'appointmentId':appointmentId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get appointments for users and optional date range
	 * 
	 * @param {Array.<String>} userIds The user IDs for which to retrieve appointments
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.interval Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.statuses Appointment Statuses to filter by
	 * @param {Array.<String>} opts.facilitatorIds The facilitator IDs for which to retrieve appointments
	 * @param {Object} opts.sortOrder Sort (by due date) either Asc or Desc
	 * @param {Array.<String>} opts.relationships Relationships to filter by
	 * @param {String} opts.completionInterval Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Overdue status to filter by
	 * @param {Object} opts.intervalCondition Filter condition for interval
	 */},{key:"getCoachingAppointments",value:function getCoachingAppointments(userIds,opts){opts=opts||{};// verify the required parameter 'userIds' is set
if(userIds===undefined||userIds===null){throw'Missing the required parameter "userIds" when calling getCoachingAppointments';}return this.apiClient.callApi('/api/v2/coaching/appointments','GET',{},{'userIds':this.apiClient.buildCollectionParam(userIds,'multi'),'interval':opts['interval'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'statuses':this.apiClient.buildCollectionParam(opts['statuses'],'multi'),'facilitatorIds':this.apiClient.buildCollectionParam(opts['facilitatorIds'],'multi'),'sortOrder':opts['sortOrder'],'relationships':this.apiClient.buildCollectionParam(opts['relationships'],'multi'),'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'intervalCondition':opts['intervalCondition']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get my appointments for a given date range
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.interval Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.statuses Appointment Statuses to filter by
	 * @param {Array.<String>} opts.facilitatorIds The facilitator IDs for which to retrieve appointments
	 * @param {Object} opts.sortOrder Sort (by due date) either Asc or Desc
	 * @param {Array.<String>} opts.relationships Relationships to filter by
	 * @param {String} opts.completionInterval Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Overdue status to filter by
	 * @param {Object} opts.intervalCondition Filter condition for interval
	 */},{key:"getCoachingAppointmentsMe",value:function getCoachingAppointmentsMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/coaching/appointments/me','GET',{},{'interval':opts['interval'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'statuses':this.apiClient.buildCollectionParam(opts['statuses'],'multi'),'facilitatorIds':this.apiClient.buildCollectionParam(opts['facilitatorIds'],'multi'),'sortOrder':opts['sortOrder'],'relationships':this.apiClient.buildCollectionParam(opts['relationships'],'multi'),'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'intervalCondition':opts['intervalCondition']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an existing notification
	 * Permission not required if you are the owner of the notification.
	 * @param {String} notificationId The ID of the notification.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Indicates a field in the response which should be expanded.
	 */},{key:"getCoachingNotification",value:function getCoachingNotification(notificationId,opts){opts=opts||{};// verify the required parameter 'notificationId' is set
if(notificationId===undefined||notificationId===null){throw'Missing the required parameter "notificationId" when calling getCoachingNotification';}return this.apiClient.callApi('/api/v2/coaching/notifications/{notificationId}','GET',{'notificationId':notificationId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve the list of your notifications.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.expand Indicates a field in the response which should be expanded.
	 */},{key:"getCoachingNotifications",value:function getCoachingNotifications(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/coaching/notifications','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing appointment
	 * Permission not required if you are the creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} body The new version of the appointment
	 */},{key:"patchCoachingAppointment",value:function patchCoachingAppointment(appointmentId,body){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling patchCoachingAppointment';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchCoachingAppointment';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}','PATCH',{'appointmentId':appointmentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing annotation.
	 * You must have the appropriate permission for the type of annotation you are updating. Permission not required if you are the creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {String} annotationId The ID of the annotation.
	 * @param {Object} body The new version of the annotation
	 */},{key:"patchCoachingAppointmentAnnotation",value:function patchCoachingAppointmentAnnotation(appointmentId,annotationId,body){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling patchCoachingAppointmentAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling patchCoachingAppointmentAnnotation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchCoachingAppointmentAnnotation';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/annotations/{annotationId}','PATCH',{'appointmentId':appointmentId,'annotationId':annotationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the status of a coaching appointment
	 * Permission not required if you are an attendee, creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} body Updated status of the coaching appointment
	 */},{key:"patchCoachingAppointmentStatus",value:function patchCoachingAppointmentStatus(appointmentId,body){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling patchCoachingAppointmentStatus';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchCoachingAppointmentStatus';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/status','PATCH',{'appointmentId':appointmentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing notification.
	 * Can only update your own notifications.
	 * @param {String} notificationId The ID of the notification.
	 * @param {Object} body Change the read state of a notification
	 */},{key:"patchCoachingNotification",value:function patchCoachingNotification(notificationId,body){// verify the required parameter 'notificationId' is set
if(notificationId===undefined||notificationId===null){throw'Missing the required parameter "notificationId" when calling patchCoachingNotification';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchCoachingNotification';}return this.apiClient.callApi('/api/v2/coaching/notifications/{notificationId}','PATCH',{'notificationId':notificationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new annotation.
	 * You must have the appropriate permission for the type of annotation you are creating. Permission not required if you are related to the appointment (only the creator or facilitator can create private annotations).
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} body The annotation to add
	 */},{key:"postCoachingAppointmentAnnotations",value:function postCoachingAppointmentAnnotations(appointmentId,body){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling postCoachingAppointmentAnnotations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCoachingAppointmentAnnotations';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/annotations','POST',{'appointmentId':appointmentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a conversation to an appointment
	 * Permission not required if you are the creator or facilitator of the appointment
	 * @param {String} appointmentId The ID of the coaching appointment.
	 * @param {Object} body body
	 */},{key:"postCoachingAppointmentConversations",value:function postCoachingAppointmentConversations(appointmentId,body){// verify the required parameter 'appointmentId' is set
if(appointmentId===undefined||appointmentId===null){throw'Missing the required parameter "appointmentId" when calling postCoachingAppointmentConversations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCoachingAppointmentConversations';}return this.apiClient.callApi('/api/v2/coaching/appointments/{appointmentId}/conversations','POST',{'appointmentId':appointmentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new appointment
	 * 
	 * @param {Object} body The appointment to add
	 */},{key:"postCoachingAppointments",value:function postCoachingAppointments(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCoachingAppointments';}return this.apiClient.callApi('/api/v2/coaching/appointments','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve aggregated appointment data
	 * 
	 * @param {Object} body Aggregate Request
	 */},{key:"postCoachingAppointmentsAggregatesQuery",value:function postCoachingAppointmentsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCoachingAppointmentsAggregatesQuery';}return this.apiClient.callApi('/api/v2/coaching/appointments/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of possible slots where a coaching appointment can be scheduled.
	 * 
	 * @param {Object} body The slot search request
	 */},{key:"postCoachingScheduleslotsQuery",value:function postCoachingScheduleslotsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCoachingScheduleslotsQuery';}return this.apiClient.callApi('/api/v2/coaching/scheduleslots/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return CoachingApi;}();var ContentManagementApi=/*#__PURE__*/function(){/**
	 * ContentManagement service.
	 * @module purecloud-platform-client-v2/api/ContentManagementApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ContentManagementApi. 
	 * @alias module:purecloud-platform-client-v2/api/ContentManagementApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ContentManagementApi(apiClient){_classCallCheck(this,ContentManagementApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.override Override any lock on the document
	 */_createClass(ContentManagementApi,[{key:"deleteContentmanagementDocument",value:function deleteContentmanagementDocument(documentId,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling deleteContentmanagementDocument';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}','DELETE',{'documentId':documentId},{'override':opts['override']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes an existing share.
	 * This revokes sharing rights specified in the share record
	 * @param {String} shareId Share ID
	 */},{key:"deleteContentmanagementShare",value:function deleteContentmanagementShare(shareId){// verify the required parameter 'shareId' is set
if(shareId===undefined||shareId===null){throw'Missing the required parameter "shareId" when calling deleteContentmanagementShare';}return this.apiClient.callApi('/api/v2/contentmanagement/shares/{shareId}','DELETE',{'shareId':shareId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Cancel the command for this status
	 * 
	 * @param {String} statusId Status ID
	 */},{key:"deleteContentmanagementStatusStatusId",value:function deleteContentmanagementStatusStatusId(statusId){// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling deleteContentmanagementStatusStatusId';}return this.apiClient.callApi('/api/v2/contentmanagement/status/{statusId}','DELETE',{'statusId':statusId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a workspace
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.moveChildrenToWorkspaceId New location for objects in deleted workspace.
	 */},{key:"deleteContentmanagementWorkspace",value:function deleteContentmanagementWorkspace(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling deleteContentmanagementWorkspace';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}','DELETE',{'workspaceId':workspaceId},{'moveChildrenToWorkspaceId':opts['moveChildrenToWorkspaceId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a member from a workspace
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {String} memberId Member ID
	 */},{key:"deleteContentmanagementWorkspaceMember",value:function deleteContentmanagementWorkspaceMember(workspaceId,memberId){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling deleteContentmanagementWorkspaceMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling deleteContentmanagementWorkspaceMember';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}','DELETE',{'workspaceId':workspaceId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete workspace tag
	 * Delete a tag from a workspace. Will remove this tag from all documents.
	 * @param {String} workspaceId Workspace ID
	 * @param {String} tagId Tag ID
	 */},{key:"deleteContentmanagementWorkspaceTagvalue",value:function deleteContentmanagementWorkspaceTagvalue(workspaceId,tagId){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling deleteContentmanagementWorkspaceTagvalue';}// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling deleteContentmanagementWorkspaceTagvalue';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}','DELETE',{'workspaceId':workspaceId,'tagId':tagId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementDocument",value:function getContentmanagementDocument(documentId,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getContentmanagementDocument';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}','GET',{'documentId':documentId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of audits for a document.
	 * This api is deprecated, use https://developer.genesys.cloud/platform/audit/ instead.
	 * @param {String} documentId Document ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.transactionFilter Transaction filter
	 * @param {String} opts.level level (default to USER)
	 * @param {String} opts.sortBy Sort by
	 * @param {String} opts.sortOrder Sort order (default to ascending)
	 * @deprecated
	 */},{key:"getContentmanagementDocumentAudits",value:function getContentmanagementDocumentAudits(documentId,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getContentmanagementDocumentAudits';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}/audits','GET',{'documentId':documentId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'transactionFilter':opts['transactionFilter'],'level':opts['level'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Download a document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.disposition Request how the content will be downloaded: a file attachment or inline. Default is attachment.
	 * @param {String} opts.contentType The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav
	 */},{key:"getContentmanagementDocumentContent",value:function getContentmanagementDocumentContent(documentId,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getContentmanagementDocumentContent';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}/content','GET',{'documentId':documentId},{'disposition':opts['disposition'],'contentType':opts['contentType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of documents.
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy name or dateCreated
	 * @param {String} opts.sortOrder ascending or descending (default to ascending)
	 * @deprecated
	 */},{key:"getContentmanagementDocuments",value:function getContentmanagementDocuments(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementDocuments';}return this.apiClient.callApi('/api/v2/contentmanagement/documents','GET',{},{'workspaceId':workspaceId,'name':opts['name'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query content
	 * 
	 * @param {String} queryPhrase Phrase tokens are ANDed together over all searchable fields
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy name or dateCreated (default to name)
	 * @param {String} opts.sortOrder ascending or descending (default to ascending)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementQuery",value:function getContentmanagementQuery(queryPhrase,opts){opts=opts||{};// verify the required parameter 'queryPhrase' is set
if(queryPhrase===undefined||queryPhrase===null){throw'Missing the required parameter "queryPhrase" when calling getContentmanagementQuery';}return this.apiClient.callApi('/api/v2/contentmanagement/query','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'queryPhrase':queryPhrase,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Security Profile
	 * 
	 * @param {String} securityProfileId Security Profile Id
	 */},{key:"getContentmanagementSecurityprofile",value:function getContentmanagementSecurityprofile(securityProfileId){// verify the required parameter 'securityProfileId' is set
if(securityProfileId===undefined||securityProfileId===null){throw'Missing the required parameter "securityProfileId" when calling getContentmanagementSecurityprofile';}return this.apiClient.callApi('/api/v2/contentmanagement/securityprofiles/{securityProfileId}','GET',{'securityProfileId':securityProfileId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a List of Security Profiles
	 * 
	 */},{key:"getContentmanagementSecurityprofiles",value:function getContentmanagementSecurityprofiles(){return this.apiClient.callApi('/api/v2/contentmanagement/securityprofiles','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve details about an existing share.
	 * 
	 * @param {String} shareId Share ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementShare",value:function getContentmanagementShare(shareId,opts){opts=opts||{};// verify the required parameter 'shareId' is set
if(shareId===undefined||shareId===null){throw'Missing the required parameter "shareId" when calling getContentmanagementShare';}return this.apiClient.callApi('/api/v2/contentmanagement/shares/{shareId}','GET',{'shareId':shareId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get shared documents. Securely download a shared document.
	 * This method requires the download sharing URI obtained in the get document response (downloadSharingUri). Documents may be shared between users in the same workspace. Documents may also be shared between any user by creating a content management share.
	 * @param {String} sharedId Shared ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.redirect Turn on or off redirect (default to true)
	 * @param {Object} opts.disposition Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (default to attachment)
	 * @param {String} opts.contentType The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav
	 * @param {Object} opts.expand Expand some document fields
	 */},{key:"getContentmanagementSharedSharedId",value:function getContentmanagementSharedSharedId(sharedId,opts){opts=opts||{};// verify the required parameter 'sharedId' is set
if(sharedId===undefined||sharedId===null){throw'Missing the required parameter "sharedId" when calling getContentmanagementSharedSharedId';}return this.apiClient.callApi('/api/v2/contentmanagement/shared/{sharedId}','GET',{'sharedId':sharedId},{'redirect':opts['redirect'],'disposition':opts['disposition'],'contentType':opts['contentType'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of shares.  You must specify at least one filter (e.g. entityId).
	 * Failing to specify a filter will return 400.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.entityId Filters the shares returned to only the entity specified by the value of this parameter.
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getContentmanagementShares",value:function getContentmanagementShares(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/contentmanagement/shares','GET',{},{'entityId':opts['entityId'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of statuses for pending operations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getContentmanagementStatus",value:function getContentmanagementStatus(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/contentmanagement/status','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a status.
	 * 
	 * @param {String} statusId Status ID
	 */},{key:"getContentmanagementStatusStatusId",value:function getContentmanagementStatusStatusId(statusId){// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling getContentmanagementStatusStatusId';}return this.apiClient.callApi('/api/v2/contentmanagement/status/{statusId}','GET',{'statusId':statusId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get usage details.
	 * 
	 */},{key:"getContentmanagementUsage",value:function getContentmanagementUsage(){return this.apiClient.callApi('/api/v2/contentmanagement/usage','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a workspace.
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspace",value:function getContentmanagementWorkspace(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspace';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}','GET',{'workspaceId':workspaceId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of documents.
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy name or dateCreated
	 * @param {String} opts.sortOrder ascending or descending (default to ascending)
	 */},{key:"getContentmanagementWorkspaceDocuments",value:function getContentmanagementWorkspaceDocuments(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspaceDocuments';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/documents','GET',{'workspaceId':workspaceId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a workspace member
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {String} memberId Member ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspaceMember",value:function getContentmanagementWorkspaceMember(workspaceId,memberId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspaceMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling getContentmanagementWorkspaceMember';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}','GET',{'workspaceId':workspaceId,'memberId':memberId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list workspace members
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspaceMembers",value:function getContentmanagementWorkspaceMembers(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspaceMembers';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/members','GET',{'workspaceId':workspaceId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a workspace tag
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {String} tagId Tag ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspaceTagvalue",value:function getContentmanagementWorkspaceTagvalue(workspaceId,tagId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspaceTagvalue';}// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling getContentmanagementWorkspaceTagvalue';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}','GET',{'workspaceId':workspaceId,'tagId':tagId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of workspace tags
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.value filter the list of tags returned
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspaceTagvalues",value:function getContentmanagementWorkspaceTagvalues(workspaceId,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling getContentmanagementWorkspaceTagvalues';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues','GET',{'workspaceId':workspaceId},{'value':opts['value'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of workspaces.
	 * Specifying content access will return all workspaces the user has document access to, while admin access will return all group workspaces the user has administrative rights to.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.access Requested access level.
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getContentmanagementWorkspaces",value:function getContentmanagementWorkspaces(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/contentmanagement/workspaces','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'access':this.apiClient.buildCollectionParam(opts['access'],'multi'),'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query audits
	 * This api is deprecated, use https://developer.genesys.cloud/platform/audit/ instead.
	 * @param {Object} body Allows for a filtered query returning facet information
	 * @deprecated
	 */},{key:"postContentmanagementAuditquery",value:function postContentmanagementAuditquery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementAuditquery';}return this.apiClient.callApi('/api/v2/contentmanagement/auditquery','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} body Document
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand some document fields
	 * @param {Boolean} opts.override Override any lock on the document
	 */},{key:"postContentmanagementDocument",value:function postContentmanagementDocument(documentId,body,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postContentmanagementDocument';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementDocument';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}','POST',{'documentId':documentId},{'expand':opts['expand'],'override':opts['override']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace the contents of a document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} body Replace Request
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.override Override any lock on the document
	 */},{key:"postContentmanagementDocumentContent",value:function postContentmanagementDocumentContent(documentId,body,opts){opts=opts||{};// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postContentmanagementDocumentContent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementDocumentContent';}return this.apiClient.callApi('/api/v2/contentmanagement/documents/{documentId}/content','POST',{'documentId':documentId},{'override':opts['override']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a document.
	 * 
	 * @param {Object} body Document
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.copySource Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source.
	 * @param {String} opts.moveSource Move a document to a new workspace. Provide a document ID as the move source.
	 * @param {Boolean} opts.override Override any lock on the source document
	 */},{key:"postContentmanagementDocuments",value:function postContentmanagementDocuments(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementDocuments';}return this.apiClient.callApi('/api/v2/contentmanagement/documents','POST',{},{'copySource':opts['copySource'],'moveSource':opts['moveSource'],'override':opts['override']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query content
	 * 
	 * @param {Object} body Allows for a filtered query returning facet information
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand some document fields
	 */},{key:"postContentmanagementQuery",value:function postContentmanagementQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementQuery';}return this.apiClient.callApi('/api/v2/contentmanagement/query','POST',{},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a new share or updates an existing share if the entity has already been shared
	 * 
	 * @param {Object} body CreateShareRequest - entity id and type and a single member or list of members are required
	 */},{key:"postContentmanagementShares",value:function postContentmanagementShares(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementShares';}return this.apiClient.callApi('/api/v2/contentmanagement/shares','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a workspace tag
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} body tag
	 */},{key:"postContentmanagementWorkspaceTagvalues",value:function postContentmanagementWorkspaceTagvalues(workspaceId,body){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling postContentmanagementWorkspaceTagvalues';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementWorkspaceTagvalues';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues','POST',{'workspaceId':workspaceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Perform a prefix query on tags in the workspace
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"postContentmanagementWorkspaceTagvaluesQuery",value:function postContentmanagementWorkspaceTagvaluesQuery(workspaceId,body,opts){opts=opts||{};// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling postContentmanagementWorkspaceTagvaluesQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementWorkspaceTagvaluesQuery';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/query','POST',{'workspaceId':workspaceId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a group workspace
	 * 
	 * @param {Object} body Workspace
	 */},{key:"postContentmanagementWorkspaces",value:function postContentmanagementWorkspaces(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postContentmanagementWorkspaces';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a workspace
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {Object} body Workspace
	 */},{key:"putContentmanagementWorkspace",value:function putContentmanagementWorkspace(workspaceId,body){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling putContentmanagementWorkspace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putContentmanagementWorkspace';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}','PUT',{'workspaceId':workspaceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a member to a workspace
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {String} memberId Member ID
	 * @param {Object} body Workspace Member
	 */},{key:"putContentmanagementWorkspaceMember",value:function putContentmanagementWorkspaceMember(workspaceId,memberId,body){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling putContentmanagementWorkspaceMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling putContentmanagementWorkspaceMember';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putContentmanagementWorkspaceMember';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}','PUT',{'workspaceId':workspaceId,'memberId':memberId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a workspace tag. Will update all documents with the new tag value.
	 * 
	 * @param {String} workspaceId Workspace ID
	 * @param {String} tagId Tag ID
	 * @param {Object} body Workspace
	 */},{key:"putContentmanagementWorkspaceTagvalue",value:function putContentmanagementWorkspaceTagvalue(workspaceId,tagId,body){// verify the required parameter 'workspaceId' is set
if(workspaceId===undefined||workspaceId===null){throw'Missing the required parameter "workspaceId" when calling putContentmanagementWorkspaceTagvalue';}// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling putContentmanagementWorkspaceTagvalue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putContentmanagementWorkspaceTagvalue';}return this.apiClient.callApi('/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}','PUT',{'workspaceId':workspaceId,'tagId':tagId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ContentManagementApi;}();var ConversationsApi=/*#__PURE__*/function(){/**
	 * Conversations service.
	 * @module purecloud-platform-client-v2/api/ConversationsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ConversationsApi. 
	 * @alias module:purecloud-platform-client-v2/api/ConversationsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ConversationsApi(apiClient){_classCallCheck(this,ConversationsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete/cancel an async details job
	 * 
	 * @param {String} jobId jobId
	 */_createClass(ConversationsApi,[{key:"deleteAnalyticsConversationsDetailsJob",value:function deleteAnalyticsConversationsDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling deleteAnalyticsConversationsDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}','DELETE',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a code used to add a communication to this participant
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {String} addCommunicationCode addCommunicationCode
	 */},{key:"deleteConversationParticipantCode",value:function deleteConversationParticipantCode(conversationId,participantId,addCommunicationCode){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteConversationParticipantCode';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling deleteConversationParticipantCode';}// verify the required parameter 'addCommunicationCode' is set
if(addCommunicationCode===undefined||addCommunicationCode===null){throw'Missing the required parameter "addCommunicationCode" when calling deleteConversationParticipantCode';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/codes/{addCommunicationCode}','DELETE',{'conversationId':conversationId,'participantId':participantId,'addCommunicationCode':addCommunicationCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove flagged reason from conversation participant.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 */},{key:"deleteConversationParticipantFlaggedreason",value:function deleteConversationParticipantFlaggedreason(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteConversationParticipantFlaggedreason';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling deleteConversationParticipantFlaggedreason';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason','DELETE',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Cancel the transfer
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"deleteConversationsCallParticipantConsult",value:function deleteConversationsCallParticipantConsult(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteConversationsCallParticipantConsult';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling deleteConversationsCallParticipantConsult';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult','DELETE',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete attachment from draft
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} attachmentId attachmentId
	 */},{key:"deleteConversationsEmailMessagesDraftAttachment",value:function deleteConversationsEmailMessagesDraftAttachment(conversationId,attachmentId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteConversationsEmailMessagesDraftAttachment';}// verify the required parameter 'attachmentId' is set
if(attachmentId===undefined||attachmentId===null){throw'Missing the required parameter "attachmentId" when calling deleteConversationsEmailMessagesDraftAttachment';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/draft/attachments/{attachmentId}','DELETE',{'conversationId':conversationId,'attachmentId':attachmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove a cached media item asychronously
	 * 
	 * @param {String} cachedMediaItemId cachedMediaItemId
	 */},{key:"deleteConversationsMessagesCachedmediaCachedMediaItemId",value:function deleteConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId){// verify the required parameter 'cachedMediaItemId' is set
if(cachedMediaItemId===undefined||cachedMediaItemId===null){throw'Missing the required parameter "cachedMediaItemId" when calling deleteConversationsMessagesCachedmediaCachedMediaItemId';}return this.apiClient.callApi('/api/v2/conversations/messages/cachedmedia/{cachedMediaItemId}','DELETE',{'cachedMediaItemId':cachedMediaItemId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Facebook messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsFacebookIntegrationId",value:function deleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsFacebookIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/facebook/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Instagram messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsInstagramIntegrationId",value:function deleteConversationsMessagingIntegrationsInstagramIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsInstagramIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/instagram/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a LINE messenger integration
	 * 
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsLineIntegrationId",value:function deleteConversationsMessagingIntegrationsLineIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsLineIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/line/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an Open messaging integration
	 * See https://developer.genesys.cloud/api/digital/openmessaging/ for more information.
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsOpenIntegrationId",value:function deleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsOpenIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/open/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Twitter messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsTwitterIntegrationId",value:function deleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsTwitterIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/twitter/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a WhatsApp messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 */},{key:"deleteConversationsMessagingIntegrationsWhatsappIntegrationId",value:function deleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteConversationsMessagingIntegrationsWhatsappIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a messaging setting
	 * 
	 * @param {String} messageSettingId Message Setting ID
	 */},{key:"deleteConversationsMessagingSetting",value:function deleteConversationsMessagingSetting(messageSettingId){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling deleteConversationsMessagingSetting';}return this.apiClient.callApi('/api/v2/conversations/messaging/settings/{messageSettingId}','DELETE',{'messageSettingId':messageSettingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the organization's default setting, a global default will be applied to integrations without settings
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be assigned to it.
	 */},{key:"deleteConversationsMessagingSettingsDefault",value:function deleteConversationsMessagingSettingsDefault(){return this.apiClient.callApi('/api/v2/conversations/messaging/settings/default','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a supported content profile
	 * 
	 * @param {String} supportedContentId Supported Content ID
	 */},{key:"deleteConversationsMessagingSupportedcontentSupportedContentId",value:function deleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling deleteConversationsMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent/{supportedContentId}','DELETE',{'supportedContentId':supportedContentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a conversation by id
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getAnalyticsConversationDetails",value:function getAnalyticsConversationDetails(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getAnalyticsConversationDetails';}return this.apiClient.callApi('/api/v2/analytics/conversations/{conversationId}/details','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for conversation aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsConversationsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsConversationsAggregatesJob",value:function getAnalyticsConversationsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsConversationsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsConversationsAggregatesJobResults",value:function getAnalyticsConversationsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets multiple conversations by id
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id Comma-separated conversation ids
	 */},{key:"getAnalyticsConversationsDetails",value:function getAnalyticsConversationsDetails(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/analytics/conversations/details','GET',{},{'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for conversation details
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getAnalyticsConversationsDetailsJob",value:function getAnalyticsConversationsDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async details job
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize The desired maximum number of results
	 */},{key:"getAnalyticsConversationsDetailsJobResults",value:function getAnalyticsConversationsDetailsJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsConversationsDetailsJobResults';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Lookup the datalake availability date and time
	 * 
	 */},{key:"getAnalyticsConversationsDetailsJobsAvailability",value:function getAnalyticsConversationsDetailsJobsAvailability(){return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs/availability','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation
	 * 
	 * @param {String} conversationId conversation ID
	 */},{key:"getConversation",value:function getConversation(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversation';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch info on a secure session
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {String} secureSessionId secure IVR session ID
	 */},{key:"getConversationParticipantSecureivrsession",value:function getConversationParticipantSecureivrsession(conversationId,participantId,secureSessionId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationParticipantSecureivrsession';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationParticipantSecureivrsession';}// verify the required parameter 'secureSessionId' is set
if(secureSessionId===undefined||secureSessionId===null){throw'Missing the required parameter "secureSessionId" when calling getConversationParticipantSecureivrsession';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}','GET',{'conversationId':conversationId,'participantId':participantId,'secureSessionId':secureSessionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of secure sessions for this participant.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 */},{key:"getConversationParticipantSecureivrsessions",value:function getConversationParticipantSecureivrsessions(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationParticipantSecureivrsessions';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationParticipantSecureivrsessions';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationParticipantWrapup",value:function getConversationParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 */},{key:"getConversationParticipantWrapupcodes",value:function getConversationParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the secure attributes on a conversation.
	 * 
	 * @param {String} conversationId conversation ID
	 */},{key:"getConversationSecureattributes",value:function getConversationSecureattributes(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationSecureattributes';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/secureattributes','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active conversations for the logged in user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.communicationType Call or Chat communication filtering
	 */},{key:"getConversations",value:function getConversations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations','GET',{},{'communicationType':opts['communicationType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get call conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsCall",value:function getConversationsCall(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCall';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCallParticipantCommunicationWrapup",value:function getConversationsCallParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsCallParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCallParticipantWrapup",value:function getConversationsCallParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsCallParticipantWrapupcodes",value:function getConversationsCallParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get callback conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsCallback",value:function getConversationsCallback(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallback';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCallbackParticipantCommunicationWrapup",value:function getConversationsCallbackParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallbackParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallbackParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsCallbackParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCallbackParticipantWrapup",value:function getConversationsCallbackParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallbackParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallbackParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsCallbackParticipantWrapupcodes",value:function getConversationsCallbackParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCallbackParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCallbackParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active callback conversations for the logged in user
	 * 
	 */},{key:"getConversationsCallbacks",value:function getConversationsCallbacks(){return this.apiClient.callApi('/api/v2/conversations/callbacks','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active call conversations for the logged in user
	 * 
	 */},{key:"getConversationsCalls",value:function getConversationsCalls(){return this.apiClient.callApi('/api/v2/conversations/calls','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get call history
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size, maximum 50 (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.interval Interval string; format is ISO-8601. Separate start and end times with forward slash '/'
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getConversationsCallsHistory",value:function getConversationsCallsHistory(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/calls/history','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'interval':opts['interval'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the maximum number of participants that this user can have on a conference
	 * 
	 */},{key:"getConversationsCallsMaximumconferenceparties",value:function getConversationsCallsMaximumconferenceparties(){return this.apiClient.callApi('/api/v2/conversations/calls/maximumconferenceparties','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get chat conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsChat",value:function getConversationsChat(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChat';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a web chat conversation message
	 * The current user must be involved with the conversation to get its messages.
	 * @param {String} conversationId conversationId
	 * @param {String} messageId messageId
	 */},{key:"getConversationsChatMessage",value:function getConversationsChatMessage(conversationId,messageId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChatMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getConversationsChatMessage';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/messages/{messageId}','GET',{'conversationId':conversationId,'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the messages of a chat conversation.
	 * The current user must be involved with the conversation to get its messages.
	 * @param {String} conversationId conversationId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after If specified, get the messages chronologically after the id of this message
	 * @param {String} opts.before If specified, get the messages chronologically before the id of this message
	 * @param {Object} opts.sortOrder Sort order (default to ascending)
	 * @param {Number} opts.maxResults Limit the returned number of messages, up to a maximum of 100 (default to 100)
	 */},{key:"getConversationsChatMessages",value:function getConversationsChatMessages(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChatMessages';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/messages','GET',{'conversationId':conversationId},{'after':opts['after'],'before':opts['before'],'sortOrder':opts['sortOrder'],'maxResults':opts['maxResults']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsChatParticipantCommunicationWrapup",value:function getConversationsChatParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChatParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsChatParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsChatParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsChatParticipantWrapup",value:function getConversationsChatParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChatParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsChatParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsChatParticipantWrapupcodes",value:function getConversationsChatParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsChatParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsChatParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active chat conversations for the logged in user
	 * 
	 */},{key:"getConversationsChats",value:function getConversationsChats(){return this.apiClient.callApi('/api/v2/conversations/chats','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get cobrowse conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsCobrowsesession",value:function getConversationsCobrowsesession(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCobrowsesession';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCobrowsesessionParticipantCommunicationWrapup",value:function getConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCobrowsesessionParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCobrowsesessionParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsCobrowsesessionParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsCobrowsesessionParticipantWrapup",value:function getConversationsCobrowsesessionParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCobrowsesessionParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCobrowsesessionParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsCobrowsesessionParticipantWrapupcodes",value:function getConversationsCobrowsesessionParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsCobrowsesessionParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsCobrowsesessionParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active cobrowse conversations for the logged in user
	 * 
	 */},{key:"getConversationsCobrowsesessions",value:function getConversationsCobrowsesessions(){return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get email conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsEmail",value:function getConversationsEmail(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmail';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation message
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} messageId messageId
	 */},{key:"getConversationsEmailMessage",value:function getConversationsEmailMessage(conversationId,messageId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getConversationsEmailMessage';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/{messageId}','GET',{'conversationId':conversationId,'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation messages
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsEmailMessages",value:function getConversationsEmailMessages(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailMessages';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation draft reply
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsEmailMessagesDraft",value:function getConversationsEmailMessagesDraft(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailMessagesDraft';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/draft','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsEmailParticipantCommunicationWrapup",value:function getConversationsEmailParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsEmailParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsEmailParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsEmailParticipantWrapup",value:function getConversationsEmailParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsEmailParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsEmailParticipantWrapupcodes",value:function getConversationsEmailParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsEmailParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get emails settings for a given conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsEmailSettings",value:function getConversationsEmailSettings(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsEmailSettings';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/settings','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active email conversations for the logged in user
	 * 
	 */},{key:"getConversationsEmails",value:function getConversationsEmails(){return this.apiClient.callApi('/api/v2/conversations/emails','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the encryption key configurations
	 * 
	 * @param {String} keyconfigurationsId Key Configurations Id
	 */},{key:"getConversationsKeyconfiguration",value:function getConversationsKeyconfiguration(keyconfigurationsId){// verify the required parameter 'keyconfigurationsId' is set
if(keyconfigurationsId===undefined||keyconfigurationsId===null){throw'Missing the required parameter "keyconfigurationsId" when calling getConversationsKeyconfiguration';}return this.apiClient.callApi('/api/v2/conversations/keyconfigurations/{keyconfigurationsId}','GET',{'keyconfigurationsId':keyconfigurationsId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of key configurations data
	 * 
	 */},{key:"getConversationsKeyconfigurations",value:function getConversationsKeyconfigurations(){return this.apiClient.callApi('/api/v2/conversations/keyconfigurations','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get message conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getConversationsMessage",value:function getConversationsMessage(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessage';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get media
	 * See https://developer.genesys.cloud/api/rest/v2/conversations/messaging-media-upload for example usage.
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 * @param {String} mediaId mediaId
	 */},{key:"getConversationsMessageCommunicationMessagesMediaMediaId",value:function getConversationsMessageCommunicationMessagesMediaMediaId(conversationId,communicationId,mediaId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessageCommunicationMessagesMediaMediaId';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsMessageCommunicationMessagesMediaMediaId';}// verify the required parameter 'mediaId' is set
if(mediaId===undefined||mediaId===null){throw'Missing the required parameter "mediaId" when calling getConversationsMessageCommunicationMessagesMediaMediaId';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}','GET',{'conversationId':conversationId,'communicationId':communicationId,'mediaId':mediaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get message
	 * 
	 * @param {String} messageId messageId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.useNormalizedMessage If true, response removes deprecated fields (textBody, media, stickers) (default to false)
	 */},{key:"getConversationsMessageDetails",value:function getConversationsMessageDetails(messageId,opts){opts=opts||{};// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getConversationsMessageDetails';}return this.apiClient.callApi('/api/v2/conversations/messages/{messageId}/details','GET',{'messageId':messageId},{'useNormalizedMessage':opts['useNormalizedMessage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation message
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} messageId messageId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.useNormalizedMessage If true, response removes deprecated fields (textBody, media, stickers) (default to false)
	 */},{key:"getConversationsMessageMessage",value:function getConversationsMessageMessage(conversationId,messageId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessageMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getConversationsMessageMessage';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/messages/{messageId}','GET',{'conversationId':conversationId,'messageId':messageId},{'useNormalizedMessage':opts['useNormalizedMessage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsMessageParticipantCommunicationWrapup",value:function getConversationsMessageParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessageParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsMessageParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsMessageParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation participant. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsMessageParticipantWrapup",value:function getConversationsMessageParticipantWrapup(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessageParticipantWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsMessageParticipantWrapup';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes for this conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"getConversationsMessageParticipantWrapupcodes",value:function getConversationsMessageParticipantWrapupcodes(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsMessageParticipantWrapupcodes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsMessageParticipantWrapupcodes';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes','GET',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active message conversations for the logged in user
	 * 
	 */},{key:"getConversationsMessages",value:function getConversationsMessages(){return this.apiClient.callApi('/api/v2/conversations/messages','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of cached media items
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.url URL to search for
	 */},{key:"getConversationsMessagesCachedmedia",value:function getConversationsMessagesCachedmedia(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messages/cachedmedia','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'url':opts['url']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a cached media item
	 * 
	 * @param {String} cachedMediaItemId cachedMediaItemId
	 */},{key:"getConversationsMessagesCachedmediaCachedMediaItemId",value:function getConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId){// verify the required parameter 'cachedMediaItemId' is set
if(cachedMediaItemId===undefined||cachedMediaItemId===null){throw'Missing the required parameter "cachedMediaItemId" when calling getConversationsMessagesCachedmediaCachedMediaItemId';}return this.apiClient.callApi('/api/v2/conversations/messages/cachedmedia/{cachedMediaItemId}','GET',{'cachedMediaItemId':cachedMediaItemId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Genesys Facebook App Id
	 * 
	 */},{key:"getConversationsMessagingFacebookApp",value:function getConversationsMessagingFacebookApp(){return this.apiClient.callApi('/api/v2/conversations/messaging/facebook/app','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrations",value:function getConversationsMessagingIntegrations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Facebook Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsFacebook",value:function getConversationsMessagingIntegrationsFacebook(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/facebook','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Facebook messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsFacebookIntegrationId",value:function getConversationsMessagingIntegrationsFacebookIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsFacebookIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/facebook/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Instagram Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsInstagram",value:function getConversationsMessagingIntegrationsInstagram(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/instagram','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Instagram messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsInstagramIntegrationId",value:function getConversationsMessagingIntegrationsInstagramIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsInstagramIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/instagram/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of LINE messenger Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsLine",value:function getConversationsMessagingIntegrationsLine(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/line','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a LINE messenger integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsLineIntegrationId",value:function getConversationsMessagingIntegrationsLineIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsLineIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/line/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Open messaging integrations
	 * See https://developer.genesys.cloud/api/digital/openmessaging/ for more information.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsOpen",value:function getConversationsMessagingIntegrationsOpen(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/open','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Open messaging integration
	 * See https://developer.genesys.cloud/api/digital/openmessaging/ for more information.
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsOpenIntegrationId",value:function getConversationsMessagingIntegrationsOpenIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsOpenIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/open/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Twitter Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsTwitter",value:function getConversationsMessagingIntegrationsTwitter(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/twitter','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Twitter messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsTwitterIntegrationId",value:function getConversationsMessagingIntegrationsTwitterIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsTwitterIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/twitter/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of WhatsApp Integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 * @param {String} opts.supportedContentId Filter integrations returned based on the supported content ID
	 * @param {String} opts.messagingSettingId Filter integrations returned based on the setting ID
	 */},{key:"getConversationsMessagingIntegrationsWhatsapp",value:function getConversationsMessagingIntegrationsWhatsapp(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'supportedContent.id':opts['supportedContentId'],'messagingSetting.id':opts['messagingSettingId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a WhatsApp messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getConversationsMessagingIntegrationsWhatsappIntegrationId",value:function getConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getConversationsMessagingIntegrationsWhatsappIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp/{integrationId}','GET',{'integrationId':integrationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a messaging setting
	 * 
	 * @param {String} messageSettingId Message Setting ID
	 */},{key:"getConversationsMessagingSetting",value:function getConversationsMessagingSetting(messageSettingId){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling getConversationsMessagingSetting';}return this.apiClient.callApi('/api/v2/conversations/messaging/settings/{messageSettingId}','GET',{'messageSettingId':messageSettingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of messaging settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getConversationsMessagingSettings",value:function getConversationsMessagingSettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/settings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the organization's default settings that will be used as the default when creating an integration.
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be assigned to it.
	 */},{key:"getConversationsMessagingSettingsDefault",value:function getConversationsMessagingSettingsDefault(){return this.apiClient.callApi('/api/v2/conversations/messaging/settings/default','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Messaging Stickers
	 * 
	 * @param {Object} messengerType Messenger Type
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getConversationsMessagingSticker",value:function getConversationsMessagingSticker(messengerType,opts){opts=opts||{};// verify the required parameter 'messengerType' is set
if(messengerType===undefined||messengerType===null){throw'Missing the required parameter "messengerType" when calling getConversationsMessagingSticker';}return this.apiClient.callApi('/api/v2/conversations/messaging/stickers/{messengerType}','GET',{'messengerType':messengerType},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Supported Content profiles
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getConversationsMessagingSupportedcontent",value:function getConversationsMessagingSupportedcontent(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the organization's default supported content profile that will be used as the default when creating an integration.
	 * When an integration is created a supported content ID may be assigned to it. If the supported content ID is not supplied, the default supported content profile will be assigned to it.
	 */},{key:"getConversationsMessagingSupportedcontentDefault",value:function getConversationsMessagingSupportedcontentDefault(){return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent/default','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a supported content profile
	 * 
	 * @param {String} supportedContentId Supported Content ID
	 */},{key:"getConversationsMessagingSupportedcontentSupportedContentId",value:function getConversationsMessagingSupportedcontentSupportedContentId(supportedContentId){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling getConversationsMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent/{supportedContentId}','GET',{'supportedContentId':supportedContentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get conversation threading window timeline for each messaging type
	 * Conversation messaging threading timeline is a setting defined for each messenger type in your organization. This setting will dictate whether a new message is added to the most recent existing conversation, or creates a new Conversation. If the existing Conversation is still in a connected state the threading timeline setting will never play a role. After the conversation is disconnected, if an inbound message is received or an outbound message is sent after the setting for threading timeline expires, a new conversation is created.
	 */},{key:"getConversationsMessagingThreadingtimeline",value:function getConversationsMessagingThreadingtimeline(){return this.apiClient.callApi('/api/v2/conversations/messaging/threadingtimeline','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsScreenshareParticipantCommunicationWrapup",value:function getConversationsScreenshareParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsScreenshareParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsScreenshareParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsScreenshareParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Settings
	 * 
	 */},{key:"getConversationsSettings",value:function getConversationsSettings(){return this.apiClient.callApi('/api/v2/conversations/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsSocialParticipantCommunicationWrapup",value:function getConversationsSocialParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsSocialParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsSocialParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsSocialParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/socials/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get video conference details (e.g. the current number of active participants).
	 * 
	 * @param {String} conferenceId conferenceId
	 * getConversationsVideoDetails is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getConversationsVideoDetails",value:function getConversationsVideoDetails(conferenceId){// verify the required parameter 'conferenceId' is set
if(conferenceId===undefined||conferenceId===null){throw'Missing the required parameter "conferenceId" when calling getConversationsVideoDetails';}return this.apiClient.callApi('/api/v2/conversations/videos/{conferenceId}/details','GET',{'conferenceId':conferenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up for this conversation communication. 
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.provisional Indicates if the wrap-up code is provisional. (default to false)
	 */},{key:"getConversationsVideoParticipantCommunicationWrapup",value:function getConversationsVideoParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationsVideoParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling getConversationsVideoParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getConversationsVideoParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','GET',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{'provisional':opts['provisional']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a record for a given meetingId
	 * 
	 * @param {String} meetingId meetingId
	 * getConversationsVideosMeeting is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getConversationsVideosMeeting",value:function getConversationsVideosMeeting(meetingId){// verify the required parameter 'meetingId' is set
if(meetingId===undefined||meetingId===null){throw'Missing the required parameter "meetingId" when calling getConversationsVideosMeeting';}return this.apiClient.callApi('/api/v2/conversations/videos/meetings/{meetingId}','GET',{'meetingId':meetingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a participant.
	 * Update conversation participant.
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Update request
	 */},{key:"patchConversationParticipant",value:function patchConversationParticipant(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationParticipant';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationParticipant';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Participant attributes
	 */},{key:"patchConversationParticipantAttributes",value:function patchConversationParticipantAttributes(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationParticipantAttributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the secure attributes on a conversation.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {Object} body Conversation Secure Attributes
	 */},{key:"patchConversationSecureattributes",value:function patchConversationSecureattributes(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationSecureattributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationSecureattributes';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/secureattributes','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update after-call work for this conversation communication.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body AfterCallWorkUpdate
	 */},{key:"patchConversationsAftercallworkConversationIdParticipantCommunication",value:function patchConversationsAftercallworkConversationIdParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsAftercallworkConversationIdParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsAftercallworkConversationIdParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsAftercallworkConversationIdParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsAftercallworkConversationIdParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/aftercallwork/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state, merging in other conversations to create a conference, or disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsCall",value:function patchConversationsCall(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCall';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCall';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Participant request
	 */},{key:"patchConversationsCallParticipant",value:function patchConversationsCallParticipant(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallParticipant';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallParticipant';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Participant attributes
	 */},{key:"patchConversationsCallParticipantAttributes",value:function patchConversationsCallParticipantAttributes(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallParticipantAttributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsCallParticipantCommunication",value:function patchConversationsCallParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsCallParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Change who can speak
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body new speak to
	 */},{key:"patchConversationsCallParticipantConsult",value:function patchConversationsCallParticipantConsult(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallParticipantConsult';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallParticipantConsult';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallParticipantConsult';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsCallback",value:function patchConversationsCallback(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallback';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallback';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsCallbackParticipant",value:function patchConversationsCallbackParticipant(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallbackParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallbackParticipant';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallbackParticipant';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Attributes
	 */},{key:"patchConversationsCallbackParticipantAttributes",value:function patchConversationsCallbackParticipantAttributes(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallbackParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallbackParticipantAttributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallbackParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsCallbackParticipantCommunication",value:function patchConversationsCallbackParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCallbackParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCallbackParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsCallbackParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallbackParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a scheduled callback
	 * 
	 * @param {Object} body PatchCallbackRequest
	 */},{key:"patchConversationsCallbacks",value:function patchConversationsCallbacks(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCallbacks';}return this.apiClient.callApi('/api/v2/conversations/callbacks','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsChat",value:function patchConversationsChat(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsChat';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsChat';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Update request
	 */},{key:"patchConversationsChatParticipant",value:function patchConversationsChatParticipant(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsChatParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsChatParticipant';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsChatParticipant';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Participant attributes
	 */},{key:"patchConversationsChatParticipantAttributes",value:function patchConversationsChatParticipantAttributes(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsChatParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsChatParticipantAttributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsChatParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsChatParticipantCommunication",value:function patchConversationsChatParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsChatParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsChatParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsChatParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsChatParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsCobrowsesession",value:function patchConversationsCobrowsesession(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCobrowsesession';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCobrowsesession';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchConversationsCobrowsesessionParticipant",value:function patchConversationsCobrowsesessionParticipant(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCobrowsesessionParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCobrowsesessionParticipant';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchConversationsCobrowsesessionParticipantAttributes",value:function patchConversationsCobrowsesessionParticipantAttributes(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCobrowsesessionParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCobrowsesessionParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsCobrowsesessionParticipantCommunication",value:function patchConversationsCobrowsesessionParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsCobrowsesessionParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsCobrowsesessionParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsCobrowsesessionParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsCobrowsesessionParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsEmail",value:function patchConversationsEmail(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsEmail';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsEmail';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reset conversation draft to its initial state and/or auto-fill draft content
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.autoFill autoFill
	 * @param {Boolean} opts.discard discard
	 * @param {Object} opts.body Draft Manipulation Request
	 */},{key:"patchConversationsEmailMessagesDraft",value:function patchConversationsEmailMessagesDraft(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsEmailMessagesDraft';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/draft','PATCH',{'conversationId':conversationId},{'autoFill':opts['autoFill'],'discard':opts['discard']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Update request
	 */},{key:"patchConversationsEmailParticipant",value:function patchConversationsEmailParticipant(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsEmailParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsEmailParticipant';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsEmailParticipant';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Participant attributes
	 */},{key:"patchConversationsEmailParticipantAttributes",value:function patchConversationsEmailParticipantAttributes(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsEmailParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsEmailParticipantAttributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsEmailParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsEmailParticipantCommunication",value:function patchConversationsEmailParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsEmailParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsEmailParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsEmailParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsEmailParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by disconnecting all of the participants
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"patchConversationsMessage",value:function patchConversationsMessage(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessage';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchConversationsMessageParticipant",value:function patchConversationsMessageParticipant(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsMessageParticipant';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsMessageParticipant';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes on a conversation participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchConversationsMessageParticipantAttributes",value:function patchConversationsMessageParticipantAttributes(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsMessageParticipantAttributes';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsMessageParticipantAttributes';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes','PATCH',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation participant's communication by disconnecting it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Participant
	 */},{key:"patchConversationsMessageParticipantCommunication",value:function patchConversationsMessageParticipantCommunication(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchConversationsMessageParticipantCommunication';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling patchConversationsMessageParticipantCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling patchConversationsMessageParticipantCommunication';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessageParticipantCommunication';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}','PATCH',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Facebook messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} body FacebookIntegrationUpdateRequest
	 */},{key:"patchConversationsMessagingIntegrationsFacebookIntegrationId",value:function patchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsFacebookIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsFacebookIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/facebook/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Instagram messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} body InstagramIntegrationUpdateRequest
	 */},{key:"patchConversationsMessagingIntegrationsInstagramIntegrationId",value:function patchConversationsMessagingIntegrationsInstagramIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsInstagramIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsInstagramIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/instagram/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an Open messaging integration
	 * See https://developer.genesys.cloud/api/digital/openmessaging/ for more information.
	 * @param {String} integrationId Integration ID
	 * @param {Object} body OpenIntegrationUpdateRequest
	 */},{key:"patchConversationsMessagingIntegrationsOpenIntegrationId",value:function patchConversationsMessagingIntegrationsOpenIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsOpenIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsOpenIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/open/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Twitter messaging integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} body TwitterIntegrationRequest
	 */},{key:"patchConversationsMessagingIntegrationsTwitterIntegrationId",value:function patchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsTwitterIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsTwitterIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/twitter/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Activate a WhatsApp messaging integration created using the WhatsApp embedded signup flow
	 * Please specify the phone number to associate with this WhatsApp integration from the list of available phone numbers returned to you in the POST call to create the integration. You can then run a GET on the integration to check if its status has been updated to Active
	 * @param {String} integrationId Integration ID
	 * @param {Object} body WhatsAppEmbeddedSignupIntegrationActivationRequest
	 */},{key:"patchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId",value:function patchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update or activate a WhatsApp messaging integration
	 * The following steps are required in order to fully activate a WhatsApp Integration: Initially, you will need to get an activation code by sending: an action set to Activate, and an authenticationMethod choosing from Sms or Voice. Finally, once you have been informed of an activation code on selected authenticationMethod, you will need to confirm the code by sending: an action set to Confirm, and the confirmationCode you have received from Whatsapp.
	 * @param {String} integrationId Integration ID
	 * @param {Object} body WhatsAppIntegrationUpdateRequest
	 */},{key:"patchConversationsMessagingIntegrationsWhatsappIntegrationId",value:function patchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchConversationsMessagingIntegrationsWhatsappIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingIntegrationsWhatsappIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp/{integrationId}','PATCH',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a messaging setting
	 * 
	 * @param {String} messageSettingId Message Setting ID
	 * @param {Object} body MessagingSetting
	 */},{key:"patchConversationsMessagingSetting",value:function patchConversationsMessagingSetting(messageSettingId,body){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling patchConversationsMessagingSetting';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingSetting';}return this.apiClient.callApi('/api/v2/conversations/messaging/settings/{messageSettingId}','PATCH',{'messageSettingId':messageSettingId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a supported content profile
	 * 
	 * @param {String} supportedContentId Supported Content ID
	 * @param {Object} body SupportedContent
	 */},{key:"patchConversationsMessagingSupportedcontentSupportedContentId",value:function patchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId,body){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling patchConversationsMessagingSupportedcontentSupportedContentId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent/{supportedContentId}','PATCH',{'supportedContentId':supportedContentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Settings
	 * 
	 * @param {Object} body Settings
	 */},{key:"patchConversationsSettings",value:function patchConversationsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchConversationsSettings';}return this.apiClient.callApi('/api/v2/conversations/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Index conversation properties
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body request
	 */},{key:"postAnalyticsConversationDetailsProperties",value:function postAnalyticsConversationDetailsProperties(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postAnalyticsConversationDetailsProperties';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationDetailsProperties';}return this.apiClient.callApi('/api/v2/analytics/conversations/{conversationId}/details/properties','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsConversationsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsConversationsActivityQuery",value:function postAnalyticsConversationsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsConversationsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsConversationsAggregatesJobs",value:function postAnalyticsConversationsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsAggregatesQuery",value:function postAnalyticsConversationsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation details asynchronously
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsDetailsJobs",value:function postAnalyticsConversationsDetailsJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsDetailsJobs';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for conversation details
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsConversationsDetailsQuery",value:function postAnalyticsConversationsDetailsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsDetailsQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/details/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Attempts to manually assign a specified conversation to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {Object} body Targeted user
	 */},{key:"postConversationAssign",value:function postConversationAssign(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationAssign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationAssign';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/assign','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Barge a conversation creating a barged in conference of connected participants.
	 * 
	 * @param {String} conversationId conversation ID
	 * postConversationBarge is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationBarge",value:function postConversationBarge(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationBarge';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/barge','POST',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a cobrowse session. Requires conversation:cobrowse:add (for web messaging) or conversation:cobrowsevoice:add permission.
	 * 
	 * @param {String} conversationId Conversation ID
	 */},{key:"postConversationCobrowse",value:function postConversationCobrowse(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationCobrowse';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/cobrowse','POST',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Performs a full conversation teardown. Issues disconnect requests for any connected media. Applies a system wrap-up code to any participants that are pending wrap-up. This is not intended to be the normal way of ending interactions but is available in the event of problems with the application to allow a resynchronization of state across all components. It is recommended that users submit a support case if they are relying on this endpoint systematically as there is likely something that needs investigation.
	 * 
	 * @param {String} conversationId conversation ID
	 */},{key:"postConversationDisconnect",value:function postConversationDisconnect(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationDisconnect';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/disconnect','POST',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new callback for the specified participant on the conversation.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postConversationParticipantCallbacks",value:function postConversationParticipantCallbacks(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantCallbacks';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantCallbacks';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/callbacks','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sends DTMF to the participant
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Digits
	 */},{key:"postConversationParticipantDigits",value:function postConversationParticipantDigits(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantDigits';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantDigits';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/digits','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Transfer request
	 */},{key:"postConversationParticipantReplace",value:function postConversationParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified agent
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Transfer request
	 * postConversationParticipantReplaceAgent is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationParticipantReplaceAgent",value:function postConversationParticipantReplaceAgent(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantReplaceAgent';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantReplaceAgent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationParticipantReplaceAgent';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/replace/agent','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the an external contact
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Transfer request
	 * postConversationParticipantReplaceExternal is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationParticipantReplaceExternal",value:function postConversationParticipantReplaceExternal(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantReplaceExternal';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantReplaceExternal';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationParticipantReplaceExternal';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/replace/external','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified queue
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} body Transfer request
	 * postConversationParticipantReplaceQueue is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationParticipantReplaceQueue",value:function postConversationParticipantReplaceQueue(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantReplaceQueue';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantReplaceQueue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationParticipantReplaceQueue';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/replace/queue','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create secure IVR session. Only a participant in the conversation can invoke a secure IVR.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postConversationParticipantSecureivrsessions",value:function postConversationParticipantSecureivrsessions(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationParticipantSecureivrsessions';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationParticipantSecureivrsessions';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Place a new call as part of a callback conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"postConversationsCall",value:function postConversationsCall(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCall';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCall';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Barge a given participant's call creating a barged in conference of connected participants.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * postConversationsCallParticipantBarge is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsCallParticipantBarge",value:function postConversationsCallParticipantBarge(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantBarge';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantBarge';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/barge','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Listen in on the conversation from the point of view of a given participant while speaking to just the given participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"postConversationsCallParticipantCoach",value:function postConversationsCallParticipantCoach(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantCoach';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantCoach';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/coach','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsCallParticipantCommunicationWrapup",value:function postConversationsCallParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsCallParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate and update consult transfer
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Destination address and initial speak to
	 */},{key:"postConversationsCallParticipantConsult",value:function postConversationsCallParticipantConsult(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantConsult';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantConsult';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipantConsult';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate a consult transfer to an agent
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Destination agent and initial speak to
	 * postConversationsCallParticipantConsultAgent is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsCallParticipantConsultAgent",value:function postConversationsCallParticipantConsultAgent(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantConsultAgent';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantConsultAgent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipantConsultAgent';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/agent','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate a consult transfer to an external contact
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Destination address and initial speak to
	 * postConversationsCallParticipantConsultExternal is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsCallParticipantConsultExternal",value:function postConversationsCallParticipantConsultExternal(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantConsultExternal';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantConsultExternal';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipantConsultExternal';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/external','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate a consult transfer to a queue
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Destination queue and initial speak to
	 * postConversationsCallParticipantConsultQueue is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsCallParticipantConsultQueue",value:function postConversationsCallParticipantConsultQueue(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantConsultQueue';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantConsultQueue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipantConsultQueue';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/queue','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Listen in on the conversation from the point of view of a given participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 */},{key:"postConversationsCallParticipantMonitor",value:function postConversationsCallParticipantMonitor(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantMonitor';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantMonitor';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Transfer request
	 */},{key:"postConversationsCallParticipantReplace",value:function postConversationsCallParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add participants to a conversation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Conversation
	 */},{key:"postConversationsCallParticipants",value:function postConversationsCallParticipants(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallParticipants';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallParticipants';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsCallbackParticipantCommunicationWrapup",value:function postConversationsCallbackParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallbackParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallbackParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsCallbackParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Transfer request
	 */},{key:"postConversationsCallbackParticipantReplace",value:function postConversationsCallbackParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCallbackParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCallbackParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallbackParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Callback
	 * 
	 * @param {Object} body Callback
	 */},{key:"postConversationsCallbacks",value:function postConversationsCallbacks(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallbacks';}return this.apiClient.callApi('/api/v2/conversations/callbacks','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Disconnect multiple scheduled callbacks
	 * 
	 * @param {Object} body BulkCallbackDisconnectRequest
	 */},{key:"postConversationsCallbacksBulkDisconnect",value:function postConversationsCallbacksBulkDisconnect(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallbacksBulkDisconnect';}return this.apiClient.callApi('/api/v2/conversations/callbacks/bulk/disconnect','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update multiple scheduled callbacks
	 * 
	 * @param {Object} body BulkCallbackPatchRequest
	 */},{key:"postConversationsCallbacksBulkUpdate",value:function postConversationsCallbacksBulkUpdate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCallbacksBulkUpdate';}return this.apiClient.callApi('/api/v2/conversations/callbacks/bulk/update','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a call conversation
	 * 
	 * @param {Object} body Call request
	 */},{key:"postConversationsCalls",value:function postConversationsCalls(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsCalls';}return this.apiClient.callApi('/api/v2/conversations/calls','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a message on behalf of a communication in a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Message
	 */},{key:"postConversationsChatCommunicationMessages",value:function postConversationsChatCommunicationMessages(conversationId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsChatCommunicationMessages';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsChatCommunicationMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsChatCommunicationMessages';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages','POST',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a typing-indicator on behalf of a communication in a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 */},{key:"postConversationsChatCommunicationTyping",value:function postConversationsChatCommunicationTyping(conversationId,communicationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsChatCommunicationTyping';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsChatCommunicationTyping';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/communications/{communicationId}/typing','POST',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsChatParticipantCommunicationWrapup",value:function postConversationsChatParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsChatParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsChatParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsChatParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Transfer request
	 */},{key:"postConversationsChatParticipantReplace",value:function postConversationsChatParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsChatParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsChatParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsChatParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a web chat conversation
	 * 
	 * @param {Object} body Create web chat request
	 */},{key:"postConversationsChats",value:function postConversationsChats(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsChats';}return this.apiClient.callApi('/api/v2/conversations/chats','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsCobrowsesessionParticipantCommunicationWrapup",value:function postConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCobrowsesessionParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCobrowsesessionParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsCobrowsesessionParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postConversationsCobrowsesessionParticipantReplace",value:function postConversationsCobrowsesessionParticipantReplace(conversationId,participantId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsCobrowsesessionParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsCobrowsesessionParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an email to an external conversation. An external conversation is one where the provider is not PureCloud based. This endpoint allows the sender of the external email to reply or send a new message to the existing conversation. The new message will be treated as part of the existing conversation and chained to it.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Send external email reply
	 */},{key:"postConversationsEmailInboundmessages",value:function postConversationsEmailInboundmessages(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsEmailInboundmessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmailInboundmessages';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/inboundmessages','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an email reply
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Reply
	 */},{key:"postConversationsEmailMessages",value:function postConversationsEmailMessages(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsEmailMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmailMessages';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Copy attachments from an email message to the current draft.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Copy Attachment Request
	 */},{key:"postConversationsEmailMessagesDraftAttachmentsCopy",value:function postConversationsEmailMessagesDraftAttachmentsCopy(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsEmailMessagesDraftAttachmentsCopy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmailMessagesDraftAttachmentsCopy';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/draft/attachments/copy','POST',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsEmailParticipantCommunicationWrapup",value:function postConversationsEmailParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsEmailParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsEmailParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsEmailParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Transfer request
	 */},{key:"postConversationsEmailParticipantReplace",value:function postConversationsEmailParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsEmailParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsEmailParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmailParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an email conversation
	 * If the direction of the request is INBOUND, this will create an external conversation with a third party provider. If the direction of the the request is OUTBOUND, this will create a conversation to send outbound emails on behalf of a queue.
	 * @param {Object} body Create email request
	 */},{key:"postConversationsEmails",value:function postConversationsEmails(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmails';}return this.apiClient.callApi('/api/v2/conversations/emails','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an email conversation, per API
	 * 
	 * @param {Object} body Create agentless email request
	 */},{key:"postConversationsEmailsAgentless",value:function postConversationsEmailsAgentless(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsEmailsAgentless';}return this.apiClient.callApi('/api/v2/conversations/emails/agentless','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Fax Conversation
	 * 
	 * @param {Object} body Fax
	 */},{key:"postConversationsFaxes",value:function postConversationsFaxes(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsFaxes';}return this.apiClient.callApi('/api/v2/conversations/faxes','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Setup configurations for encryption key creation
	 * 
	 * @param {Object} body Encryption Configuration
	 */},{key:"postConversationsKeyconfigurations",value:function postConversationsKeyconfigurations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsKeyconfigurations';}return this.apiClient.callApi('/api/v2/conversations/keyconfigurations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validate encryption key configurations without saving it
	 * 
	 * @param {Object} body Encryption Configuration
	 */},{key:"postConversationsKeyconfigurationsValidate",value:function postConversationsKeyconfigurationsValidate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsKeyconfigurationsValidate';}return this.apiClient.callApi('/api/v2/conversations/keyconfigurations/validate','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send message
	 * Send message on existing conversation/communication. Only one message body field can be accepted, per request. Example: 1 textBody, 1 mediaId, 1 stickerId, or 1 messageTemplate.
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 * @param {Object} body Message
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.useNormalizedMessage If true, response removes deprecated fields (textBody, media, stickers) (default to false)
	 */},{key:"postConversationsMessageCommunicationMessages",value:function postConversationsMessageCommunicationMessages(conversationId,communicationId,body,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageCommunicationMessages';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsMessageCommunicationMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageCommunicationMessages';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages','POST',{'conversationId':conversationId,'communicationId':communicationId},{'useNormalizedMessage':opts['useNormalizedMessage']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create media
	 * See https://developer.genesys.cloud/api/rest/v2/conversations/messaging-media-upload for example usage.
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 */},{key:"postConversationsMessageCommunicationMessagesMedia",value:function postConversationsMessageCommunicationMessagesMedia(conversationId,communicationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageCommunicationMessagesMedia';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsMessageCommunicationMessagesMedia';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media','POST',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send message typing event
	 * Send message typing event for existing conversation/communication.
	 * @param {String} conversationId conversationId
	 * @param {String} communicationId communicationId
	 * @param {Object} body MessageTypingEvent
	 */},{key:"postConversationsMessageCommunicationTyping",value:function postConversationsMessageCommunicationTyping(conversationId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageCommunicationTyping';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsMessageCommunicationTyping';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageCommunicationTyping';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing','POST',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an inbound Open Event Message
	 * Send an inbound event message to an Open Messaging integration. In order to call this endpoint you will need OAuth token generated using OAuth client credentials authorized with at least messaging scope. This will either generate a new Conversation, or be a part of an existing conversation. See https://developer.genesys.cloud/api/digital/openmessaging/ for example usage.
	 * @param {String} integrationId integrationId
	 * @param {Object} body NormalizedMessage
	 */},{key:"postConversationsMessageInboundOpenEvent",value:function postConversationsMessageInboundOpenEvent(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling postConversationsMessageInboundOpenEvent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageInboundOpenEvent';}return this.apiClient.callApi('/api/v2/conversations/messages/{integrationId}/inbound/open/event','POST',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send inbound Open Message
	 * Send an inbound message to an Open Messaging integration. In order to call this endpoint you will need OAuth token generated using OAuth client credentials authorized with at least messaging scope. This will either generate a new Conversation, or be a part of an existing conversation. See https://developer.genesys.cloud/api/digital/openmessaging/ for example usage.
	 * @param {String} integrationId integrationId
	 * @param {Object} body NormalizedMessage
	 */},{key:"postConversationsMessageInboundOpenMessage",value:function postConversationsMessageInboundOpenMessage(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling postConversationsMessageInboundOpenMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageInboundOpenMessage';}return this.apiClient.callApi('/api/v2/conversations/messages/{integrationId}/inbound/open/message','POST',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an inbound Open Receipt Message
	 * Send an inbound open Receipt to an Open Messaging integration. In order to call this endpoint you will need OAuth token generated using OAuth client credentials authorized with at least messaging scope. This will either generate a new Conversation, or be a part of an existing conversation. See https://developer.genesys.cloud/api/digital/openmessaging/ for example usage.
	 * @param {String} integrationId integrationId
	 * @param {Object} body NormalizedMessage
	 */},{key:"postConversationsMessageInboundOpenReceipt",value:function postConversationsMessageInboundOpenReceipt(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling postConversationsMessageInboundOpenReceipt';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageInboundOpenReceipt';}return this.apiClient.callApi('/api/v2/conversations/messages/{integrationId}/inbound/open/receipt','POST',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get messages in batch
	 * The path parameter [conversationId] should contain the conversationId of the conversation being filtered. The body should contain the messageId(s) of messages being requested. For example: ["a3069a33b-bbb1-4703-9d68-061d9e9db96e", "55bc6be3-078c-4a49-a4e6-1e05776ed7e8"]
	 * @param {String} conversationId 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.useNormalizedMessage If true, response removes deprecated fields (textBody, media, stickers) (default to false)
	 * @param {Array.<String>} opts.body messageIds
	 */},{key:"postConversationsMessageMessagesBulk",value:function postConversationsMessageMessagesBulk(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageMessagesBulk';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/messages/bulk','POST',{'conversationId':conversationId},{'useNormalizedMessage':opts['useNormalizedMessage']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsMessageParticipantCommunicationWrapup",value:function postConversationsMessageParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsMessageParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsMessageParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Listen in on the conversation from the point of view of a given participant.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * postConversationsMessageParticipantMonitor is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsMessageParticipantMonitor",value:function postConversationsMessageParticipantMonitor(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageParticipantMonitor';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsMessageParticipantMonitor';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/monitor','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace this participant with the specified user and/or address
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {Object} body Transfer request
	 */},{key:"postConversationsMessageParticipantReplace",value:function postConversationsMessageParticipantReplace(conversationId,participantId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsMessageParticipantReplace';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsMessageParticipantReplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessageParticipantReplace';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/participants/{participantId}/replace','POST',{'conversationId':conversationId,'participantId':participantId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an outbound messaging conversation.
	 * If there is an existing conversation between the remote address and the address associated with the queue specified in createOutboundRequest then the result of this request depends on the state of that conversation and the useExistingConversation field of createOutboundRequest. If the existing conversation is in alerting or connected state, then the request will fail. If the existing conversation is disconnected but still within the conversation window then the request will fail unless useExistingConversation is set to true.
	 * @param {Object} body Create outbound messaging conversation
	 */},{key:"postConversationsMessages",value:function postConversationsMessages(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessages';}return this.apiClient.callApi('/api/v2/conversations/messages','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an agentless outbound message
	 * Send an agentless (api participant) outbound message using a client credential grant. In order to call this endpoint you will need OAuth token generated using OAuth client credentials authorized with at least messaging scope. If there is already a connected conversation between the fromAddress and toAddress specified, the useExistingActiveConversation param can be used to barge in to the ongoing conversation.
	 * @param {Object} body Create agentless outbound messaging request
	 */},{key:"postConversationsMessagesAgentless",value:function postConversationsMessagesAgentless(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagesAgentless';}return this.apiClient.callApi('/api/v2/conversations/messages/agentless','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an inbound Open Message
	 * Send an inbound message to an Open Messaging integration. In order to call this endpoint you will need OAuth token generated using OAuth client credentials authorized with at least messaging scope. This will either generate a new Conversation, or be a part of an existing conversation. See https://developer.genesys.cloud/api/digital/openmessaging/ for example usage.
	 * @param {Object} body NormalizedMessage
	 */},{key:"postConversationsMessagesInboundOpen",value:function postConversationsMessagesInboundOpen(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagesInboundOpen';}return this.apiClient.callApi('/api/v2/conversations/messages/inbound/open','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Facebook Integration
	 * 
	 * @param {Object} body FacebookIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsFacebook",value:function postConversationsMessagingIntegrationsFacebook(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsFacebook';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/facebook','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Instagram Integration
	 * 
	 * @param {Object} body InstagramIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsInstagram",value:function postConversationsMessagingIntegrationsInstagram(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsInstagram';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/instagram','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a LINE messenger Integration
	 * 
	 * @param {Object} body LineIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsLine",value:function postConversationsMessagingIntegrationsLine(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsLine';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/line','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an Open messaging integration
	 * See https://developer.genesys.cloud/api/digital/openmessaging/ for more information.
	 * @param {Object} body OpenIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsOpen",value:function postConversationsMessagingIntegrationsOpen(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsOpen';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/open','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Twitter Integration
	 * 
	 * @param {Object} body TwitterIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsTwitter",value:function postConversationsMessagingIntegrationsTwitter(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsTwitter';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/twitter','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * [This API is deprecated. Use POST /api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup instead] Create a WhatsApp Integration
	 * [This API is deprecated. Use POST /api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup instead] You must be approved by WhatsApp to use this feature. Your approved e164-formatted phone number and valid WhatsApp certificate for your number are required. Your WhatsApp certificate must have valid base64 encoding. Please paste carefully and do not add any leading or trailing spaces. Do not alter any characters. An integration must be activated within 7 days of certificate generation. If you cannot complete the addition and activation of the number within 7 days, please obtain a new certificate before creating the integration. Integrations created with an invalid number or certificate may immediately incur additional integration fees. Please carefully enter your number and certificate as described.
	 * @param {Object} body WhatsAppIntegrationRequest
	 * @deprecated
	 */},{key:"postConversationsMessagingIntegrationsWhatsapp",value:function postConversationsMessagingIntegrationsWhatsapp(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsWhatsapp';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a WhatsApp Integration using the WhatsApp embedded signup flow
	 * Use the access token returned from the embedded signup flow to obtain a list of available phone numbers that can be associated with the created integration. The returned WhatsApp integration will initially have a createStatus of Initiated until the list of available phone numbers can be obtained from the provider. Please run a GET on the created integration until it returns a createStatus of Completed, and the list of available phone numbers obtained from the provider. You can then specify one of the available phone numbers in the PATCH call on the integration to activate it.
	 * @param {Object} body WhatsAppEmbeddedSignupIntegrationRequest
	 */},{key:"postConversationsMessagingIntegrationsWhatsappEmbeddedsignup",value:function postConversationsMessagingIntegrationsWhatsappEmbeddedsignup(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingIntegrationsWhatsappEmbeddedsignup';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a messaging setting
	 * 
	 * @param {Object} body MessagingSetting
	 */},{key:"postConversationsMessagingSettings",value:function postConversationsMessagingSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingSettings';}return this.apiClient.callApi('/api/v2/conversations/messaging/settings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Supported Content profile
	 * 
	 * @param {Object} body SupportedContent
	 */},{key:"postConversationsMessagingSupportedcontent",value:function postConversationsMessagingSupportedcontent(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsMessagingSupportedcontent';}return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search conversations
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postConversationsParticipantsAttributesSearch",value:function postConversationsParticipantsAttributesSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsParticipantsAttributesSearch';}return this.apiClient.callApi('/api/v2/conversations/participants/attributes/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsScreenshareParticipantCommunicationWrapup",value:function postConversationsScreenshareParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsScreenshareParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsScreenshareParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsScreenshareParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsSocialParticipantCommunicationWrapup",value:function postConversationsSocialParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsSocialParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsSocialParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsSocialParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/socials/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply wrap-up for this conversation communication
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Wrap-up
	 */},{key:"postConversationsVideoParticipantCommunicationWrapup",value:function postConversationsVideoParticipantCommunicationWrapup(conversationId,participantId,communicationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationsVideoParticipantCommunicationWrapup';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling postConversationsVideoParticipantCommunicationWrapup';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling postConversationsVideoParticipantCommunicationWrapup';}return this.apiClient.callApi('/api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup','POST',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate a meetingId for a given conferenceId
	 * 
	 * @param {Object} body MeetingIdRequest
	 * postConversationsVideosMeetings is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postConversationsVideosMeetings",value:function postConversationsVideosMeetings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsVideosMeetings';}return this.apiClient.callApi('/api/v2/conversations/videos/meetings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set flagged reason on conversation participant to indicate bad conversation quality.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {String} participantId participant ID
	 */},{key:"putConversationParticipantFlaggedreason",value:function putConversationParticipantFlaggedreason(conversationId,participantId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationParticipantFlaggedreason';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling putConversationParticipantFlaggedreason';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason','PUT',{'conversationId':conversationId,'participantId':participantId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set the secure attributes on a conversation.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {Object} body Conversation Secure Attributes
	 */},{key:"putConversationSecureattributes",value:function putConversationSecureattributes(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationSecureattributes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationSecureattributes';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/secureattributes','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the tags on a conversation.
	 * 
	 * @param {String} conversationId conversation ID
	 * @param {Object} body Conversation Tags
	 */},{key:"putConversationTags",value:function putConversationTags(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationTags';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationTags';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/tags','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set uuiData to be sent on future commands.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} participantId participantId
	 * @param {String} communicationId communicationId
	 * @param {Object} body UUIData Request
	 */},{key:"putConversationsCallParticipantCommunicationUuidata",value:function putConversationsCallParticipantCommunicationUuidata(conversationId,participantId,communicationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsCallParticipantCommunicationUuidata';}// verify the required parameter 'participantId' is set
if(participantId===undefined||participantId===null){throw'Missing the required parameter "participantId" when calling putConversationsCallParticipantCommunicationUuidata';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling putConversationsCallParticipantCommunicationUuidata';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsCallParticipantCommunicationUuidata';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/uuidata','PUT',{'conversationId':conversationId,'participantId':participantId,'communicationId':communicationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsCallRecordingstate",value:function putConversationsCallRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsCallRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsCallRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/calls/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsCallbackRecordingstate",value:function putConversationsCallbackRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsCallbackRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsCallbackRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/callbacks/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsChatRecordingstate",value:function putConversationsChatRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsChatRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsChatRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/chats/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsCobrowsesessionRecordingstate",value:function putConversationsCobrowsesessionRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsCobrowsesessionRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsCobrowsesessionRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/cobrowsesessions/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation draft reply
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body Draft
	 */},{key:"putConversationsEmailMessagesDraft",value:function putConversationsEmailMessagesDraft(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsEmailMessagesDraft';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsEmailMessagesDraft';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/messages/draft','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsEmailRecordingstate",value:function putConversationsEmailRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsEmailRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsEmailRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/emails/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the encryption key configurations
	 * 
	 * @param {String} keyconfigurationsId Key Configurations Id
	 * @param {Object} body Encryption key configuration metadata
	 */},{key:"putConversationsKeyconfiguration",value:function putConversationsKeyconfiguration(keyconfigurationsId,body){// verify the required parameter 'keyconfigurationsId' is set
if(keyconfigurationsId===undefined||keyconfigurationsId===null){throw'Missing the required parameter "keyconfigurationsId" when calling putConversationsKeyconfiguration';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsKeyconfiguration';}return this.apiClient.callApi('/api/v2/conversations/keyconfigurations/{keyconfigurationsId}','PUT',{'keyconfigurationsId':keyconfigurationsId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsMessageRecordingstate",value:function putConversationsMessageRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsMessageRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsMessageRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/messages/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a LINE messenger integration
	 * 
	 * @param {String} integrationId Integration ID
	 * @param {Object} body LineIntegrationRequest
	 */},{key:"putConversationsMessagingIntegrationsLineIntegrationId",value:function putConversationsMessagingIntegrationsLineIntegrationId(integrationId,body){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling putConversationsMessagingIntegrationsLineIntegrationId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsMessagingIntegrationsLineIntegrationId';}return this.apiClient.callApi('/api/v2/conversations/messaging/integrations/line/{integrationId}','PUT',{'integrationId':integrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set the organization's default setting that may be applied to to integrations without settings
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be assigned to it.
	 * @param {Object} body MessagingSetting
	 */},{key:"putConversationsMessagingSettingsDefault",value:function putConversationsMessagingSettingsDefault(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsMessagingSettingsDefault';}return this.apiClient.callApi('/api/v2/conversations/messaging/settings/default','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set the organization's default supported content profile that may be assigned to an integration when it is created.
	 * When an integration is created a supported content ID may be assigned to it. If the supported content ID is not supplied, the default supported content profile will be assigned to it.
	 * @param {Object} body SupportedContent
	 */},{key:"putConversationsMessagingSupportedcontentDefault",value:function putConversationsMessagingSupportedcontentDefault(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsMessagingSupportedcontentDefault';}return this.apiClient.callApi('/api/v2/conversations/messaging/supportedcontent/default','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update conversation threading window timeline for each messaging type
	 * PUT Conversation messaging threading timeline is intended to set the conversation threading settings for ALL messengerTypes. If you omit a messengerType in the request body then the setting for that messengerType will use the platform default value. The PUT replaces the existing setting(s) that were previously set for each messengerType.
	 * @param {Object} body ConversationThreadingWindowRequest
	 */},{key:"putConversationsMessagingThreadingtimeline",value:function putConversationsMessagingThreadingtimeline(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsMessagingThreadingtimeline';}return this.apiClient.callApi('/api/v2/conversations/messaging/threadingtimeline','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsScreenshareRecordingstate",value:function putConversationsScreenshareRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsScreenshareRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsScreenshareRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/screenshares/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsSocialRecordingstate",value:function putConversationsSocialRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsSocialRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsSocialRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/socials/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a conversation by setting its recording state
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body SetRecordingState
	 */},{key:"putConversationsVideoRecordingstate",value:function putConversationsVideoRecordingstate(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationsVideoRecordingstate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationsVideoRecordingstate';}return this.apiClient.callApi('/api/v2/conversations/videos/{conversationId}/recordingstate','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ConversationsApi;}();var DataExtensionsApi=/*#__PURE__*/function(){/**
	 * DataExtensions service.
	 * @module purecloud-platform-client-v2/api/DataExtensionsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new DataExtensionsApi. 
	 * @alias module:purecloud-platform-client-v2/api/DataExtensionsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function DataExtensionsApi(apiClient){_classCallCheck(this,DataExtensionsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get a specific named core type.
	 * 
	 * @param {Object} coretypeName The core type's name
	 */_createClass(DataExtensionsApi,[{key:"getDataextensionsCoretype",value:function getDataextensionsCoretype(coretypeName){// verify the required parameter 'coretypeName' is set
if(coretypeName===undefined||coretypeName===null){throw'Missing the required parameter "coretypeName" when calling getDataextensionsCoretype';}return this.apiClient.callApi('/api/v2/dataextensions/coretypes/{coretypeName}','GET',{'coretypeName':coretypeName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the core types from which all schemas are built.
	 * 
	 */},{key:"getDataextensionsCoretypes",value:function getDataextensionsCoretypes(){return this.apiClient.callApi('/api/v2/dataextensions/coretypes','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get quantitative limits on schemas
	 * 
	 */},{key:"getDataextensionsLimits",value:function getDataextensionsLimits(){return this.apiClient.callApi('/api/v2/dataextensions/limits','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return DataExtensionsApi;}();var DownloadsApi=/*#__PURE__*/function(){/**
	 * Downloads service.
	 * @module purecloud-platform-client-v2/api/DownloadsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new DownloadsApi. 
	 * @alias module:purecloud-platform-client-v2/api/DownloadsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function DownloadsApi(apiClient){_classCallCheck(this,DownloadsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Issues a redirect to a signed secure download URL for specified download
	 * this method will issue a redirect to the url to the content
	 * @param {String} downloadId Download ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.contentDisposition 
	 * @param {Boolean} opts.issueRedirect  (default to true)
	 * @param {Boolean} opts.redirectToAuth  (default to true)
	 */_createClass(DownloadsApi,[{key:"getDownload",value:function getDownload(downloadId,opts){opts=opts||{};// verify the required parameter 'downloadId' is set
if(downloadId===undefined||downloadId===null){throw'Missing the required parameter "downloadId" when calling getDownload';}return this.apiClient.callApi('/api/v2/downloads/{downloadId}','GET',{'downloadId':downloadId},{'contentDisposition':opts['contentDisposition'],'issueRedirect':opts['issueRedirect'],'redirectToAuth':opts['redirectToAuth']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return DownloadsApi;}();var EmailsApi=/*#__PURE__*/function(){/**
	 * Emails service.
	 * @module purecloud-platform-client-v2/api/EmailsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new EmailsApi. 
	 * @alias module:purecloud-platform-client-v2/api/EmailsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function EmailsApi(apiClient){_classCallCheck(this,EmailsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get email Contact Center settings
	 * 
	 */_createClass(EmailsApi,[{key:"getEmailsSettings",value:function getEmailsSettings(){return this.apiClient.callApi('/api/v2/emails/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch email Contact Center settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchEmailsSettings",value:function patchEmailsSettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/emails/settings','PATCH',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return EmailsApi;}();var EventsApi=/*#__PURE__*/function(){/**
	 * Events service.
	 * @module purecloud-platform-client-v2/api/EventsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new EventsApi. 
	 * @alias module:purecloud-platform-client-v2/api/EventsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function EventsApi(apiClient){_classCallCheck(this,EventsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Publish Conversation Batch Events
	 * 
	 * @param {Object} body batchRequest
	 */_createClass(EventsApi,[{key:"postEventsConversations",value:function postEventsConversations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postEventsConversations';}return this.apiClient.callApi('/api/v2/events/conversations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish User Presence Status Batch Events
	 * 
	 * @param {Object} body batchRequest
	 */},{key:"postEventsUsersPresence",value:function postEventsUsersPresence(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postEventsUsersPresence';}return this.apiClient.callApi('/api/v2/events/users/presence','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish Agent Routing Status Batch Events
	 * 
	 * @param {Object} body batchRequest
	 */},{key:"postEventsUsersRoutingstatus",value:function postEventsUsersRoutingstatus(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postEventsUsersRoutingstatus';}return this.apiClient.callApi('/api/v2/events/users/routingstatus','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return EventsApi;}();var ExternalContactsApi=/*#__PURE__*/function(){/**
	 * ExternalContacts service.
	 * @module purecloud-platform-client-v2/api/ExternalContactsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ExternalContactsApi. 
	 * @alias module:purecloud-platform-client-v2/api/ExternalContactsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ExternalContactsApi(apiClient){_classCallCheck(this,ExternalContactsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an external contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 */_createClass(ExternalContactsApi,[{key:"deleteExternalcontactsContact",value:function deleteExternalcontactsContact(contactId){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling deleteExternalcontactsContact';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}','DELETE',{'contactId':contactId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a note for an external contact
	 * 
	 * @param {String} contactId ExternalContact Id
	 * @param {String} noteId Note Id
	 */},{key:"deleteExternalcontactsContactNote",value:function deleteExternalcontactsContactNote(contactId,noteId){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling deleteExternalcontactsContactNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling deleteExternalcontactsContactNote';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}','DELETE',{'contactId':contactId,'noteId':noteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a schema
	 * 
	 * @param {String} schemaId Schema ID
	 */},{key:"deleteExternalcontactsContactsSchema",value:function deleteExternalcontactsContactsSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling deleteExternalcontactsContactsSchema';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas/{schemaId}','DELETE',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 */},{key:"deleteExternalcontactsOrganization",value:function deleteExternalcontactsOrganization(externalOrganizationId){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling deleteExternalcontactsOrganization';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}','DELETE',{'externalOrganizationId':externalOrganizationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a note for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization Id
	 * @param {String} noteId Note Id
	 */},{key:"deleteExternalcontactsOrganizationNote",value:function deleteExternalcontactsOrganizationNote(externalOrganizationId,noteId){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling deleteExternalcontactsOrganizationNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling deleteExternalcontactsOrganizationNote';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/notes/{noteId}','DELETE',{'externalOrganizationId':externalOrganizationId,'noteId':noteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Unlink the Trustor for this External Organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 */},{key:"deleteExternalcontactsOrganizationTrustor",value:function deleteExternalcontactsOrganizationTrustor(externalOrganizationId){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling deleteExternalcontactsOrganizationTrustor';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/trustor','DELETE',{'externalOrganizationId':externalOrganizationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a relationship
	 * 
	 * @param {String} relationshipId Relationship Id
	 */},{key:"deleteExternalcontactsRelationship",value:function deleteExternalcontactsRelationship(relationshipId){// verify the required parameter 'relationshipId' is set
if(relationshipId===undefined||relationshipId===null){throw'Missing the required parameter "relationshipId" when calling deleteExternalcontactsRelationship';}return this.apiClient.callApi('/api/v2/externalcontacts/relationships/{relationshipId}','DELETE',{'relationshipId':relationshipId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch an external contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand which fields, if any, to expand (externalOrganization,externalDataSources)
	 */},{key:"getExternalcontactsContact",value:function getExternalcontactsContact(contactId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContact';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}','GET',{'contactId':contactId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List the identifiers for a contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 */},{key:"getExternalcontactsContactIdentifiers",value:function getExternalcontactsContactIdentifiers(contactId){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactIdentifiers';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/identifiers','GET',{'contactId':contactId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all sessions for a given external contact.
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Boolean} opts.includeMerged Indicates whether to return sessions from all external contacts in the merge-set of the given one.
	 */},{key:"getExternalcontactsContactJourneySessions",value:function getExternalcontactsContactJourneySessions(contactId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactJourneySessions';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/journey/sessions','GET',{'contactId':contactId},{'pageSize':opts['pageSize'],'after':opts['after'],'includeMerged':opts['includeMerged']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a note for an external contact
	 * 
	 * @param {String} contactId ExternalContact Id
	 * @param {String} noteId Note Id
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsContactNote",value:function getExternalcontactsContactNote(contactId,noteId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling getExternalcontactsContactNote';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}','GET',{'contactId':contactId,'noteId':noteId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List notes for an external contact
	 * 
	 * @param {String} contactId ExternalContact Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {String} opts.sortOrder Sort order
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsContactNotes",value:function getExternalcontactsContactNotes(contactId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactNotes';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/notes','GET',{'contactId':contactId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch an unresolved external contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand which fields, if any, to expand (externalOrganization,externalDataSources)
	 */},{key:"getExternalcontactsContactUnresolved",value:function getExternalcontactsContactUnresolved(contactId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactUnresolved';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/unresolved','GET',{'contactId':contactId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search for external contacts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {String} opts.q User supplied search keywords (no special syntax is currently supported)
	 * @param {String} opts.sortOrder Sort order
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsContacts",value:function getExternalcontactsContacts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/contacts','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'q':opts['q'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a schema
	 * 
	 * @param {String} schemaId Schema ID
	 */},{key:"getExternalcontactsContactsSchema",value:function getExternalcontactsContactsSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsContactsSchema';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas/{schemaId}','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific version of a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {String} versionId Schema version
	 */},{key:"getExternalcontactsContactsSchemaVersion",value:function getExternalcontactsContactsSchemaVersion(schemaId,versionId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsContactsSchemaVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getExternalcontactsContactsSchemaVersion';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas/{schemaId}/versions/{versionId}','GET',{'schemaId':schemaId,'versionId':versionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of an external contact's schema
	 * 
	 * @param {String} schemaId Schema ID
	 */},{key:"getExternalcontactsContactsSchemaVersions",value:function getExternalcontactsContactsSchemaVersions(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsContactsSchemaVersions';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas/{schemaId}/versions','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of schemas.
	 * 
	 */},{key:"getExternalcontactsContactsSchemas",value:function getExternalcontactsContactsSchemas(){return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand which fields, if any, to expand (externalDataSources)
	 * @param {Boolean} opts.includeTrustors (true or false) whether or not to include trustor information embedded in the externalOrganization
	 */},{key:"getExternalcontactsOrganization",value:function getExternalcontactsOrganization(externalOrganizationId,opts){opts=opts||{};// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling getExternalcontactsOrganization';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}','GET',{'externalOrganizationId':externalOrganizationId},{'expand':opts['expand'],'includeTrustors':opts['includeTrustors']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search for external contacts in an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {String} opts.q User supplied search keywords (no special syntax is currently supported)
	 * @param {String} opts.sortOrder Sort order
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsOrganizationContacts",value:function getExternalcontactsOrganizationContacts(externalOrganizationId,opts){opts=opts||{};// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling getExternalcontactsOrganizationContacts';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/contacts','GET',{'externalOrganizationId':externalOrganizationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'q':opts['q'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a note for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization Id
	 * @param {String} noteId Note Id
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsOrganizationNote",value:function getExternalcontactsOrganizationNote(externalOrganizationId,noteId,opts){opts=opts||{};// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling getExternalcontactsOrganizationNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling getExternalcontactsOrganizationNote';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/notes/{noteId}','GET',{'externalOrganizationId':externalOrganizationId,'noteId':noteId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List notes for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {String} opts.sortOrder Sort order
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsOrganizationNotes",value:function getExternalcontactsOrganizationNotes(externalOrganizationId,opts){opts=opts||{};// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling getExternalcontactsOrganizationNotes';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/notes','GET',{'externalOrganizationId':externalOrganizationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a relationship for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {Object} opts.expand which fields, if any, to expand
	 * @param {String} opts.sortOrder Sort order
	 */},{key:"getExternalcontactsOrganizationRelationships",value:function getExternalcontactsOrganizationRelationships(externalOrganizationId,opts){opts=opts||{};// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling getExternalcontactsOrganizationRelationships';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/relationships','GET',{'externalOrganizationId':externalOrganizationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search for external organizations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 20)
	 * @param {Number} opts.pageNumber Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (default to 1)
	 * @param {String} opts.q Search query
	 * @param {Array.<String>} opts.trustorId Search for external organizations by trustorIds (limit 25). If supplied, the 'q' parameters is ignored. Items are returned in the order requested
	 * @param {String} opts.sortOrder Sort order
	 * @param {Array.<String>} opts.expand which fields, if any, to expand
	 * @param {Boolean} opts.includeTrustors (true or false) whether or not to include trustor information embedded in the externalOrganization
	 */},{key:"getExternalcontactsOrganizations",value:function getExternalcontactsOrganizations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/organizations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'q':opts['q'],'trustorId':this.apiClient.buildCollectionParam(opts['trustorId'],'multi'),'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'includeTrustors':opts['includeTrustors']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a schema
	 * 
	 * @param {String} schemaId Schema ID
	 */},{key:"getExternalcontactsOrganizationsSchema",value:function getExternalcontactsOrganizationsSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsOrganizationsSchema';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas/{schemaId}','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific version of a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {String} versionId Schema version
	 */},{key:"getExternalcontactsOrganizationsSchemaVersion",value:function getExternalcontactsOrganizationsSchemaVersion(schemaId,versionId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsOrganizationsSchemaVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getExternalcontactsOrganizationsSchemaVersion';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas/{schemaId}/versions/{versionId}','GET',{'schemaId':schemaId,'versionId':versionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of an external organization's schema
	 * 
	 * @param {String} schemaId Schema ID
	 */},{key:"getExternalcontactsOrganizationsSchemaVersions",value:function getExternalcontactsOrganizationsSchemaVersions(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getExternalcontactsOrganizationsSchemaVersions';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas/{schemaId}/versions','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of schemas.
	 * 
	 */},{key:"getExternalcontactsOrganizationsSchemas",value:function getExternalcontactsOrganizationsSchemas(){return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a relationship
	 * 
	 * @param {String} relationshipId Relationship Id
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand which fields, if any, to expand
	 */},{key:"getExternalcontactsRelationship",value:function getExternalcontactsRelationship(relationshipId,opts){opts=opts||{};// verify the required parameter 'relationshipId' is set
if(relationshipId===undefined||relationshipId===null){throw'Missing the required parameter "relationshipId" when calling getExternalcontactsRelationship';}return this.apiClient.callApi('/api/v2/externalcontacts/relationships/{relationshipId}','GET',{'relationshipId':relationshipId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned.
	 * 
	 * @param {String} lookupVal User supplied value to lookup contacts/externalOrganizations (supports email addresses, e164 phone numbers, Twitter screen names)
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand which field, if any, to expand
	 */},{key:"getExternalcontactsReversewhitepageslookup",value:function getExternalcontactsReversewhitepageslookup(lookupVal,opts){opts=opts||{};// verify the required parameter 'lookupVal' is set
if(lookupVal===undefined||lookupVal===null){throw'Missing the required parameter "lookupVal" when calling getExternalcontactsReversewhitepageslookup';}return this.apiClient.callApi('/api/v2/externalcontacts/reversewhitepageslookup','GET',{},{'lookupVal':lookupVal,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Scan for external contacts using paging
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.limit The number of contacts per page; must be between 10 and 200, default is 100)
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
	 */},{key:"getExternalcontactsScanContacts",value:function getExternalcontactsScanContacts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/scan/contacts','GET',{},{'limit':opts['limit'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Scan for notes using paging
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.limit The number of notes per page; must be between 10 and 200, default is 100)
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
	 */},{key:"getExternalcontactsScanNotes",value:function getExternalcontactsScanNotes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/scan/notes','GET',{},{'limit':opts['limit'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Scan for external organizations using paging
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.limit The number of organizations per page; must be between 10 and 200, default is 100)
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
	 */},{key:"getExternalcontactsScanOrganizations",value:function getExternalcontactsScanOrganizations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/scan/organizations','GET',{},{'limit':opts['limit'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Scan for relationships
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.limit The number of relationships per page; must be between 10 and 200, default is 100)
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
	 */},{key:"getExternalcontactsScanRelationships",value:function getExternalcontactsScanRelationships(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/externalcontacts/scan/relationships','GET',{},{'limit':opts['limit'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Claim or release identifiers for a contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} body ClaimRequest
	 */},{key:"patchExternalcontactsContactIdentifiers",value:function patchExternalcontactsContactIdentifiers(contactId,body){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling patchExternalcontactsContactIdentifiers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchExternalcontactsContactIdentifiers';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/identifiers','PATCH',{'contactId':contactId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk fetch contacts
	 * 
	 * @param {Object} body Contact ids
	 */},{key:"postExternalcontactsBulkContacts",value:function postExternalcontactsBulkContacts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkContacts';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/contacts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add contacts
	 * 
	 * @param {Object} body Contacts
	 */},{key:"postExternalcontactsBulkContactsAdd",value:function postExternalcontactsBulkContactsAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkContactsAdd';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/contacts/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove contacts
	 * 
	 * @param {Object} body Contact ids
	 */},{key:"postExternalcontactsBulkContactsRemove",value:function postExternalcontactsBulkContactsRemove(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkContactsRemove';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/contacts/remove','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk fetch unresolved ancestor contacts
	 * 
	 * @param {Object} body Contact ids
	 */},{key:"postExternalcontactsBulkContactsUnresolved",value:function postExternalcontactsBulkContactsUnresolved(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkContactsUnresolved';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/contacts/unresolved','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update contacts
	 * 
	 * @param {Object} body Contacts
	 */},{key:"postExternalcontactsBulkContactsUpdate",value:function postExternalcontactsBulkContactsUpdate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkContactsUpdate';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/contacts/update','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk fetch notes
	 * 
	 * @param {Object} body Note ids
	 */},{key:"postExternalcontactsBulkNotes",value:function postExternalcontactsBulkNotes(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkNotes';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/notes','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add notes
	 * 
	 * @param {Object} body Notes
	 */},{key:"postExternalcontactsBulkNotesAdd",value:function postExternalcontactsBulkNotesAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkNotesAdd';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/notes/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove notes
	 * 
	 * @param {Object} body Note ids
	 */},{key:"postExternalcontactsBulkNotesRemove",value:function postExternalcontactsBulkNotesRemove(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkNotesRemove';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/notes/remove','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update notes
	 * 
	 * @param {Object} body Notes
	 */},{key:"postExternalcontactsBulkNotesUpdate",value:function postExternalcontactsBulkNotesUpdate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkNotesUpdate';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/notes/update','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk fetch organizations
	 * 
	 * @param {Object} body Organizations ids
	 */},{key:"postExternalcontactsBulkOrganizations",value:function postExternalcontactsBulkOrganizations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkOrganizations';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/organizations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add organizations
	 * 
	 * @param {Object} body Organizations
	 */},{key:"postExternalcontactsBulkOrganizationsAdd",value:function postExternalcontactsBulkOrganizationsAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkOrganizationsAdd';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/organizations/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove organizations
	 * 
	 * @param {Object} body Organization ids
	 */},{key:"postExternalcontactsBulkOrganizationsRemove",value:function postExternalcontactsBulkOrganizationsRemove(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkOrganizationsRemove';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/organizations/remove','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update organizations
	 * 
	 * @param {Object} body Organizations
	 */},{key:"postExternalcontactsBulkOrganizationsUpdate",value:function postExternalcontactsBulkOrganizationsUpdate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkOrganizationsUpdate';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/organizations/update','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk fetch relationships
	 * 
	 * @param {Object} body Relationships ids
	 */},{key:"postExternalcontactsBulkRelationships",value:function postExternalcontactsBulkRelationships(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkRelationships';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/relationships','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add relationships
	 * 
	 * @param {Object} body Relationships
	 */},{key:"postExternalcontactsBulkRelationshipsAdd",value:function postExternalcontactsBulkRelationshipsAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkRelationshipsAdd';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/relationships/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove relationships
	 * 
	 * @param {Object} body Relationships ids
	 */},{key:"postExternalcontactsBulkRelationshipsRemove",value:function postExternalcontactsBulkRelationshipsRemove(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkRelationshipsRemove';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/relationships/remove','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update relationships
	 * 
	 * @param {Object} body Relationships
	 */},{key:"postExternalcontactsBulkRelationshipsUpdate",value:function postExternalcontactsBulkRelationshipsUpdate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsBulkRelationshipsUpdate';}return this.apiClient.callApi('/api/v2/externalcontacts/bulk/relationships/update','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a note for an external contact
	 * 
	 * @param {String} contactId ExternalContact Id
	 * @param {Object} body ExternalContact
	 */},{key:"postExternalcontactsContactNotes",value:function postExternalcontactsContactNotes(contactId,body){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling postExternalcontactsContactNotes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsContactNotes';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/notes','POST',{'contactId':contactId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Promote an observed contact (ephemeral or identified) to a curated contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 */},{key:"postExternalcontactsContactPromotion",value:function postExternalcontactsContactPromotion(contactId){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling postExternalcontactsContactPromotion';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/promotion','POST',{'contactId':contactId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an external contact
	 * 
	 * @param {Object} body ExternalContact
	 */},{key:"postExternalcontactsContacts",value:function postExternalcontactsContacts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsContacts';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a schema
	 * 
	 * @param {Object} body Schema
	 */},{key:"postExternalcontactsContactsSchemas",value:function postExternalcontactsContactsSchemas(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsContactsSchemas';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a contact using an identifier type and value.
	 * Phone number identifier values must be provided with the country code and a leading + symbol. Example: "+1 704 298 4733"
	 * @param {Object} identifier 
	 */},{key:"postExternalcontactsIdentifierlookup",value:function postExternalcontactsIdentifierlookup(identifier){// verify the required parameter 'identifier' is set
if(identifier===undefined||identifier===null){throw'Missing the required parameter "identifier" when calling postExternalcontactsIdentifierlookup';}return this.apiClient.callApi('/api/v2/externalcontacts/identifierlookup','POST',{},{},{},{},identifier,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Merge two contacts into a new contact record
	 * Two curated contacts cannot be merged. Refer to the Contact Merging article on the Developer Center for details
	 * @param {Object} body MergeRequest
	 */},{key:"postExternalcontactsMergeContacts",value:function postExternalcontactsMergeContacts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsMergeContacts';}return this.apiClient.callApi('/api/v2/externalcontacts/merge/contacts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a note for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization Id
	 * @param {Object} body ExternalContact
	 */},{key:"postExternalcontactsOrganizationNotes",value:function postExternalcontactsOrganizationNotes(externalOrganizationId,body){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling postExternalcontactsOrganizationNotes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsOrganizationNotes';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/notes','POST',{'externalOrganizationId':externalOrganizationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an external organization
	 * 
	 * @param {Object} body ExternalOrganization
	 */},{key:"postExternalcontactsOrganizations",value:function postExternalcontactsOrganizations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsOrganizations';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a schema
	 * 
	 * @param {Object} body Schema
	 */},{key:"postExternalcontactsOrganizationsSchemas",value:function postExternalcontactsOrganizationsSchemas(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsOrganizationsSchemas';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a relationship
	 * 
	 * @param {Object} body Relationship
	 */},{key:"postExternalcontactsRelationships",value:function postExternalcontactsRelationships(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postExternalcontactsRelationships';}return this.apiClient.callApi('/api/v2/externalcontacts/relationships','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an external contact
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} body ExternalContact
	 */},{key:"putExternalcontactsContact",value:function putExternalcontactsContact(contactId,body){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling putExternalcontactsContact';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsContact';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}','PUT',{'contactId':contactId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a note for an external contact
	 * 
	 * @param {String} contactId ExternalContact Id
	 * @param {String} noteId Note Id
	 * @param {Object} body Note
	 */},{key:"putExternalcontactsContactNote",value:function putExternalcontactsContactNote(contactId,noteId,body){// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling putExternalcontactsContactNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling putExternalcontactsContactNote';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsContactNote';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}','PUT',{'contactId':contactId,'noteId':noteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {Object} body Data Schema
	 */},{key:"putExternalcontactsContactsSchema",value:function putExternalcontactsContactsSchema(schemaId,body){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling putExternalcontactsContactsSchema';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsContactsSchema';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/schemas/{schemaId}','PUT',{'schemaId':schemaId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Associate/disassociate an external contact with a conversation
	 * To associate, supply a value for the externalContactId.  To disassociate, do not include the property at all.
	 * @param {String} conversationId Conversation ID
	 * @param {Object} body ConversationAssociation
	 */},{key:"putExternalcontactsConversation",value:function putExternalcontactsConversation(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putExternalcontactsConversation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsConversation';}return this.apiClient.callApi('/api/v2/externalcontacts/conversations/{conversationId}','PUT',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 * @param {Object} body ExternalOrganization
	 */},{key:"putExternalcontactsOrganization",value:function putExternalcontactsOrganization(externalOrganizationId,body){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling putExternalcontactsOrganization';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsOrganization';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}','PUT',{'externalOrganizationId':externalOrganizationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a note for an external organization
	 * 
	 * @param {String} externalOrganizationId External Organization Id
	 * @param {String} noteId Note Id
	 * @param {Object} body Note
	 */},{key:"putExternalcontactsOrganizationNote",value:function putExternalcontactsOrganizationNote(externalOrganizationId,noteId,body){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling putExternalcontactsOrganizationNote';}// verify the required parameter 'noteId' is set
if(noteId===undefined||noteId===null){throw'Missing the required parameter "noteId" when calling putExternalcontactsOrganizationNote';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsOrganizationNote';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/notes/{noteId}','PUT',{'externalOrganizationId':externalOrganizationId,'noteId':noteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Links a Trustor with an External Organization
	 * 
	 * @param {String} externalOrganizationId External Organization ID
	 * @param {String} trustorId Trustor ID
	 */},{key:"putExternalcontactsOrganizationTrustorTrustorId",value:function putExternalcontactsOrganizationTrustorTrustorId(externalOrganizationId,trustorId){// verify the required parameter 'externalOrganizationId' is set
if(externalOrganizationId===undefined||externalOrganizationId===null){throw'Missing the required parameter "externalOrganizationId" when calling putExternalcontactsOrganizationTrustorTrustorId';}// verify the required parameter 'trustorId' is set
if(trustorId===undefined||trustorId===null){throw'Missing the required parameter "trustorId" when calling putExternalcontactsOrganizationTrustorTrustorId';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/{externalOrganizationId}/trustor/{trustorId}','PUT',{'externalOrganizationId':externalOrganizationId,'trustorId':trustorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {Object} body Data Schema
	 */},{key:"putExternalcontactsOrganizationsSchema",value:function putExternalcontactsOrganizationsSchema(schemaId,body){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling putExternalcontactsOrganizationsSchema';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsOrganizationsSchema';}return this.apiClient.callApi('/api/v2/externalcontacts/organizations/schemas/{schemaId}','PUT',{'schemaId':schemaId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a relationship
	 * 
	 * @param {String} relationshipId Relationship Id
	 * @param {Object} body Relationship
	 */},{key:"putExternalcontactsRelationship",value:function putExternalcontactsRelationship(relationshipId,body){// verify the required parameter 'relationshipId' is set
if(relationshipId===undefined||relationshipId===null){throw'Missing the required parameter "relationshipId" when calling putExternalcontactsRelationship';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putExternalcontactsRelationship';}return this.apiClient.callApi('/api/v2/externalcontacts/relationships/{relationshipId}','PUT',{'relationshipId':relationshipId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ExternalContactsApi;}();var FaxApi=/*#__PURE__*/function(){/**
	 * Fax service.
	 * @module purecloud-platform-client-v2/api/FaxApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new FaxApi. 
	 * @alias module:purecloud-platform-client-v2/api/FaxApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function FaxApi(apiClient){_classCallCheck(this,FaxApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a fax document.
	 * 
	 * @param {String} documentId Document ID
	 */_createClass(FaxApi,[{key:"deleteFaxDocument",value:function deleteFaxDocument(documentId){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling deleteFaxDocument';}return this.apiClient.callApi('/api/v2/fax/documents/{documentId}','DELETE',{'documentId':documentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a document.
	 * 
	 * @param {String} documentId Document ID
	 */},{key:"getFaxDocument",value:function getFaxDocument(documentId){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getFaxDocument';}return this.apiClient.callApi('/api/v2/fax/documents/{documentId}','GET',{'documentId':documentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Download a fax document.
	 * 
	 * @param {String} documentId Document ID
	 */},{key:"getFaxDocumentContent",value:function getFaxDocumentContent(documentId){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getFaxDocumentContent';}return this.apiClient.callApi('/api/v2/fax/documents/{documentId}/content','GET',{'documentId':documentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of fax documents.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getFaxDocuments",value:function getFaxDocuments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/fax/documents','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get fax summary
	 * 
	 */},{key:"getFaxSummary",value:function getFaxSummary(){return this.apiClient.callApi('/api/v2/fax/summary','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a fax document.
	 * 
	 * @param {String} documentId Document ID
	 * @param {Object} body Document
	 */},{key:"putFaxDocument",value:function putFaxDocument(documentId,body){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling putFaxDocument';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putFaxDocument';}return this.apiClient.callApi('/api/v2/fax/documents/{documentId}','PUT',{'documentId':documentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return FaxApi;}();var FlowsApi=/*#__PURE__*/function(){/**
	 * Flows service.
	 * @module purecloud-platform-client-v2/api/FlowsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new FlowsApi. 
	 * @alias module:purecloud-platform-client-v2/api/FlowsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function FlowsApi(apiClient){_classCallCheck(this,FlowsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get status for async query for Flow aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsFlowsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */_createClass(FlowsApi,[{key:"getAnalyticsFlowsAggregatesJob",value:function getAnalyticsFlowsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsFlowsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsFlowsAggregatesJobResults",value:function getAnalyticsFlowsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsFlowsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsFlowsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowsActivityQuery",value:function postAnalyticsFlowsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsFlowsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsFlowsAggregatesJobs",value:function postAnalyticsFlowsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsFlowsAggregatesQuery",value:function postAnalyticsFlowsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for flow observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsFlowsObservationsQuery",value:function postAnalyticsFlowsObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsFlowsObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/flows/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return FlowsApi;}();var GamificationApi=/*#__PURE__*/function(){/**
	 * Gamification service.
	 * @module purecloud-platform-client-v2/api/GamificationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new GamificationApi. 
	 * @alias module:purecloud-platform-client-v2/api/GamificationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function GamificationApi(apiClient){_classCallCheck(this,GamificationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an External Metric Definition
	 * 
	 * @param {String} metricId Specifies the External Metric Definition ID
	 */_createClass(GamificationApi,[{key:"deleteEmployeeperformanceExternalmetricsDefinition",value:function deleteEmployeeperformanceExternalmetricsDefinition(metricId){// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling deleteEmployeeperformanceExternalmetricsDefinition';}return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/definitions/{metricId}','DELETE',{'metricId':metricId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an External Metric Definition
	 * 
	 * @param {String} metricId Specifies the External Metric Definition ID
	 */},{key:"getEmployeeperformanceExternalmetricsDefinition",value:function getEmployeeperformanceExternalmetricsDefinition(metricId){// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling getEmployeeperformanceExternalmetricsDefinition';}return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/definitions/{metricId}','GET',{'metricId':metricId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of External Metric Definitions of an organization, sorted by name in ascending order
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getEmployeeperformanceExternalmetricsDefinitions",value:function getEmployeeperformanceExternalmetricsDefinitions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/definitions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights summary
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortKey Sort key
	 * @param {String} opts.sortMetricId Sort Metric Id
	 * @param {Object} opts.sortOrder Sort order (default to asc)
	 * @param {String} opts.userIds A list of up to 100 comma-separated user Ids
	 */},{key:"getGamificationInsights",value:function getGamificationInsights(filterType,filterId,granularity,comparativePeriodStartWorkday,primaryPeriodStartWorkday,opts){opts=opts||{};// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsights';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsights';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsights';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsights';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsights';}return this.apiClient.callApi('/api/v2/gamification/insights','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday,'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortKey':opts['sortKey'],'sortMetricId':opts['sortMetricId'],'sortOrder':opts['sortOrder'],'userIds':opts['userIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights details for the current user
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsDetails",value:function getGamificationInsightsDetails(filterType,filterId,granularity,comparativePeriodStartWorkday,primaryPeriodStartWorkday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsDetails';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsDetails';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsDetails';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsDetails';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsDetails';}return this.apiClient.callApi('/api/v2/gamification/insights/details','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights overall trend for the current user
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} comparativePeriodEndWorkday The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodEndWorkday The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsGroupsTrends",value:function getGamificationInsightsGroupsTrends(filterType,filterId,granularity,comparativePeriodStartWorkday,comparativePeriodEndWorkday,primaryPeriodStartWorkday,primaryPeriodEndWorkday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'comparativePeriodEndWorkday' is set
if(comparativePeriodEndWorkday===undefined||comparativePeriodEndWorkday===null){throw'Missing the required parameter "comparativePeriodEndWorkday" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsGroupsTrends';}// verify the required parameter 'primaryPeriodEndWorkday' is set
if(primaryPeriodEndWorkday===undefined||primaryPeriodEndWorkday===null){throw'Missing the required parameter "primaryPeriodEndWorkday" when calling getGamificationInsightsGroupsTrends';}return this.apiClient.callApi('/api/v2/gamification/insights/groups/trends','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'comparativePeriodEndWorkday':comparativePeriodEndWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday,'primaryPeriodEndWorkday':primaryPeriodEndWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights overall trend
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} comparativePeriodEndWorkday The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodEndWorkday The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsGroupsTrendsAll",value:function getGamificationInsightsGroupsTrendsAll(filterType,filterId,granularity,comparativePeriodStartWorkday,comparativePeriodEndWorkday,primaryPeriodStartWorkday,primaryPeriodEndWorkday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'comparativePeriodEndWorkday' is set
if(comparativePeriodEndWorkday===undefined||comparativePeriodEndWorkday===null){throw'Missing the required parameter "comparativePeriodEndWorkday" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsGroupsTrendsAll';}// verify the required parameter 'primaryPeriodEndWorkday' is set
if(primaryPeriodEndWorkday===undefined||primaryPeriodEndWorkday===null){throw'Missing the required parameter "primaryPeriodEndWorkday" when calling getGamificationInsightsGroupsTrendsAll';}return this.apiClient.callApi('/api/v2/gamification/insights/groups/trends/all','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'comparativePeriodEndWorkday':comparativePeriodEndWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday,'primaryPeriodEndWorkday':primaryPeriodEndWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query users in a profile during a period of time
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} startWorkday The start work day. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsMembers",value:function getGamificationInsightsMembers(filterType,filterId,granularity,startWorkday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsMembers';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsMembers';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsMembers';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationInsightsMembers';}return this.apiClient.callApi('/api/v2/gamification/insights/members','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'startWorkday':startWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights user trend for the current user
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} comparativePeriodEndWorkday The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodEndWorkday The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsTrends",value:function getGamificationInsightsTrends(filterType,filterId,granularity,comparativePeriodStartWorkday,comparativePeriodEndWorkday,primaryPeriodStartWorkday,primaryPeriodEndWorkday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsTrends';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsTrends';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsTrends';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsTrends';}// verify the required parameter 'comparativePeriodEndWorkday' is set
if(comparativePeriodEndWorkday===undefined||comparativePeriodEndWorkday===null){throw'Missing the required parameter "comparativePeriodEndWorkday" when calling getGamificationInsightsTrends';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsTrends';}// verify the required parameter 'primaryPeriodEndWorkday' is set
if(primaryPeriodEndWorkday===undefined||primaryPeriodEndWorkday===null){throw'Missing the required parameter "primaryPeriodEndWorkday" when calling getGamificationInsightsTrends';}return this.apiClient.callApi('/api/v2/gamification/insights/trends','GET',{},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'comparativePeriodEndWorkday':comparativePeriodEndWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday,'primaryPeriodEndWorkday':primaryPeriodEndWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights details for the user
	 * 
	 * @param {String} userId The ID of a user.
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsUserDetails",value:function getGamificationInsightsUserDetails(userId,filterType,filterId,granularity,comparativePeriodStartWorkday,primaryPeriodStartWorkday){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationInsightsUserDetails';}// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsUserDetails';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsUserDetails';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsUserDetails';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsUserDetails';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsUserDetails';}return this.apiClient.callApi('/api/v2/gamification/insights/users/{userId}/details','GET',{'userId':userId},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get insights user trend for the user
	 * 
	 * @param {String} userId The ID of a user.
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {Object} granularity Granularity
	 * @param {String} comparativePeriodStartWorkday The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} comparativePeriodEndWorkday The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodStartWorkday The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} primaryPeriodEndWorkday The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationInsightsUserTrends",value:function getGamificationInsightsUserTrends(userId,filterType,filterId,granularity,comparativePeriodStartWorkday,comparativePeriodEndWorkday,primaryPeriodStartWorkday,primaryPeriodEndWorkday){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'granularity' is set
if(granularity===undefined||granularity===null){throw'Missing the required parameter "granularity" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'comparativePeriodStartWorkday' is set
if(comparativePeriodStartWorkday===undefined||comparativePeriodStartWorkday===null){throw'Missing the required parameter "comparativePeriodStartWorkday" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'comparativePeriodEndWorkday' is set
if(comparativePeriodEndWorkday===undefined||comparativePeriodEndWorkday===null){throw'Missing the required parameter "comparativePeriodEndWorkday" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'primaryPeriodStartWorkday' is set
if(primaryPeriodStartWorkday===undefined||primaryPeriodStartWorkday===null){throw'Missing the required parameter "primaryPeriodStartWorkday" when calling getGamificationInsightsUserTrends';}// verify the required parameter 'primaryPeriodEndWorkday' is set
if(primaryPeriodEndWorkday===undefined||primaryPeriodEndWorkday===null){throw'Missing the required parameter "primaryPeriodEndWorkday" when calling getGamificationInsightsUserTrends';}return this.apiClient.callApi('/api/v2/gamification/insights/users/{userId}/trends','GET',{'userId':userId},{'filterType':filterType,'filterId':filterId,'granularity':granularity,'comparativePeriodStartWorkday':comparativePeriodStartWorkday,'comparativePeriodEndWorkday':comparativePeriodEndWorkday,'primaryPeriodStartWorkday':primaryPeriodStartWorkday,'primaryPeriodEndWorkday':primaryPeriodEndWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Leaderboard of the requesting user's division or performance profile
	 * 
	 * @param {String} startWorkday Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.metricId Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given.
	 */},{key:"getGamificationLeaderboard",value:function getGamificationLeaderboard(startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationLeaderboard';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationLeaderboard';}return this.apiClient.callApi('/api/v2/gamification/leaderboard','GET',{},{'startWorkday':startWorkday,'endWorkday':endWorkday,'metricId':opts['metricId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Leaderboard by filter type
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type. For example, division or performance profile Id
	 * @param {String} startWorkday Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.metricId Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given.
	 */},{key:"getGamificationLeaderboardAll",value:function getGamificationLeaderboardAll(filterType,filterId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationLeaderboardAll';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationLeaderboardAll';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationLeaderboardAll';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationLeaderboardAll';}return this.apiClient.callApi('/api/v2/gamification/leaderboard/all','GET',{},{'filterType':filterType,'filterId':filterId,'startWorkday':startWorkday,'endWorkday':endWorkday,'metricId':opts['metricId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Best Points by division or performance profile
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type. For example, division or performance profile Id
	 */},{key:"getGamificationLeaderboardAllBestpoints",value:function getGamificationLeaderboardAllBestpoints(filterType,filterId){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationLeaderboardAllBestpoints';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationLeaderboardAllBestpoints';}return this.apiClient.callApi('/api/v2/gamification/leaderboard/all/bestpoints','GET',{},{'filterType':filterType,'filterId':filterId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Best Points of the requesting user's current performance profile or division
	 * 
	 */},{key:"getGamificationLeaderboardBestpoints",value:function getGamificationLeaderboardBestpoints(){return this.apiClient.callApi('/api/v2/gamification/leaderboard/bestpoints','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Metric definition by id
	 * 
	 * @param {String} metricDefinitionId metric definition id
	 */},{key:"getGamificationMetricdefinition",value:function getGamificationMetricdefinition(metricDefinitionId){// verify the required parameter 'metricDefinitionId' is set
if(metricDefinitionId===undefined||metricDefinitionId===null){throw'Missing the required parameter "metricDefinitionId" when calling getGamificationMetricdefinition';}return this.apiClient.callApi('/api/v2/gamification/metricdefinitions/{metricDefinitionId}','GET',{'metricDefinitionId':metricDefinitionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All metric definitions
	 * Retrieves the metric definitions and their corresponding default objectives used to create a gamified metric
	 */},{key:"getGamificationMetricdefinitions",value:function getGamificationMetricdefinitions(){return this.apiClient.callApi('/api/v2/gamification/metricdefinitions','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Performance profile by id
	 * 
	 * @param {String} profileId performanceProfileId
	 */},{key:"getGamificationProfile",value:function getGamificationProfile(profileId){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationProfile';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}','GET',{'profileId':profileId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Members of a given performance profile
	 * 
	 * @param {String} profileId Profile Id
	 */},{key:"getGamificationProfileMembers",value:function getGamificationProfileMembers(profileId){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationProfileMembers';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/members','GET',{'profileId':profileId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Performance profile gamified metric by id
	 * 
	 * @param {String} profileId Performance Profile Id
	 * @param {String} metricId Metric Id
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.workday The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationProfileMetric",value:function getGamificationProfileMetric(profileId,metricId,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationProfileMetric';}// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling getGamificationProfileMetric';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/metrics/{metricId}','GET',{'profileId':profileId,'metricId':metricId},{'workday':opts['workday']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All gamified metrics for a given performance profile
	 * 
	 * @param {String} profileId Performance Profile Id
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {String} opts.workday The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.metricIds List of metric ids to filter the response (Optional, comma-separated).
	 */},{key:"getGamificationProfileMetrics",value:function getGamificationProfileMetrics(profileId,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationProfileMetrics';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/metrics','GET',{'profileId':profileId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'workday':opts['workday'],'metricIds':opts['metricIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All metrics for a given performance profile with objective details such as order and maxPoints
	 * 
	 * @param {String} profileId Performance Profile Id
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.workday The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationProfileMetricsObjectivedetails",value:function getGamificationProfileMetricsObjectivedetails(profileId,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationProfileMetricsObjectivedetails';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/metrics/objectivedetails','GET',{'profileId':profileId},{'workday':opts['workday']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All performance profiles
	 * 
	 */},{key:"getGamificationProfiles",value:function getGamificationProfiles(){return this.apiClient.callApi('/api/v2/gamification/profiles','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Performance profile of a user
	 * 
	 * @param {String} userId 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.workday Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationProfilesUser",value:function getGamificationProfilesUser(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationProfilesUser';}return this.apiClient.callApi('/api/v2/gamification/profiles/users/{userId}','GET',{'userId':userId},{'workday':opts['workday']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Performance profile of the requesting user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.workday Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationProfilesUsersMe",value:function getGamificationProfilesUsersMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/gamification/profiles/users/me','GET',{},{'workday':opts['workday']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Workday performance metrics of the requesting user
	 * 
	 * @param {String} workday Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getGamificationScorecards",value:function getGamificationScorecards(workday,opts){opts=opts||{};// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecards';}return this.apiClient.callApi('/api/v2/gamification/scorecards','GET',{},{'workday':workday,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Attendance status metrics of the requesting user
	 * 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsAttendance",value:function getGamificationScorecardsAttendance(startWorkday,endWorkday){// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsAttendance';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsAttendance';}return this.apiClient.callApi('/api/v2/gamification/scorecards/attendance','GET',{},{'startWorkday':startWorkday,'endWorkday':endWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Best points of the requesting user
	 * 
	 */},{key:"getGamificationScorecardsBestpoints",value:function getGamificationScorecardsBestpoints(){return this.apiClient.callApi('/api/v2/gamification/scorecards/bestpoints','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All-time points of the requesting user
	 * 
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsPointsAlltime",value:function getGamificationScorecardsPointsAlltime(endWorkday){// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsPointsAlltime';}return this.apiClient.callApi('/api/v2/gamification/scorecards/points/alltime','GET',{},{'endWorkday':endWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Average points of the requesting user's division or performance profile
	 * 
	 * @param {String} workday The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsPointsAverage",value:function getGamificationScorecardsPointsAverage(workday){// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecardsPointsAverage';}return this.apiClient.callApi('/api/v2/gamification/scorecards/points/average','GET',{},{'workday':workday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Points trends of the requesting user
	 * 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.dayOfWeek Optional filter to specify which day of weeks to be included in the response
	 */},{key:"getGamificationScorecardsPointsTrends",value:function getGamificationScorecardsPointsTrends(startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsPointsTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsPointsTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/points/trends','GET',{},{'startWorkday':startWorkday,'endWorkday':endWorkday,'dayOfWeek':opts['dayOfWeek']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Average performance values trends by metric of a user
	 * 
	 * @param {String} profileId performanceProfileId
	 * @param {String} metricId metricId
	 * @param {String} userId 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.referenceWorkday Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsProfileMetricUserValuesTrends",value:function getGamificationScorecardsProfileMetricUserValuesTrends(profileId,metricId,userId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationScorecardsProfileMetricUserValuesTrends';}// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling getGamificationScorecardsProfileMetricUserValuesTrends';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsProfileMetricUserValuesTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsProfileMetricUserValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsProfileMetricUserValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/profiles/{profileId}/metrics/{metricId}/users/{userId}/values/trends','GET',{'profileId':profileId,'metricId':metricId,'userId':userId},{'startWorkday':startWorkday,'endWorkday':endWorkday,'referenceWorkday':opts['referenceWorkday'],'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Average performance values trends by metric of a division or a performance profile
	 * 
	 * @param {String} profileId performanceProfileId
	 * @param {String} metricId metricId
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.filterId ID for the filter type. Only required when filterType is Division.
	 * @param {String} opts.referenceWorkday Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsProfileMetricUsersValuesTrends",value:function getGamificationScorecardsProfileMetricUsersValuesTrends(profileId,metricId,filterType,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationScorecardsProfileMetricUsersValuesTrends';}// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling getGamificationScorecardsProfileMetricUsersValuesTrends';}// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationScorecardsProfileMetricUsersValuesTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsProfileMetricUsersValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsProfileMetricUsersValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/profiles/{profileId}/metrics/{metricId}/users/values/trends','GET',{'profileId':profileId,'metricId':metricId},{'filterType':filterType,'filterId':opts['filterId'],'startWorkday':startWorkday,'endWorkday':endWorkday,'referenceWorkday':opts['referenceWorkday'],'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Average performance values trends by metric of the requesting user
	 * 
	 * @param {String} profileId performanceProfileId
	 * @param {String} metricId metricId
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.filterType Filter type for the query request. If not set, returns the values trends of the requesting user
	 * @param {String} opts.referenceWorkday Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsProfileMetricValuesTrends",value:function getGamificationScorecardsProfileMetricValuesTrends(profileId,metricId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling getGamificationScorecardsProfileMetricValuesTrends';}// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling getGamificationScorecardsProfileMetricValuesTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsProfileMetricValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsProfileMetricValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/profiles/{profileId}/metrics/{metricId}/values/trends','GET',{'profileId':profileId,'metricId':metricId},{'filterType':opts['filterType'],'startWorkday':startWorkday,'endWorkday':endWorkday,'referenceWorkday':opts['referenceWorkday'],'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Workday performance metrics for a user
	 * 
	 * @param {String} userId 
	 * @param {String} workday Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getGamificationScorecardsUser",value:function getGamificationScorecardsUser(userId,workday,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUser';}// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecardsUser';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}','GET',{'userId':userId},{'workday':workday,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Attendance status metrics for a user
	 * 
	 * @param {String} userId 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsUserAttendance",value:function getGamificationScorecardsUserAttendance(userId,startWorkday,endWorkday){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUserAttendance';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsUserAttendance';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsUserAttendance';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}/attendance','GET',{'userId':userId},{'startWorkday':startWorkday,'endWorkday':endWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Best points of a user
	 * 
	 * @param {String} userId 
	 */},{key:"getGamificationScorecardsUserBestpoints",value:function getGamificationScorecardsUserBestpoints(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUserBestpoints';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}/bestpoints','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All-time points for a user
	 * 
	 * @param {String} userId 
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsUserPointsAlltime",value:function getGamificationScorecardsUserPointsAlltime(userId,endWorkday){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUserPointsAlltime';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsUserPointsAlltime';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}/points/alltime','GET',{'userId':userId},{'endWorkday':endWorkday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Points trend for a user
	 * 
	 * @param {String} userId 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.dayOfWeek Optional filter to specify which day of weeks to be included in the response
	 */},{key:"getGamificationScorecardsUserPointsTrends",value:function getGamificationScorecardsUserPointsTrends(userId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUserPointsTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsUserPointsTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsUserPointsTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}/points/trends','GET',{'userId':userId},{'startWorkday':startWorkday,'endWorkday':endWorkday,'dayOfWeek':opts['dayOfWeek']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Values trends of a user
	 * 
	 * @param {String} userId 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsUserValuesTrends",value:function getGamificationScorecardsUserValuesTrends(userId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getGamificationScorecardsUserValuesTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsUserValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsUserValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/{userId}/values/trends','GET',{'userId':userId},{'startWorkday':startWorkday,'endWorkday':endWorkday,'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Workday average points by target group
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {String} workday The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getGamificationScorecardsUsersPointsAverage",value:function getGamificationScorecardsUsersPointsAverage(filterType,filterId,workday){// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationScorecardsUsersPointsAverage';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationScorecardsUsersPointsAverage';}// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecardsUsersPointsAverage';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/points/average','GET',{},{'filterType':filterType,'filterId':filterId,'workday':workday},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Workday average values by target group
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type. For example, division Id
	 * @param {String} workday The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsUsersValuesAverage",value:function getGamificationScorecardsUsersValuesAverage(filterType,filterId,workday,opts){opts=opts||{};// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationScorecardsUsersValuesAverage';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationScorecardsUsersValuesAverage';}// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecardsUsersValuesAverage';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/values/average','GET',{},{'filterType':filterType,'filterId':filterId,'workday':workday,'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Values trend by target group
	 * 
	 * @param {Object} filterType Filter type for the query request.
	 * @param {String} filterId ID for the filter type.
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsUsersValuesTrends",value:function getGamificationScorecardsUsersValuesTrends(filterType,filterId,startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'filterType' is set
if(filterType===undefined||filterType===null){throw'Missing the required parameter "filterType" when calling getGamificationScorecardsUsersValuesTrends';}// verify the required parameter 'filterId' is set
if(filterId===undefined||filterId===null){throw'Missing the required parameter "filterId" when calling getGamificationScorecardsUsersValuesTrends';}// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsUsersValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsUsersValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/users/values/trends','GET',{},{'filterType':filterType,'filterId':filterId,'startWorkday':startWorkday,'endWorkday':endWorkday,'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Average values of the requesting user's division or performance profile
	 * 
	 * @param {String} workday The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsValuesAverage",value:function getGamificationScorecardsValuesAverage(workday,opts){opts=opts||{};// verify the required parameter 'workday' is set
if(workday===undefined||workday===null){throw'Missing the required parameter "workday" when calling getGamificationScorecardsValuesAverage';}return this.apiClient.callApi('/api/v2/gamification/scorecards/values/average','GET',{},{'workday':workday,'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Values trends of the requesting user or group
	 * 
	 * @param {String} startWorkday Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} endWorkday End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.filterType Filter type for the query request. If not set, then the request is for the requesting user.
	 * @param {String} opts.referenceWorkday Reference workday for the trend. Used to determine the profile of the user as of this date. If not set, then the user's current profile will be used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.timeZone Timezone for the workday. Defaults to UTC (default to UTC)
	 */},{key:"getGamificationScorecardsValuesTrends",value:function getGamificationScorecardsValuesTrends(startWorkday,endWorkday,opts){opts=opts||{};// verify the required parameter 'startWorkday' is set
if(startWorkday===undefined||startWorkday===null){throw'Missing the required parameter "startWorkday" when calling getGamificationScorecardsValuesTrends';}// verify the required parameter 'endWorkday' is set
if(endWorkday===undefined||endWorkday===null){throw'Missing the required parameter "endWorkday" when calling getGamificationScorecardsValuesTrends';}return this.apiClient.callApi('/api/v2/gamification/scorecards/values/trends','GET',{},{'filterType':opts['filterType'],'referenceWorkday':opts['referenceWorkday'],'startWorkday':startWorkday,'endWorkday':endWorkday,'timeZone':opts['timeZone']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gamification activation status
	 * 
	 */},{key:"getGamificationStatus",value:function getGamificationStatus(){return this.apiClient.callApi('/api/v2/gamification/status','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Objective template by id
	 * 
	 * @param {String} templateId template id
	 */},{key:"getGamificationTemplate",value:function getGamificationTemplate(templateId){// verify the required parameter 'templateId' is set
if(templateId===undefined||templateId===null){throw'Missing the required parameter "templateId" when calling getGamificationTemplate';}return this.apiClient.callApi('/api/v2/gamification/templates/{templateId}','GET',{'templateId':templateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * All objective templates
	 * 
	 */},{key:"getGamificationTemplates",value:function getGamificationTemplates(){return this.apiClient.callApi('/api/v2/gamification/templates','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update External Metric Definition
	 * 
	 * @param {String} metricId Specifies the metric definition ID
	 * @param {Object} body The External Metric Definition parameters to be updated
	 */},{key:"patchEmployeeperformanceExternalmetricsDefinition",value:function patchEmployeeperformanceExternalmetricsDefinition(metricId,body){// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling patchEmployeeperformanceExternalmetricsDefinition';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchEmployeeperformanceExternalmetricsDefinition';}return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/definitions/{metricId}','PATCH',{'metricId':metricId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Write External Metric Data
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The External Metric Data to be added
	 */},{key:"postEmployeeperformanceExternalmetricsData",value:function postEmployeeperformanceExternalmetricsData(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/data','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create External Metric Definition
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The External Metric Definition to be created
	 */},{key:"postEmployeeperformanceExternalmetricsDefinitions",value:function postEmployeeperformanceExternalmetricsDefinitions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/employeeperformance/externalmetrics/definitions','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Activate a performance profile
	 * 
	 * @param {String} profileId performanceProfileId
	 */},{key:"postGamificationProfileActivate",value:function postGamificationProfileActivate(profileId){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling postGamificationProfileActivate';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/activate','POST',{'profileId':profileId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deactivate a performance profile
	 * 
	 * @param {String} profileId performanceProfileId
	 */},{key:"postGamificationProfileDeactivate",value:function postGamificationProfileDeactivate(profileId){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling postGamificationProfileDeactivate';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/deactivate','POST',{'profileId':profileId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Assign members to a given performance profile
	 * 
	 * @param {String} profileId Profile Id
	 * @param {Object} body assignUsers
	 */},{key:"postGamificationProfileMembers",value:function postGamificationProfileMembers(profileId,body){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling postGamificationProfileMembers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfileMembers';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/members','POST',{'profileId':profileId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validate member assignment
	 * 
	 * @param {String} profileId Profile Id
	 * @param {Object} body memberAssignments
	 */},{key:"postGamificationProfileMembersValidate",value:function postGamificationProfileMembersValidate(profileId,body){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling postGamificationProfileMembersValidate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfileMembersValidate';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/members/validate','POST',{'profileId':profileId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a linked metric
	 * 
	 * @param {String} sourceProfileId Source Performance Profile Id
	 * @param {String} sourceMetricId Source Metric Id
	 * @param {Object} body linkedMetric
	 */},{key:"postGamificationProfileMetricLink",value:function postGamificationProfileMetricLink(sourceProfileId,sourceMetricId,body){// verify the required parameter 'sourceProfileId' is set
if(sourceProfileId===undefined||sourceProfileId===null){throw'Missing the required parameter "sourceProfileId" when calling postGamificationProfileMetricLink';}// verify the required parameter 'sourceMetricId' is set
if(sourceMetricId===undefined||sourceMetricId===null){throw'Missing the required parameter "sourceMetricId" when calling postGamificationProfileMetricLink';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfileMetricLink';}return this.apiClient.callApi('/api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link','POST',{'sourceProfileId':sourceProfileId,'sourceMetricId':sourceMetricId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a gamified metric with a given metric definition and metric objective under in a performance profile
	 * 
	 * @param {String} profileId Performance Profile Id
	 * @param {Object} body Metric
	 */},{key:"postGamificationProfileMetrics",value:function postGamificationProfileMetrics(profileId,body){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling postGamificationProfileMetrics';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfileMetrics';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/metrics','POST',{'profileId':profileId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new custom performance profile
	 * 
	 * @param {Object} body performanceProfile
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.copyMetrics Flag to copy metrics. If set to false, there will be no metrics associated with the new profile. If set to true or is absent (the default behavior), all metrics from the default profile will be copied over into the new profile. (default to true)
	 */},{key:"postGamificationProfiles",value:function postGamificationProfiles(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfiles';}return this.apiClient.callApi('/api/v2/gamification/profiles','POST',{},{'copyMetrics':opts['copyMetrics']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query performance profiles in date range for a user
	 * 
	 * @param {String} userId The ID of a user.
	 * @param {Object} body The date range of work day.
	 */},{key:"postGamificationProfilesUserQuery",value:function postGamificationProfilesUserQuery(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postGamificationProfilesUserQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfilesUserQuery';}return this.apiClient.callApi('/api/v2/gamification/profiles/users/{userId}/query','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query performance profiles in date range for the current user
	 * 
	 * @param {Object} body The date range of work day.
	 */},{key:"postGamificationProfilesUsersMeQuery",value:function postGamificationProfilesUsersMeQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGamificationProfilesUsersMeQuery';}return this.apiClient.callApi('/api/v2/gamification/profiles/users/me/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a performance profile
	 * 
	 * @param {String} profileId performanceProfileId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body performanceProfile
	 */},{key:"putGamificationProfile",value:function putGamificationProfile(profileId,opts){opts=opts||{};// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling putGamificationProfile';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}','PUT',{'profileId':profileId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a metric in performance profile
	 * 
	 * @param {String} profileId Performance Profile Id
	 * @param {String} metricId Metric Id
	 * @param {Object} body Metric
	 */},{key:"putGamificationProfileMetric",value:function putGamificationProfileMetric(profileId,metricId,body){// verify the required parameter 'profileId' is set
if(profileId===undefined||profileId===null){throw'Missing the required parameter "profileId" when calling putGamificationProfileMetric';}// verify the required parameter 'metricId' is set
if(metricId===undefined||metricId===null){throw'Missing the required parameter "metricId" when calling putGamificationProfileMetric';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putGamificationProfileMetric';}return this.apiClient.callApi('/api/v2/gamification/profiles/{profileId}/metrics/{metricId}','PUT',{'profileId':profileId,'metricId':metricId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update gamification activation status
	 * 
	 * @param {Object} status Gamification status
	 */},{key:"putGamificationStatus",value:function putGamificationStatus(status){// verify the required parameter 'status' is set
if(status===undefined||status===null){throw'Missing the required parameter "status" when calling putGamificationStatus';}return this.apiClient.callApi('/api/v2/gamification/status','PUT',{},{},{},{},status,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return GamificationApi;}();var GeneralDataProtectionRegulationApi=/*#__PURE__*/function(){/**
	 * GeneralDataProtectionRegulation service.
	 * @module purecloud-platform-client-v2/api/GeneralDataProtectionRegulationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new GeneralDataProtectionRegulationApi. 
	 * @alias module:purecloud-platform-client-v2/api/GeneralDataProtectionRegulationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function GeneralDataProtectionRegulationApi(apiClient){_classCallCheck(this,GeneralDataProtectionRegulationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get an existing GDPR request
	 * 
	 * @param {String} requestId Request id
	 */_createClass(GeneralDataProtectionRegulationApi,[{key:"getGdprRequest",value:function getGdprRequest(requestId){// verify the required parameter 'requestId' is set
if(requestId===undefined||requestId===null){throw'Missing the required parameter "requestId" when calling getGdprRequest';}return this.apiClient.callApi('/api/v2/gdpr/requests/{requestId}','GET',{'requestId':requestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all GDPR requests
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getGdprRequests",value:function getGdprRequests(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/gdpr/requests','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get GDPR subjects
	 * 
	 * @param {Object} searchType Search Type
	 * @param {String} searchValue Search Value
	 */},{key:"getGdprSubjects",value:function getGdprSubjects(searchType,searchValue){// verify the required parameter 'searchType' is set
if(searchType===undefined||searchType===null){throw'Missing the required parameter "searchType" when calling getGdprSubjects';}// verify the required parameter 'searchValue' is set
if(searchValue===undefined||searchValue===null){throw'Missing the required parameter "searchValue" when calling getGdprSubjects';}return this.apiClient.callApi('/api/v2/gdpr/subjects','GET',{},{'searchType':searchType,'searchValue':searchValue},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Submit a new GDPR request
	 * 
	 * @param {Object} body GDPR request
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.deleteConfirmed Confirm delete (default to false)
	 */},{key:"postGdprRequests",value:function postGdprRequests(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGdprRequests';}return this.apiClient.callApi('/api/v2/gdpr/requests','POST',{},{'deleteConfirmed':opts['deleteConfirmed']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return GeneralDataProtectionRegulationApi;}();var GeolocationApi=/*#__PURE__*/function(){/**
	 * Geolocation service.
	 * @module purecloud-platform-client-v2/api/GeolocationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new GeolocationApi. 
	 * @alias module:purecloud-platform-client-v2/api/GeolocationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function GeolocationApi(apiClient){_classCallCheck(this,GeolocationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get a organization's GeolocationSettings
	 * 
	 */_createClass(GeolocationApi,[{key:"getGeolocationsSettings",value:function getGeolocationsSettings(){return this.apiClient.callApi('/api/v2/geolocations/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's Geolocation
	 * 
	 * @param {String} userId user Id
	 * @param {String} clientId client Id
	 */},{key:"getUserGeolocation",value:function getUserGeolocation(userId,clientId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserGeolocation';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getUserGeolocation';}return this.apiClient.callApi('/api/v2/users/{userId}/geolocations/{clientId}','GET',{'userId':userId,'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a organization's GeolocationSettings
	 * 
	 * @param {Object} body Geolocation settings
	 */},{key:"patchGeolocationsSettings",value:function patchGeolocationsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchGeolocationsSettings';}return this.apiClient.callApi('/api/v2/geolocations/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a user's Geolocation
	 * The geolocation object can be patched one of three ways. Option 1: Set the primary property to true. This will set the client as the users primary geolocation source.  Option 2: Provide the latitude and longitude values.  This will enqueue an asynchronous update of the city, region, and country, generating a notification. A subsequent GET operation will include the new values for city, region and country.  Option 3:  Provide the city, region, country values.  Option 1 can be combined with Option 2 or Option 3.  For example, update the client as primary and provide latitude and longitude values.
	 * @param {String} userId user Id
	 * @param {String} clientId client Id
	 * @param {Object} body Geolocation
	 */},{key:"patchUserGeolocation",value:function patchUserGeolocation(userId,clientId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserGeolocation';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling patchUserGeolocation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserGeolocation';}return this.apiClient.callApi('/api/v2/users/{userId}/geolocations/{clientId}','PATCH',{'userId':userId,'clientId':clientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return GeolocationApi;}();var GreetingsApi=/*#__PURE__*/function(){/**
	 * Greetings service.
	 * @module purecloud-platform-client-v2/api/GreetingsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new GreetingsApi. 
	 * @alias module:purecloud-platform-client-v2/api/GreetingsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function GreetingsApi(apiClient){_classCallCheck(this,GreetingsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Deletes a Greeting with the given GreetingId
	 * 
	 * @param {String} greetingId Greeting ID
	 */_createClass(GreetingsApi,[{key:"deleteGreeting",value:function deleteGreeting(greetingId){// verify the required parameter 'greetingId' is set
if(greetingId===undefined||greetingId===null){throw'Missing the required parameter "greetingId" when calling deleteGreeting';}return this.apiClient.callApi('/api/v2/greetings/{greetingId}','DELETE',{'greetingId':greetingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Greeting with the given GreetingId
	 * 
	 * @param {String} greetingId Greeting ID
	 */},{key:"getGreeting",value:function getGreeting(greetingId){// verify the required parameter 'greetingId' is set
if(greetingId===undefined||greetingId===null){throw'Missing the required parameter "greetingId" when calling getGreeting';}return this.apiClient.callApi('/api/v2/greetings/{greetingId}','GET',{'greetingId':greetingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get media playback URI for this greeting
	 * 
	 * @param {String} greetingId Greeting ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.formatId The desired media format. (default to WAV)
	 */},{key:"getGreetingMedia",value:function getGreetingMedia(greetingId,opts){opts=opts||{};// verify the required parameter 'greetingId' is set
if(greetingId===undefined||greetingId===null){throw'Missing the required parameter "greetingId" when calling getGreetingMedia';}return this.apiClient.callApi('/api/v2/greetings/{greetingId}/media','GET',{'greetingId':greetingId},{'formatId':opts['formatId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets an Organization's Greetings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getGreetings",value:function getGreetings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/greetings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Organization's DefaultGreetingList
	 * 
	 */},{key:"getGreetingsDefaults",value:function getGreetingsDefaults(){return this.apiClient.callApi('/api/v2/greetings/defaults','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of the Group's Greetings
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getGroupGreetings",value:function getGroupGreetings(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupGreetings';}return this.apiClient.callApi('/api/v2/groups/{groupId}/greetings','GET',{'groupId':groupId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Grabs the list of Default Greetings given a Group's ID
	 * 
	 * @param {String} groupId Group ID
	 */},{key:"getGroupGreetingsDefaults",value:function getGroupGreetingsDefaults(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupGreetingsDefaults';}return this.apiClient.callApi('/api/v2/groups/{groupId}/greetings/defaults','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of the User's Greetings
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getUserGreetings",value:function getUserGreetings(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserGreetings';}return this.apiClient.callApi('/api/v2/users/{userId}/greetings','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Grabs the list of Default Greetings given a User's ID
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserGreetingsDefaults",value:function getUserGreetingsDefaults(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserGreetingsDefaults';}return this.apiClient.callApi('/api/v2/users/{userId}/greetings/defaults','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Greeting for an Organization
	 * 
	 * @param {Object} body The Greeting to create
	 */},{key:"postGreetings",value:function postGreetings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGreetings';}return this.apiClient.callApi('/api/v2/greetings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a Greeting for a Group
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} body The Greeting to create
	 */},{key:"postGroupGreetings",value:function postGroupGreetings(groupId,body){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling postGroupGreetings';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroupGreetings';}return this.apiClient.callApi('/api/v2/groups/{groupId}/greetings','POST',{'groupId':groupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a Greeting for a User
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body The Greeting to create
	 */},{key:"postUserGreetings",value:function postUserGreetings(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserGreetings';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserGreetings';}return this.apiClient.callApi('/api/v2/users/{userId}/greetings','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the Greeting with the given GreetingId
	 * 
	 * @param {String} greetingId Greeting ID
	 * @param {Object} body The updated Greeting
	 */},{key:"putGreeting",value:function putGreeting(greetingId,body){// verify the required parameter 'greetingId' is set
if(greetingId===undefined||greetingId===null){throw'Missing the required parameter "greetingId" when calling putGreeting';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putGreeting';}return this.apiClient.callApi('/api/v2/greetings/{greetingId}','PUT',{'greetingId':greetingId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an Organization's DefaultGreetingList
	 * 
	 * @param {Object} body The updated defaultGreetingList
	 */},{key:"putGreetingsDefaults",value:function putGreetingsDefaults(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putGreetingsDefaults';}return this.apiClient.callApi('/api/v2/greetings/defaults','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the DefaultGreetingList of the specified Group
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} body The updated defaultGreetingList
	 */},{key:"putGroupGreetingsDefaults",value:function putGroupGreetingsDefaults(groupId,body){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling putGroupGreetingsDefaults';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putGroupGreetingsDefaults';}return this.apiClient.callApi('/api/v2/groups/{groupId}/greetings/defaults','PUT',{'groupId':groupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the DefaultGreetingList of the specified User
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body The updated defaultGreetingList
	 */},{key:"putUserGreetingsDefaults",value:function putUserGreetingsDefaults(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserGreetingsDefaults';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserGreetingsDefaults';}return this.apiClient.callApi('/api/v2/users/{userId}/greetings/defaults','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return GreetingsApi;}();var GroupsApi=/*#__PURE__*/function(){/**
	 * Groups service.
	 * @module purecloud-platform-client-v2/api/GroupsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new GroupsApi. 
	 * @alias module:purecloud-platform-client-v2/api/GroupsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function GroupsApi(apiClient){_classCallCheck(this,GroupsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete group
	 * 
	 * @param {String} groupId Group ID
	 */_createClass(GroupsApi,[{key:"deleteGroup",value:function deleteGroup(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling deleteGroup';}return this.apiClient.callApi('/api/v2/groups/{groupId}','DELETE',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove dynamic group definition
	 * 
	 * @param {String} groupId Group ID
	 * deleteGroupDynamicsettings is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteGroupDynamicsettings",value:function deleteGroupDynamicsettings(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling deleteGroupDynamicsettings';}return this.apiClient.callApi('/api/v2/groups/{groupId}/dynamicsettings','DELETE',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove members
	 * 
	 * @param {String} groupId Group ID
	 * @param {String} ids Comma separated list of userIds to remove
	 */},{key:"deleteGroupMembers",value:function deleteGroupMembers(groupId,ids){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling deleteGroupMembers';}// verify the required parameter 'ids' is set
if(ids===undefined||ids===null){throw'Missing the required parameter "ids" when calling deleteGroupMembers';}return this.apiClient.callApi('/api/v2/groups/{groupId}/members','DELETE',{'groupId':groupId},{'ids':ids},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch field config for an entity type
	 * 
	 * @param {Object} type Field type
	 * @deprecated
	 */},{key:"getFieldconfig",value:function getFieldconfig(type){// verify the required parameter 'type' is set
if(type===undefined||type===null){throw'Missing the required parameter "type" when calling getFieldconfig';}return this.apiClient.callApi('/api/v2/fieldconfig','GET',{},{'type':type},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get group
	 * 
	 * @param {String} groupId Group ID
	 */},{key:"getGroup",value:function getGroup(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroup';}return this.apiClient.callApi('/api/v2/groups/{groupId}','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dynamic group definition
	 * 
	 * @param {String} groupId Group ID
	 * getGroupDynamicsettings is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getGroupDynamicsettings",value:function getGroupDynamicsettings(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupDynamicsettings';}return this.apiClient.callApi('/api/v2/groups/{groupId}/dynamicsettings','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all individuals associated with the group
	 * 
	 * @param {String} groupId Group ID
	 */},{key:"getGroupIndividuals",value:function getGroupIndividuals(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupIndividuals';}return this.apiClient.callApi('/api/v2/groups/{groupId}/individuals','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get group members, includes individuals, owners, and dynamically included people
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getGroupMembers",value:function getGroupMembers(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupMembers';}return this.apiClient.callApi('/api/v2/groups/{groupId}/members','GET',{'groupId':groupId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get group profile
	 * This api is deprecated. Use /api/v2/groups instead
	 * @param {String} groupId groupId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.fields Comma separated fields to return.  Allowable values can be found by querying /api/v2/fieldconfig?type=group and using the key for the elements returned by the fieldList
	 * @deprecated
	 */},{key:"getGroupProfile",value:function getGroupProfile(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getGroupProfile';}return this.apiClient.callApi('/api/v2/groups/{groupId}/profile','GET',{'groupId':groupId},{'fields':opts['fields']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a group list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id id
	 * @param {Array.<String>} opts.jabberId A list of jabberIds to fetch by bulk (cannot be used with the id parameter)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 */},{key:"getGroups",value:function getGroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/groups','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'jabberId':this.apiClient.buildCollectionParam(opts['jabberId'],'multi'),'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search groups using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 */},{key:"getGroupsSearch",value:function getGroupsSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getGroupsSearch';}return this.apiClient.callApi('/api/v2/groups/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get group profile listing
	 * This api is deprecated. Use /api/v2/groups instead.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id id
	 * @param {Array.<String>} opts.jabberId A list of jabberIds to fetch by bulk (cannot be used with the id parameter)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @deprecated
	 */},{key:"getProfilesGroups",value:function getProfilesGroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/profiles/groups','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'jabberId':this.apiClient.buildCollectionParam(opts['jabberId'],'multi'),'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add members
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} body Add members
	 */},{key:"postGroupMembers",value:function postGroupMembers(groupId,body){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling postGroupMembers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroupMembers';}return this.apiClient.callApi('/api/v2/groups/{groupId}/members','POST',{'groupId':groupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a group
	 * 
	 * @param {Object} body Group
	 */},{key:"postGroups",value:function postGroups(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroups';}return this.apiClient.callApi('/api/v2/groups','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Preview the number of users selected for a dynamic group definition query
	 * 
	 * @param {Object} body Group query to preview
	 * @deprecated
	 * postGroupsDynamicsettingsPreview is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postGroupsDynamicsettingsPreview",value:function postGroupsDynamicsettingsPreview(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroupsDynamicsettingsPreview';}return this.apiClient.callApi('/api/v2/groups/dynamicsettings/preview','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search groups
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postGroupsSearch",value:function postGroupsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroupsSearch';}return this.apiClient.callApi('/api/v2/groups/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update group
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Group
	 */},{key:"putGroup",value:function putGroup(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling putGroup';}return this.apiClient.callApi('/api/v2/groups/{groupId}','PUT',{'groupId':groupId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create / Update dynamic group definition
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} body Create/Update dynamic groups
	 * putGroupDynamicsettings is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"putGroupDynamicsettings",value:function putGroupDynamicsettings(groupId,body){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling putGroupDynamicsettings';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putGroupDynamicsettings';}return this.apiClient.callApi('/api/v2/groups/{groupId}/dynamicsettings','PUT',{'groupId':groupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return GroupsApi;}();var IdentityProviderApi=/*#__PURE__*/function(){/**
	 * IdentityProvider service.
	 * @module purecloud-platform-client-v2/api/IdentityProviderApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new IdentityProviderApi. 
	 * @alias module:purecloud-platform-client-v2/api/IdentityProviderApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function IdentityProviderApi(apiClient){_classCallCheck(this,IdentityProviderApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete ADFS Identity Provider
	 * 
	 */_createClass(IdentityProviderApi,[{key:"deleteIdentityprovidersAdfs",value:function deleteIdentityprovidersAdfs(){return this.apiClient.callApi('/api/v2/identityproviders/adfs','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Customer Interaction Center (CIC) Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersCic",value:function deleteIdentityprovidersCic(){return this.apiClient.callApi('/api/v2/identityproviders/cic','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Generic SAML Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersGeneric",value:function deleteIdentityprovidersGeneric(){return this.apiClient.callApi('/api/v2/identityproviders/generic','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete G Suite Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersGsuite",value:function deleteIdentityprovidersGsuite(){return this.apiClient.callApi('/api/v2/identityproviders/gsuite','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete IdentityNow Provider
	 * 
	 */},{key:"deleteIdentityprovidersIdentitynow",value:function deleteIdentityprovidersIdentitynow(){return this.apiClient.callApi('/api/v2/identityproviders/identitynow','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Okta Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersOkta",value:function deleteIdentityprovidersOkta(){return this.apiClient.callApi('/api/v2/identityproviders/okta','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete OneLogin Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersOnelogin",value:function deleteIdentityprovidersOnelogin(){return this.apiClient.callApi('/api/v2/identityproviders/onelogin','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Ping Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersPing",value:function deleteIdentityprovidersPing(){return this.apiClient.callApi('/api/v2/identityproviders/ping','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete PureCloud Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersPurecloud",value:function deleteIdentityprovidersPurecloud(){return this.apiClient.callApi('/api/v2/identityproviders/purecloud','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete PureEngage Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersPureengage",value:function deleteIdentityprovidersPureengage(){return this.apiClient.callApi('/api/v2/identityproviders/pureengage','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Salesforce Identity Provider
	 * 
	 */},{key:"deleteIdentityprovidersSalesforce",value:function deleteIdentityprovidersSalesforce(){return this.apiClient.callApi('/api/v2/identityproviders/salesforce','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of identity providers
	 * 
	 */},{key:"getIdentityproviders",value:function getIdentityproviders(){return this.apiClient.callApi('/api/v2/identityproviders','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get ADFS Identity Provider
	 * 
	 */},{key:"getIdentityprovidersAdfs",value:function getIdentityprovidersAdfs(){return this.apiClient.callApi('/api/v2/identityproviders/adfs','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Customer Interaction Center (CIC) Identity Provider
	 * 
	 */},{key:"getIdentityprovidersCic",value:function getIdentityprovidersCic(){return this.apiClient.callApi('/api/v2/identityproviders/cic','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Generic SAML Identity Provider
	 * 
	 */},{key:"getIdentityprovidersGeneric",value:function getIdentityprovidersGeneric(){return this.apiClient.callApi('/api/v2/identityproviders/generic','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get G Suite Identity Provider
	 * 
	 */},{key:"getIdentityprovidersGsuite",value:function getIdentityprovidersGsuite(){return this.apiClient.callApi('/api/v2/identityproviders/gsuite','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get IdentityNow Provider
	 * 
	 */},{key:"getIdentityprovidersIdentitynow",value:function getIdentityprovidersIdentitynow(){return this.apiClient.callApi('/api/v2/identityproviders/identitynow','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Okta Identity Provider
	 * 
	 */},{key:"getIdentityprovidersOkta",value:function getIdentityprovidersOkta(){return this.apiClient.callApi('/api/v2/identityproviders/okta','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get OneLogin Identity Provider
	 * 
	 */},{key:"getIdentityprovidersOnelogin",value:function getIdentityprovidersOnelogin(){return this.apiClient.callApi('/api/v2/identityproviders/onelogin','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Ping Identity Provider
	 * 
	 */},{key:"getIdentityprovidersPing",value:function getIdentityprovidersPing(){return this.apiClient.callApi('/api/v2/identityproviders/ping','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get PureCloud Identity Provider
	 * 
	 */},{key:"getIdentityprovidersPurecloud",value:function getIdentityprovidersPurecloud(){return this.apiClient.callApi('/api/v2/identityproviders/purecloud','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get PureEngage Identity Provider
	 * 
	 */},{key:"getIdentityprovidersPureengage",value:function getIdentityprovidersPureengage(){return this.apiClient.callApi('/api/v2/identityproviders/pureengage','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Salesforce Identity Provider
	 * 
	 */},{key:"getIdentityprovidersSalesforce",value:function getIdentityprovidersSalesforce(){return this.apiClient.callApi('/api/v2/identityproviders/salesforce','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create ADFS Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersAdfs",value:function putIdentityprovidersAdfs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersAdfs';}return this.apiClient.callApi('/api/v2/identityproviders/adfs','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create Customer Interaction Center (CIC) Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersCic",value:function putIdentityprovidersCic(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersCic';}return this.apiClient.callApi('/api/v2/identityproviders/cic','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create Generic SAML Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersGeneric",value:function putIdentityprovidersGeneric(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersGeneric';}return this.apiClient.callApi('/api/v2/identityproviders/generic','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create G Suite Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersGsuite",value:function putIdentityprovidersGsuite(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersGsuite';}return this.apiClient.callApi('/api/v2/identityproviders/gsuite','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create IdentityNow Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersIdentitynow",value:function putIdentityprovidersIdentitynow(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersIdentitynow';}return this.apiClient.callApi('/api/v2/identityproviders/identitynow','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create Okta Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersOkta",value:function putIdentityprovidersOkta(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersOkta';}return this.apiClient.callApi('/api/v2/identityproviders/okta','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create OneLogin Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersOnelogin",value:function putIdentityprovidersOnelogin(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersOnelogin';}return this.apiClient.callApi('/api/v2/identityproviders/onelogin','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create Ping Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersPing",value:function putIdentityprovidersPing(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersPing';}return this.apiClient.callApi('/api/v2/identityproviders/ping','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create PureCloud Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersPurecloud",value:function putIdentityprovidersPurecloud(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersPurecloud';}return this.apiClient.callApi('/api/v2/identityproviders/purecloud','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create PureEngage Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersPureengage",value:function putIdentityprovidersPureengage(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersPureengage';}return this.apiClient.callApi('/api/v2/identityproviders/pureengage','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update/Create Salesforce Identity Provider
	 * 
	 * @param {Object} body Provider
	 */},{key:"putIdentityprovidersSalesforce",value:function putIdentityprovidersSalesforce(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIdentityprovidersSalesforce';}return this.apiClient.callApi('/api/v2/identityproviders/salesforce','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return IdentityProviderApi;}();var InfrastructureAsCodeApi=/*#__PURE__*/function(){/**
	 * InfrastructureAsCode service.
	 * @module purecloud-platform-client-v2/api/InfrastructureAsCodeApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new InfrastructureAsCodeApi. 
	 * @alias module:purecloud-platform-client-v2/api/InfrastructureAsCodeApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function InfrastructureAsCodeApi(apiClient){_classCallCheck(this,InfrastructureAsCodeApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get information about an accelerator
	 * Get the complete metadata specification for an accelerator, including requirements and parameters.
	 * @param {String} acceleratorId Accelerator ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.preferredLanguage Preferred Language (default to en-US)
	 */_createClass(InfrastructureAsCodeApi,[{key:"getInfrastructureascodeAccelerator",value:function getInfrastructureascodeAccelerator(acceleratorId,opts){opts=opts||{};// verify the required parameter 'acceleratorId' is set
if(acceleratorId===undefined||acceleratorId===null){throw'Missing the required parameter "acceleratorId" when calling getInfrastructureascodeAccelerator';}return this.apiClient.callApi('/api/v2/infrastructureascode/accelerators/{acceleratorId}','GET',{'acceleratorId':acceleratorId},{'preferredLanguage':opts['preferredLanguage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of available accelerators
	 * Search for accelerators that can be run.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Object} opts.sortOrder Sort order (default to asc)
	 * @param {String} opts.name Filter by name
	 * @param {String} opts.description Filter by description
	 * @param {Object} opts.origin Filter by origin
	 * @param {Object} opts.type Filter by type
	 * @param {String} opts.classification Filter by classification
	 * @param {String} opts.tags Filter by tags
	 */},{key:"getInfrastructureascodeAccelerators",value:function getInfrastructureascodeAccelerators(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/infrastructureascode/accelerators','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'description':opts['description'],'origin':opts['origin'],'type':opts['type'],'classification':opts['classification'],'tags':opts['tags']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get job status and results
	 * Get the execution status of a submitted job, optionally including results and error details.
	 * @param {String} jobId Job ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.details Include details of execution, including job results or error information (default to false)
	 */},{key:"getInfrastructureascodeJob",value:function getInfrastructureascodeJob(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getInfrastructureascodeJob';}return this.apiClient.callApi('/api/v2/infrastructureascode/jobs/{jobId}','GET',{'jobId':jobId},{'details':opts['details']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get job history
	 * Get a history of submitted jobs, optionally including error messages.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.maxResults Number of jobs to show (default to 1)
	 * @param {Boolean} opts.includeErrors Include error messages (default to false)
	 * @param {Object} opts.sortBy Sort by (default to dateSubmitted)
	 * @param {Object} opts.sortOrder Sort order (default to desc)
	 * @param {String} opts.acceleratorId Find only jobs associated with this accelerator
	 * @param {String} opts.submittedBy Find only jobs submitted by this user
	 * @param {Object} opts.status Find only jobs in this state
	 */},{key:"getInfrastructureascodeJobs",value:function getInfrastructureascodeJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/infrastructureascode/jobs','GET',{},{'maxResults':opts['maxResults'],'includeErrors':opts['includeErrors'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'acceleratorId':opts['acceleratorId'],'submittedBy':opts['submittedBy'],'status':opts['status']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Job
	 * Create and submit a job for remote execution or see job planning results.
	 * @param {Object} body 
	 */},{key:"postInfrastructureascodeJobs",value:function postInfrastructureascodeJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postInfrastructureascodeJobs';}return this.apiClient.callApi('/api/v2/infrastructureascode/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return InfrastructureAsCodeApi;}();var IntegrationsApi=/*#__PURE__*/function(){/**
	 * Integrations service.
	 * @module purecloud-platform-client-v2/api/IntegrationsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new IntegrationsApi. 
	 * @alias module:purecloud-platform-client-v2/api/IntegrationsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function IntegrationsApi(apiClient){_classCallCheck(this,IntegrationsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete integration.
	 * 
	 * @param {String} integrationId Integration Id
	 */_createClass(IntegrationsApi,[{key:"deleteIntegration",value:function deleteIntegration(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling deleteIntegration';}return this.apiClient.callApi('/api/v2/integrations/{integrationId}','DELETE',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an Action
	 * 
	 * @param {String} actionId actionId
	 */},{key:"deleteIntegrationsAction",value:function deleteIntegrationsAction(actionId){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling deleteIntegrationsAction';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}','DELETE',{'actionId':actionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Draft
	 * 
	 * @param {String} actionId actionId
	 */},{key:"deleteIntegrationsActionDraft",value:function deleteIntegrationsActionDraft(actionId){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling deleteIntegrationsActionDraft';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft','DELETE',{'actionId':actionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a set of credentials
	 * 
	 * @param {String} credentialId Credential ID
	 */},{key:"deleteIntegrationsCredential",value:function deleteIntegrationsCredential(credentialId){// verify the required parameter 'credentialId' is set
if(credentialId===undefined||credentialId===null){throw'Missing the required parameter "credentialId" when calling deleteIntegrationsCredential';}return this.apiClient.callApi('/api/v2/integrations/credentials/{credentialId}','DELETE',{'credentialId':credentialId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get integration.
	 * 
	 * @param {String} integrationId Integration Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getIntegration",value:function getIntegration(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegration';}return this.apiClient.callApi('/api/v2/integrations/{integrationId}','GET',{'integrationId':integrationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get integration configuration.
	 * 
	 * @param {String} integrationId Integration Id
	 */},{key:"getIntegrationConfigCurrent",value:function getIntegrationConfigCurrent(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegrationConfigCurrent';}return this.apiClient.callApi('/api/v2/integrations/{integrationId}/config/current','GET',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List integrations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getIntegrations",value:function getIntegrations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves a single Action matching id.
	 * 
	 * @param {String} actionId actionId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Indicates a field in the response which should be expanded.
	 * @param {Object} opts.includeConfig Return config in response. (default to false)
	 */},{key:"getIntegrationsAction",value:function getIntegrationsAction(actionId,opts){opts=opts||{};// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsAction';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}','GET',{'actionId':actionId},{'expand':opts['expand'],'includeConfig':opts['includeConfig']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a Draft
	 * 
	 * @param {String} actionId actionId
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Indicates a field in the response which should be expanded.
	 * @param {Object} opts.includeConfig Return config in response. (default to false)
	 */},{key:"getIntegrationsActionDraft",value:function getIntegrationsActionDraft(actionId,opts){opts=opts||{};// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionDraft';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft','GET',{'actionId':actionId},{'expand':opts['expand'],'includeConfig':opts['includeConfig']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve schema for a Draft based on filename.
	 * 
	 * @param {String} actionId actionId
	 * @param {String} fileName Name of schema file to be retrieved for this draft.
	 */},{key:"getIntegrationsActionDraftSchema",value:function getIntegrationsActionDraftSchema(actionId,fileName){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionDraftSchema';}// verify the required parameter 'fileName' is set
if(fileName===undefined||fileName===null){throw'Missing the required parameter "fileName" when calling getIntegrationsActionDraftSchema';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft/schemas/{fileName}','GET',{'actionId':actionId,'fileName':fileName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve templates for a Draft based on filename.
	 * 
	 * @param {String} actionId actionId
	 * @param {String} fileName Name of template file to be retrieved for this action draft.
	 */},{key:"getIntegrationsActionDraftTemplate",value:function getIntegrationsActionDraftTemplate(actionId,fileName){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionDraftTemplate';}// verify the required parameter 'fileName' is set
if(fileName===undefined||fileName===null){throw'Missing the required parameter "fileName" when calling getIntegrationsActionDraftTemplate';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft/templates/{fileName}','GET',{'actionId':actionId,'fileName':fileName},{},{},{},null,['PureCloud OAuth'],['application/json'],['text/plain']);}/**
	 * Validate current Draft configuration.
	 * 
	 * @param {String} actionId actionId
	 */},{key:"getIntegrationsActionDraftValidation",value:function getIntegrationsActionDraftValidation(actionId){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionDraftValidation';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft/validation','GET',{'actionId':actionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve schema for an action based on filename.
	 * 
	 * @param {String} actionId actionId
	 * @param {String} fileName Name of schema file to be retrieved for this action.
	 */},{key:"getIntegrationsActionSchema",value:function getIntegrationsActionSchema(actionId,fileName){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionSchema';}// verify the required parameter 'fileName' is set
if(fileName===undefined||fileName===null){throw'Missing the required parameter "fileName" when calling getIntegrationsActionSchema';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/schemas/{fileName}','GET',{'actionId':actionId,'fileName':fileName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve text of templates for an action based on filename.
	 * 
	 * @param {String} actionId actionId
	 * @param {String} fileName Name of template file to be retrieved for this action.
	 */},{key:"getIntegrationsActionTemplate",value:function getIntegrationsActionTemplate(actionId,fileName){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling getIntegrationsActionTemplate';}// verify the required parameter 'fileName' is set
if(fileName===undefined||fileName===null){throw'Missing the required parameter "fileName" when calling getIntegrationsActionTemplate';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/templates/{fileName}','GET',{'actionId':actionId,'fileName':fileName},{},{},{},null,['PureCloud OAuth'],['application/json'],['text/plain']);}/**
	 * Retrieves all actions associated with filters passed in via query param.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.sortBy Root level field name to sort on.
	 * @param {Object} opts.sortOrder Direction to sort 'sortBy' field. (default to asc)
	 * @param {String} opts.category Filter by category name.
	 * @param {String} opts.name Filter by partial or complete action name.
	 * @param {String} opts.ids Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids.
	 * @param {Object} opts.secure Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions.
	 * @param {Object} opts.includeAuthActions Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (default to false)
	 */},{key:"getIntegrationsActions",value:function getIntegrationsActions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/actions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'category':opts['category'],'name':opts['name'],'ids':opts['ids'],'secure':opts['secure'],'includeAuthActions':opts['includeAuthActions']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves all categories of available Actions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.sortBy Root level field name to sort on.  Only 'name' is supported on this endpoint.
	 * @param {Object} opts.sortOrder Direction to sort 'sortBy' field. (default to asc)
	 * @param {Object} opts.secure Filter to only include secure actions. True will only include actions marked secured. False will include only unsecure actions. Do not use filter if you want all Actions.
	 */},{key:"getIntegrationsActionsCategories",value:function getIntegrationsActionsCategories(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/actions/categories','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'secure':opts['secure']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves all action drafts associated with the filters passed in via query param.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.sortBy Root level field name to sort on.
	 * @param {Object} opts.sortOrder Direction to sort 'sortBy' field. (default to asc)
	 * @param {String} opts.category Filter by category name.
	 * @param {String} opts.name Filter by partial or complete action name.
	 * @param {String} opts.ids Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids.
	 * @param {Object} opts.secure Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions.
	 * @param {Object} opts.includeAuthActions Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (default to false)
	 */},{key:"getIntegrationsActionsDrafts",value:function getIntegrationsActionsDrafts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/actions/drafts','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'category':opts['category'],'name':opts['name'],'ids':opts['ids'],'secure':opts['secure'],'includeAuthActions':opts['includeAuthActions']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific botConnector bot, plus versions, for this integration
	 * 
	 * @param {String} integrationId The integration ID for this group of bots
	 * @param {String} botId The botID for this bot
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.version Specific Version
	 */},{key:"getIntegrationsBotconnectorIntegrationIdBot",value:function getIntegrationsBotconnectorIntegrationIdBot(integrationId,botId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegrationsBotconnectorIntegrationIdBot';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsBotconnectorIntegrationIdBot';}return this.apiClient.callApi('/api/v2/integrations/botconnector/{integrationId}/bots/{botId}','GET',{'integrationId':integrationId,'botId':botId},{'version':opts['version']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of bot versions for a bot
	 * 
	 * @param {String} integrationId The integration ID for this bot group
	 * @param {String} botId The botID for this bot
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getIntegrationsBotconnectorIntegrationIdBotVersions",value:function getIntegrationsBotconnectorIntegrationIdBotVersions(integrationId,botId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegrationsBotconnectorIntegrationIdBotVersions';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsBotconnectorIntegrationIdBotVersions';}return this.apiClient.callApi('/api/v2/integrations/botconnector/{integrationId}/bots/{botId}/versions','GET',{'integrationId':integrationId,'botId':botId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of botConnector bots for this integration
	 * 
	 * @param {String} integrationId The integration ID for this group of bots
	 */},{key:"getIntegrationsBotconnectorIntegrationIdBots",value:function getIntegrationsBotconnectorIntegrationIdBots(integrationId){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegrationsBotconnectorIntegrationIdBots';}return this.apiClient.callApi('/api/v2/integrations/botconnector/{integrationId}/bots','GET',{'integrationId':integrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a summary list of botConnector bots for this integration
	 * 
	 * @param {String} integrationId The integration ID for this group of bots
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getIntegrationsBotconnectorIntegrationIdBotsSummaries",value:function getIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling getIntegrationsBotconnectorIntegrationIdBotsSummaries';}return this.apiClient.callApi('/api/v2/integrations/botconnector/{integrationId}/bots/summaries','GET',{'integrationId':integrationId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List permitted client app integrations for the logged in user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getIntegrationsClientapps",value:function getIntegrationsClientapps(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/clientapps','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * UC integration client application configuration.
	 * This endpoint returns basic UI configuration data for all Unified Communications integrations client applications enabled for the current organization.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getIntegrationsClientappsUnifiedcommunications",value:function getIntegrationsClientappsUnifiedcommunications(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/clientapps/unifiedcommunications','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a single credential with sensitive fields redacted
	 * 
	 * @param {String} credentialId Credential ID
	 */},{key:"getIntegrationsCredential",value:function getIntegrationsCredential(credentialId){// verify the required parameter 'credentialId' is set
if(credentialId===undefined||credentialId===null){throw'Missing the required parameter "credentialId" when calling getIntegrationsCredential';}return this.apiClient.callApi('/api/v2/integrations/credentials/{credentialId}','GET',{'credentialId':credentialId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List multiple sets of credentials
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getIntegrationsCredentials",value:function getIntegrationsCredentials(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/credentials','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List all credential types
	 * 
	 */},{key:"getIntegrationsCredentialsTypes",value:function getIntegrationsCredentialsTypes(){return this.apiClient.callApi('/api/v2/integrations/credentials/types','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about a Dialogflow agent
	 * 
	 * @param {String} agentId The agent ID
	 */},{key:"getIntegrationsSpeechDialogflowAgent",value:function getIntegrationsSpeechDialogflowAgent(agentId){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getIntegrationsSpeechDialogflowAgent';}return this.apiClient.callApi('/api/v2/integrations/speech/dialogflow/agents/{agentId}','GET',{'agentId':agentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Dialogflow agents in the customers' Google accounts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.name Filter on agent name
	 */},{key:"getIntegrationsSpeechDialogflowAgents",value:function getIntegrationsSpeechDialogflowAgents(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/speech/dialogflow/agents','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about a Lex bot alias
	 * 
	 * @param {String} aliasId The alias ID
	 */},{key:"getIntegrationsSpeechLexBotAlias",value:function getIntegrationsSpeechLexBotAlias(aliasId){// verify the required parameter 'aliasId' is set
if(aliasId===undefined||aliasId===null){throw'Missing the required parameter "aliasId" when calling getIntegrationsSpeechLexBotAlias';}return this.apiClient.callApi('/api/v2/integrations/speech/lex/bot/alias/{aliasId}','GET',{'aliasId':aliasId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of aliases for a bot in the customer's AWS accounts
	 * 
	 * @param {String} botId The bot ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.status Filter on alias status
	 * @param {String} opts.name Filter on alias name
	 */},{key:"getIntegrationsSpeechLexBotBotIdAliases",value:function getIntegrationsSpeechLexBotBotIdAliases(botId,opts){opts=opts||{};// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsSpeechLexBotBotIdAliases';}return this.apiClient.callApi('/api/v2/integrations/speech/lex/bot/{botId}/aliases','GET',{'botId':botId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'status':opts['status'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Lex bots in the customers' AWS accounts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.name Filter on bot name
	 */},{key:"getIntegrationsSpeechLexBots",value:function getIntegrationsSpeechLexBots(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/speech/lex/bots','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Nuance bot in the specified Integration
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} botId The Nuance bot ID to get
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 * @param {Object} opts.targetChannel targetChannel
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBot is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBot",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBot(nuanceIntegrationId,botId,opts){opts=opts||{};// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBot';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBot';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}','GET',{'nuanceIntegrationId':nuanceIntegrationId,'botId':botId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'targetChannel':opts['targetChannel']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status of an asynchronous Nuance bot GET job
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} botId The Nuance bot ID
	 * @param {String} jobId The asynchronous job ID
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob(nuanceIntegrationId,botId,jobId){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJob';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}','GET',{'nuanceIntegrationId':nuanceIntegrationId,'botId':botId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the result of an asynchronous Nuance bot GET job
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} botId The Nuance bot ID
	 * @param {String} jobId The asynchronous job ID
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults(nuanceIntegrationId,botId,jobId){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}/results','GET',{'nuanceIntegrationId':nuanceIntegrationId,'botId':botId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Nuance bots available in the specified Integration
	 * If the onlyRegisteredBots param is set, the returned data will only include the Nuance bots which have configured client secrets within the Integration,  otherwise all of the Nuance bots available to the Integrations configured discovery credentials are returned.
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.onlyRegisteredBots Limit bots to the ones configured for Genesys Cloud usage (default to true)
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBots is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBots",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBots(nuanceIntegrationId,opts){opts=opts||{};// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBots';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots','GET',{'nuanceIntegrationId':nuanceIntegrationId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'onlyRegisteredBots':opts['onlyRegisteredBots']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status of an asynchronous Nuance bots GET job
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} jobId The asynchronous job ID
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob(nuanceIntegrationId,jobId){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}','GET',{'nuanceIntegrationId':nuanceIntegrationId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the result of an asynchronous Nuance bots GET job
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} jobId The asynchronous job ID
	 * getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults",value:function getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults(nuanceIntegrationId,jobId){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}/results','GET',{'nuanceIntegrationId':nuanceIntegrationId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about a TTS engine
	 * 
	 * @param {String} engineId The engine ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeVoices Include voices for the engine (default to false)
	 */},{key:"getIntegrationsSpeechTtsEngine",value:function getIntegrationsSpeechTtsEngine(engineId,opts){opts=opts||{};// verify the required parameter 'engineId' is set
if(engineId===undefined||engineId===null){throw'Missing the required parameter "engineId" when calling getIntegrationsSpeechTtsEngine';}return this.apiClient.callApi('/api/v2/integrations/speech/tts/engines/{engineId}','GET',{'engineId':engineId},{'includeVoices':opts['includeVoices']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about a specific voice for a TTS engine
	 * 
	 * @param {String} engineId The engine ID
	 * @param {String} voiceId The voice ID
	 */},{key:"getIntegrationsSpeechTtsEngineVoice",value:function getIntegrationsSpeechTtsEngineVoice(engineId,voiceId){// verify the required parameter 'engineId' is set
if(engineId===undefined||engineId===null){throw'Missing the required parameter "engineId" when calling getIntegrationsSpeechTtsEngineVoice';}// verify the required parameter 'voiceId' is set
if(voiceId===undefined||voiceId===null){throw'Missing the required parameter "voiceId" when calling getIntegrationsSpeechTtsEngineVoice';}return this.apiClient.callApi('/api/v2/integrations/speech/tts/engines/{engineId}/voices/{voiceId}','GET',{'engineId':engineId,'voiceId':voiceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of voices for a TTS engine
	 * 
	 * @param {String} engineId The engine ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getIntegrationsSpeechTtsEngineVoices",value:function getIntegrationsSpeechTtsEngineVoices(engineId,opts){opts=opts||{};// verify the required parameter 'engineId' is set
if(engineId===undefined||engineId===null){throw'Missing the required parameter "engineId" when calling getIntegrationsSpeechTtsEngineVoices';}return this.apiClient.callApi('/api/v2/integrations/speech/tts/engines/{engineId}/voices','GET',{'engineId':engineId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of TTS engines enabled for org
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.includeVoices Include voices for the engine (default to false)
	 * @param {String} opts.name Filter on engine name
	 * @param {String} opts.language Filter on supported language. If includeVoices=true then the voices are also filtered.
	 */},{key:"getIntegrationsSpeechTtsEngines",value:function getIntegrationsSpeechTtsEngines(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/speech/tts/engines','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'includeVoices':opts['includeVoices'],'name':opts['name'],'language':opts['language']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get TTS settings for an org
	 * 
	 */},{key:"getIntegrationsSpeechTtsSettings",value:function getIntegrationsSpeechTtsSettings(){return this.apiClient.callApi('/api/v2/integrations/speech/tts/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get integration type.
	 * 
	 * @param {String} typeId Integration Type Id
	 */},{key:"getIntegrationsType",value:function getIntegrationsType(typeId){// verify the required parameter 'typeId' is set
if(typeId===undefined||typeId===null){throw'Missing the required parameter "typeId" when calling getIntegrationsType';}return this.apiClient.callApi('/api/v2/integrations/types/{typeId}','GET',{'typeId':typeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get properties config schema for an integration type.
	 * 
	 * @param {String} typeId Integration Type Id
	 * @param {Object} configType Config schema type
	 */},{key:"getIntegrationsTypeConfigschema",value:function getIntegrationsTypeConfigschema(typeId,configType){// verify the required parameter 'typeId' is set
if(typeId===undefined||typeId===null){throw'Missing the required parameter "typeId" when calling getIntegrationsTypeConfigschema';}// verify the required parameter 'configType' is set
if(configType===undefined||configType===null){throw'Missing the required parameter "configType" when calling getIntegrationsTypeConfigschema';}return this.apiClient.callApi('/api/v2/integrations/types/{typeId}/configschemas/{configType}','GET',{'typeId':typeId,'configType':configType},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List integration types
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 */},{key:"getIntegrationsTypes",value:function getIntegrationsTypes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/types','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List permitted user app integrations for the logged in user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.appHost The type of UserApp to filter by
	 */},{key:"getIntegrationsUserapps",value:function getIntegrationsUserapps(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/userapps','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'appHost':opts['appHost']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an integration.
	 * 
	 * @param {String} integrationId Integration Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Object} opts.body Integration Update
	 */},{key:"patchIntegration",value:function patchIntegration(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling patchIntegration';}return this.apiClient.callApi('/api/v2/integrations/{integrationId}','PATCH',{'integrationId':integrationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch an Action
	 * 
	 * @param {String} actionId actionId
	 * @param {Object} body Input used to patch the Action.
	 */},{key:"patchIntegrationsAction",value:function patchIntegrationsAction(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling patchIntegrationsAction';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchIntegrationsAction';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}','PATCH',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing Draft
	 * 
	 * @param {String} actionId actionId
	 * @param {Object} body Input used to patch the Action Draft.
	 */},{key:"patchIntegrationsActionDraft",value:function patchIntegrationsActionDraft(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling patchIntegrationsActionDraft';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchIntegrationsActionDraft';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft','PATCH',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an integration.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Integration
	 */},{key:"postIntegrations",value:function postIntegrations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new Draft from existing Action
	 * 
	 * @param {String} actionId actionId
	 */},{key:"postIntegrationsActionDraft",value:function postIntegrationsActionDraft(actionId){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling postIntegrationsActionDraft';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft','POST',{'actionId':actionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish a Draft and make it the active Action configuration
	 * 
	 * @param {String} actionId actionId
	 * @param {Object} body Input used to patch the Action.
	 */},{key:"postIntegrationsActionDraftPublish",value:function postIntegrationsActionDraftPublish(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling postIntegrationsActionDraftPublish';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActionDraftPublish';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft/publish','POST',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Test the execution of a draft. Responses will show execution steps broken out with intermediate results to help in debugging.
	 * 
	 * @param {String} actionId actionId
	 * @param {Object.<String, {String: Object}>} body Map of parameters used for variable substitution.
	 */},{key:"postIntegrationsActionDraftTest",value:function postIntegrationsActionDraftTest(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling postIntegrationsActionDraftTest';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActionDraftTest';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/draft/test','POST',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Execute Action and return response from 3rd party.  Responses will follow the schemas defined on the Action for success and error.
	 * 
	 * @param {String} actionId actionId
	 * @param {Object.<String, {String: Object}>} body Map of parameters used for variable substitution.
	 */},{key:"postIntegrationsActionExecute",value:function postIntegrationsActionExecute(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling postIntegrationsActionExecute';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActionExecute';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/execute','POST',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Test the execution of an action. Responses will show execution steps broken out with intermediate results to help in debugging.
	 * 
	 * @param {String} actionId actionId
	 * @param {Object.<String, {String: Object}>} body Map of parameters used for variable substitution.
	 */},{key:"postIntegrationsActionTest",value:function postIntegrationsActionTest(actionId,body){// verify the required parameter 'actionId' is set
if(actionId===undefined||actionId===null){throw'Missing the required parameter "actionId" when calling postIntegrationsActionTest';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActionTest';}return this.apiClient.callApi('/api/v2/integrations/actions/{actionId}/test','POST',{'actionId':actionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new Action. Not supported for 'Function Integration' actions. Function integrations must be created as drafts to allow managing of uploading required ZIP function package before they may be used as a published action.
	 * 
	 * @param {Object} body Input used to create Action.
	 */},{key:"postIntegrationsActions",value:function postIntegrationsActions(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActions';}return this.apiClient.callApi('/api/v2/integrations/actions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new Draft
	 * 
	 * @param {Object} body Input used to create Action Draft.
	 */},{key:"postIntegrationsActionsDrafts",value:function postIntegrationsActionsDrafts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postIntegrationsActionsDrafts';}return this.apiClient.callApi('/api/v2/integrations/actions/drafts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a set of credentials
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Credential
	 */},{key:"postIntegrationsCredentials",value:function postIntegrationsCredentials(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/integrations/credentials','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Nuance bot in the specified Integration asynchronously
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {String} botId The Nuance bot ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 * @param {String} opts.body targetChannel
	 * postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs",value:function postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs(nuanceIntegrationId,botId,opts){opts=opts||{};// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs';}// verify the required parameter 'botId' is set
if(botId===undefined||botId===null){throw'Missing the required parameter "botId" when calling postIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs','POST',{'nuanceIntegrationId':nuanceIntegrationId,'botId':botId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Nuance bots in the specified Integration asynchronously
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.onlyRegisteredBots Limit bots to the ones configured for Genesys Cloud usage (default to true)
	 * postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs",value:function postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs(nuanceIntegrationId,opts){opts=opts||{};// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling postIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs','POST',{'nuanceIntegrationId':nuanceIntegrationId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'onlyRegisteredBots':opts['onlyRegisteredBots']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Try out a single credential for a Nuance bot to know if the secret is correct
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {Object} settings 
	 * postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate",value:function postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate(nuanceIntegrationId,settings){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate';}// verify the required parameter 'settings' is set
if(settings===undefined||settings===null){throw'Missing the required parameter "settings" when calling postIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/validate','POST',{'nuanceIntegrationId':nuanceIntegrationId},{},{},{},settings,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update integration configuration.
	 * 
	 * @param {String} integrationId Integration Id
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Integration Configuration
	 */},{key:"putIntegrationConfigCurrent",value:function putIntegrationConfigCurrent(integrationId,opts){opts=opts||{};// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling putIntegrationConfigCurrent';}return this.apiClient.callApi('/api/v2/integrations/{integrationId}/config/current','PUT',{'integrationId':integrationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set a list of botConnector bots plus versions for this integration
	 * 
	 * @param {String} integrationId The integration ID for this group of bots
	 * @param {Object} botList 
	 */},{key:"putIntegrationsBotconnectorIntegrationIdBots",value:function putIntegrationsBotconnectorIntegrationIdBots(integrationId,botList){// verify the required parameter 'integrationId' is set
if(integrationId===undefined||integrationId===null){throw'Missing the required parameter "integrationId" when calling putIntegrationsBotconnectorIntegrationIdBots';}// verify the required parameter 'botList' is set
if(botList===undefined||botList===null){throw'Missing the required parameter "botList" when calling putIntegrationsBotconnectorIntegrationIdBots';}return this.apiClient.callApi('/api/v2/integrations/botconnector/{integrationId}/bots','PUT',{'integrationId':integrationId},{},{},{},botList,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a set of credentials
	 * 
	 * @param {String} credentialId Credential ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Credential
	 */},{key:"putIntegrationsCredential",value:function putIntegrationsCredential(credentialId,opts){opts=opts||{};// verify the required parameter 'credentialId' is set
if(credentialId===undefined||credentialId===null){throw'Missing the required parameter "credentialId" when calling putIntegrationsCredential';}return this.apiClient.callApi('/api/v2/integrations/credentials/{credentialId}','PUT',{'credentialId':credentialId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the Nuance bot list for the specific bots made available to Genesys Cloud in the specified Integration
	 * 
	 * @param {String} nuanceIntegrationId The integration ID for this group of bots
	 * @param {Object} settings 
	 * putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings",value:function putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings(nuanceIntegrationId,settings){// verify the required parameter 'nuanceIntegrationId' is set
if(nuanceIntegrationId===undefined||nuanceIntegrationId===null){throw'Missing the required parameter "nuanceIntegrationId" when calling putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings';}// verify the required parameter 'settings' is set
if(settings===undefined||settings===null){throw'Missing the required parameter "settings" when calling putIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings';}return this.apiClient.callApi('/api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/settings','PUT',{'nuanceIntegrationId':nuanceIntegrationId},{},{},{},settings,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update TTS settings for an org
	 * 
	 * @param {Object} body Updated TtsSettings
	 */},{key:"putIntegrationsSpeechTtsSettings",value:function putIntegrationsSpeechTtsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIntegrationsSpeechTtsSettings';}return this.apiClient.callApi('/api/v2/integrations/speech/tts/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk integration presence ingestion
	 * This endpoint accepts bulk presence updates from a 3rd-party presence integration and maps the 3rd-party user to a Genesys Cloud user via the matching email address. The 3rd-party presence value will be mapped to a Genesys Cloud organization presence definition value.
	 * @param {String} ucIntegrationId UC Integration ID
	 * @param {Array.<Object>} body List of User presences
	 */},{key:"putIntegrationsUnifiedcommunicationThirdpartypresences",value:function putIntegrationsUnifiedcommunicationThirdpartypresences(ucIntegrationId,body){// verify the required parameter 'ucIntegrationId' is set
if(ucIntegrationId===undefined||ucIntegrationId===null){throw'Missing the required parameter "ucIntegrationId" when calling putIntegrationsUnifiedcommunicationThirdpartypresences';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putIntegrationsUnifiedcommunicationThirdpartypresences';}return this.apiClient.callApi('/api/v2/integrations/unifiedcommunications/{ucIntegrationId}/thirdpartypresences','PUT',{'ucIntegrationId':ucIntegrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return IntegrationsApi;}();var JourneyApi=/*#__PURE__*/function(){/**
	 * Journey service.
	 * @module purecloud-platform-client-v2/api/JourneyApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new JourneyApi. 
	 * @alias module:purecloud-platform-client-v2/api/JourneyApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function JourneyApi(apiClient){_classCallCheck(this,JourneyApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete single action map.
	 * 
	 * @param {String} actionMapId ID of the action map.
	 */_createClass(JourneyApi,[{key:"deleteJourneyActionmap",value:function deleteJourneyActionmap(actionMapId){// verify the required parameter 'actionMapId' is set
if(actionMapId===undefined||actionMapId===null){throw'Missing the required parameter "actionMapId" when calling deleteJourneyActionmap';}return this.apiClient.callApi('/api/v2/journey/actionmaps/{actionMapId}','DELETE',{'actionMapId':actionMapId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a single action template.
	 * 
	 * @param {String} actionTemplateId ID of the action template.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.hardDelete Determines whether Action Template should be soft-deleted (have it's state set to deleted) or hard-deleted (permanently removed). Set to false (soft-delete) by default.
	 */},{key:"deleteJourneyActiontemplate",value:function deleteJourneyActiontemplate(actionTemplateId,opts){opts=opts||{};// verify the required parameter 'actionTemplateId' is set
if(actionTemplateId===undefined||actionTemplateId===null){throw'Missing the required parameter "actionTemplateId" when calling deleteJourneyActiontemplate';}return this.apiClient.callApi('/api/v2/journey/actiontemplates/{actionTemplateId}','DELETE',{'actionTemplateId':actionTemplateId},{'hardDelete':opts['hardDelete']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an outcome.
	 * 
	 * @param {String} outcomeId ID of the outcome.
	 */},{key:"deleteJourneyOutcome",value:function deleteJourneyOutcome(outcomeId){// verify the required parameter 'outcomeId' is set
if(outcomeId===undefined||outcomeId===null){throw'Missing the required parameter "outcomeId" when calling deleteJourneyOutcome';}return this.apiClient.callApi('/api/v2/journey/outcomes/{outcomeId}','DELETE',{'outcomeId':outcomeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an outcome predictor.
	 * 
	 * @param {String} predictorId ID of predictor
	 */},{key:"deleteJourneyOutcomesPredictor",value:function deleteJourneyOutcomesPredictor(predictorId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling deleteJourneyOutcomesPredictor';}return this.apiClient.callApi('/api/v2/journey/outcomes/predictors/{predictorId}','DELETE',{'predictorId':predictorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a segment.
	 * 
	 * @param {String} segmentId ID of the segment.
	 */},{key:"deleteJourneySegment",value:function deleteJourneySegment(segmentId){// verify the required parameter 'segmentId' is set
if(segmentId===undefined||segmentId===null){throw'Missing the required parameter "segmentId" when calling deleteJourneySegment';}return this.apiClient.callApi('/api/v2/journey/segments/{segmentId}','DELETE',{'segmentId':segmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for journey aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsJourneysAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsJourneysAggregatesJob",value:function getAnalyticsJourneysAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsJourneysAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsJourneysAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsJourneysAggregatesJobResults",value:function getAnalyticsJourneysAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsJourneysAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all sessions for a given external contact.
	 * 
	 * @param {String} contactId ExternalContact ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Boolean} opts.includeMerged Indicates whether to return sessions from all external contacts in the merge-set of the given one.
	 */},{key:"getExternalcontactsContactJourneySessions",value:function getExternalcontactsContactJourneySessions(contactId,opts){opts=opts||{};// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getExternalcontactsContactJourneySessions';}return this.apiClient.callApi('/api/v2/externalcontacts/contacts/{contactId}/journey/sessions','GET',{'contactId':contactId},{'pageSize':opts['pageSize'],'after':opts['after'],'includeMerged':opts['includeMerged']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single action map.
	 * 
	 * @param {String} actionMapId ID of the action map.
	 */},{key:"getJourneyActionmap",value:function getJourneyActionmap(actionMapId){// verify the required parameter 'actionMapId' is set
if(actionMapId===undefined||actionMapId===null){throw'Missing the required parameter "actionMapId" when calling getJourneyActionmap';}return this.apiClient.callApi('/api/v2/journey/actionmaps/{actionMapId}','GET',{'actionMapId':actionMapId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all action maps.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).
	 * @param {String} opts.filterField Field to filter by (e.g. filterField=weight or filterField=action.actionTemplate.id). Requires 'filterField' to also be set.
	 * @param {String} opts.filterValue Value to filter by. Requires 'filterValue' to also be set.
	 * @param {Array.<String>} opts.actionMapIds IDs of action maps to return. Use of this parameter is not compatible with pagination, filtering, sorting or querying. A maximum of 100 action maps are allowed per request.
	 * @param {Array.<String>} opts.queryFields Action Map field(s) to query on. Requires 'queryValue' to also be set.
	 * @param {String} opts.queryValue Value to query on. Requires 'queryFields' to also be set.
	 */},{key:"getJourneyActionmaps",value:function getJourneyActionmaps(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/actionmaps','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'filterField':opts['filterField'],'filterValue':opts['filterValue'],'actionMapIds':this.apiClient.buildCollectionParam(opts['actionMapIds'],'multi'),'queryFields':this.apiClient.buildCollectionParam(opts['queryFields'],'multi'),'queryValue':opts['queryValue']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status of job.
	 * 
	 * @param {String} jobId ID of the job.
	 */},{key:"getJourneyActionmapsEstimatesJob",value:function getJourneyActionmapsEstimatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getJourneyActionmapsEstimatesJob';}return this.apiClient.callApi('/api/v2/journey/actionmaps/estimates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get estimates from completed job.
	 * 
	 * @param {String} jobId ID of the job.
	 */},{key:"getJourneyActionmapsEstimatesJobResults",value:function getJourneyActionmapsEstimatesJobResults(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getJourneyActionmapsEstimatesJobResults';}return this.apiClient.callApi('/api/v2/journey/actionmaps/estimates/jobs/{jobId}/results','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single action target.
	 * 
	 * @param {String} actionTargetId ID of the action target.
	 */},{key:"getJourneyActiontarget",value:function getJourneyActiontarget(actionTargetId){// verify the required parameter 'actionTargetId' is set
if(actionTargetId===undefined||actionTargetId===null){throw'Missing the required parameter "actionTargetId" when calling getJourneyActiontarget';}return this.apiClient.callApi('/api/v2/journey/actiontargets/{actionTargetId}','GET',{'actionTargetId':actionTargetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all action targets.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getJourneyActiontargets",value:function getJourneyActiontargets(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/actiontargets','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single action template.
	 * 
	 * @param {String} actionTemplateId ID of the action template.
	 */},{key:"getJourneyActiontemplate",value:function getJourneyActiontemplate(actionTemplateId){// verify the required parameter 'actionTemplateId' is set
if(actionTemplateId===undefined||actionTemplateId===null){throw'Missing the required parameter "actionTemplateId" when calling getJourneyActiontemplate';}return this.apiClient.callApi('/api/v2/journey/actiontemplates/{actionTemplateId}','GET',{'actionTemplateId':actionTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all action templates.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=name,-createdDate).
	 * @param {Object} opts.mediaType Media type
	 * @param {Object} opts.state Action template state.
	 * @param {Array.<String>} opts.queryFields ActionTemplate field(s) to query on. Requires 'queryValue' to also be set.
	 * @param {String} opts.queryValue Value to query on. Requires 'queryFields' to also be set.
	 */},{key:"getJourneyActiontemplates",value:function getJourneyActiontemplates(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/actiontemplates','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'mediaType':opts['mediaType'],'state':opts['state'],'queryFields':this.apiClient.buildCollectionParam(opts['queryFields'],'multi'),'queryValue':opts['queryValue']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a ping.
	 * 
	 * @param {String} deploymentId The ID of the deployment sending the ping.
	 * @param {String} customerCookieId ID of the customer associated with the ping.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.dl Document Location: 1) Web Page URL if overridden or URL fragment identifier (window.location.hash). OR  2) Application screen name that the ping request was sent from in the app. e.g. 'home' or 'help. Pings without this parameter will not return actions.
	 * @param {String} opts.dt Document Title.  A human readable name for the page or screen
	 * @param {String} opts.appNamespace Namespace of the application (e.g. com.genesys.bancodinero). Used for domain filtering in application sessions
	 * @param {String} opts.sessionId UUID of the customer session. Use the same Session Id for all pings, AppEvents and ActionEvents in the session
	 * @param {Number} opts.sinceLastBeaconMilliseconds How long (milliseconds) since the last app event or beacon was sent. The response may return a pollInternvalMilliseconds to reduce the frequency of pings.
	 */},{key:"getJourneyDeploymentCustomerPing",value:function getJourneyDeploymentCustomerPing(deploymentId,customerCookieId,opts){opts=opts||{};// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getJourneyDeploymentCustomerPing';}// verify the required parameter 'customerCookieId' is set
if(customerCookieId===undefined||customerCookieId===null){throw'Missing the required parameter "customerCookieId" when calling getJourneyDeploymentCustomerPing';}return this.apiClient.callApi('/api/v2/journey/deployments/{deploymentId}/customers/{customerCookieId}/ping','GET',{'deploymentId':deploymentId,'customerCookieId':customerCookieId},{'dl':opts['dl'],'dt':opts['dt'],'appNamespace':opts['appNamespace'],'sessionId':opts['sessionId'],'sinceLastBeaconMilliseconds':opts['sinceLastBeaconMilliseconds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single outcome.
	 * 
	 * @param {String} outcomeId ID of the outcome.
	 */},{key:"getJourneyOutcome",value:function getJourneyOutcome(outcomeId){// verify the required parameter 'outcomeId' is set
if(outcomeId===undefined||outcomeId===null){throw'Missing the required parameter "outcomeId" when calling getJourneyOutcome';}return this.apiClient.callApi('/api/v2/journey/outcomes/{outcomeId}','GET',{'outcomeId':outcomeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all outcomes.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).
	 * @param {Array.<String>} opts.outcomeIds IDs of outcomes to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 20 outcomes are allowed per request.
	 * @param {Array.<String>} opts.queryFields Outcome field(s) to query on. Requires 'queryValue' to also be set.
	 * @param {String} opts.queryValue Value to query on. Requires 'queryFields' to also be set.
	 */},{key:"getJourneyOutcomes",value:function getJourneyOutcomes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/outcomes','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'outcomeIds':this.apiClient.buildCollectionParam(opts['outcomeIds'],'multi'),'queryFields':this.apiClient.buildCollectionParam(opts['queryFields'],'multi'),'queryValue':opts['queryValue']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get job status.
	 * 
	 * @param {String} jobId ID of the job.
	 * getJourneyOutcomesAttributionsJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getJourneyOutcomesAttributionsJob",value:function getJourneyOutcomesAttributionsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getJourneyOutcomesAttributionsJob';}return this.apiClient.callApi('/api/v2/journey/outcomes/attributions/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get outcome attribution entities from completed job.
	 * 
	 * @param {String} jobId ID of the job.
	 * getJourneyOutcomesAttributionsJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getJourneyOutcomesAttributionsJobResults",value:function getJourneyOutcomesAttributionsJobResults(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getJourneyOutcomesAttributionsJobResults';}return this.apiClient.callApi('/api/v2/journey/outcomes/attributions/jobs/{jobId}/results','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single outcome predictor.
	 * 
	 * @param {String} predictorId ID of predictor
	 */},{key:"getJourneyOutcomesPredictor",value:function getJourneyOutcomesPredictor(predictorId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling getJourneyOutcomesPredictor';}return this.apiClient.callApi('/api/v2/journey/outcomes/predictors/{predictorId}','GET',{'predictorId':predictorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all outcome predictors.
	 * 
	 */},{key:"getJourneyOutcomesPredictors",value:function getJourneyOutcomesPredictors(){return this.apiClient.callApi('/api/v2/journey/outcomes/predictors','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single segment.
	 * 
	 * @param {String} segmentId ID of the segment.
	 */},{key:"getJourneySegment",value:function getJourneySegment(segmentId){// verify the required parameter 'segmentId' is set
if(segmentId===undefined||segmentId===null){throw'Missing the required parameter "segmentId" when calling getJourneySegment';}return this.apiClient.callApi('/api/v2/journey/segments/{segmentId}','GET',{'segmentId':segmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all segments.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.sortBy Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.isActive Determines whether or not to show only active segments.
	 * @param {Array.<String>} opts.segmentIds IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request.
	 * @param {Array.<String>} opts.queryFields Segment field(s) to query on. Requires 'queryValue' to also be set.
	 * @param {String} opts.queryValue Value to query on. Requires 'queryFields' to also be set.
	 */},{key:"getJourneySegments",value:function getJourneySegments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/segments','GET',{},{'sortBy':opts['sortBy'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'isActive':opts['isActive'],'segmentIds':this.apiClient.buildCollectionParam(opts['segmentIds'],'multi'),'queryFields':this.apiClient.buildCollectionParam(opts['queryFields'],'multi'),'queryValue':opts['queryValue']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single session.
	 * 
	 * @param {String} sessionId ID of the session.
	 */},{key:"getJourneySession",value:function getJourneySession(sessionId){// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getJourneySession';}return this.apiClient.callApi('/api/v2/journey/sessions/{sessionId}','GET',{'sessionId':sessionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all events for a given session.
	 * 
	 * @param {String} sessionId System-generated UUID that represents the session the event is a part of.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * getJourneySessionEvents is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getJourneySessionEvents",value:function getJourneySessionEvents(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getJourneySessionEvents';}return this.apiClient.callApi('/api/v2/journey/sessions/{sessionId}/events','GET',{'sessionId':sessionId},{'pageSize':opts['pageSize'],'after':opts['after']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve latest outcome score associated with a session for all outcomes.
	 * 
	 * @param {String} sessionId ID of the session.
	 */},{key:"getJourneySessionOutcomescores",value:function getJourneySessionOutcomescores(sessionId){// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getJourneySessionOutcomescores';}return this.apiClient.callApi('/api/v2/journey/sessions/{sessionId}/outcomescores','GET',{'sessionId':sessionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve segment assignments by session ID.
	 * 
	 * @param {String} sessionId ID of the session to query for segment assignments.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Object} opts.segmentScope Scope to filter on. If not specified, both session-scoped and customer-scoped assignments are returned.
	 * @param {Object} opts.assignmentState Assignment state to filter on. If not specified, both assigned and unassigned assignments are returned.
	 * getJourneySessionSegments is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getJourneySessionSegments",value:function getJourneySessionSegments(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getJourneySessionSegments';}return this.apiClient.callApi('/api/v2/journey/sessions/{sessionId}/segments','GET',{'sessionId':sessionId},{'pageSize':opts['pageSize'],'after':opts['after'],'segmentScope':opts['segmentScope'],'assignmentState':opts['assignmentState']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update single action map.
	 * 
	 * @param {String} actionMapId ID of the action map.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchJourneyActionmap",value:function patchJourneyActionmap(actionMapId,opts){opts=opts||{};// verify the required parameter 'actionMapId' is set
if(actionMapId===undefined||actionMapId===null){throw'Missing the required parameter "actionMapId" when calling patchJourneyActionmap';}return this.apiClient.callApi('/api/v2/journey/actionmaps/{actionMapId}','PATCH',{'actionMapId':actionMapId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a single action target.
	 * 
	 * @param {String} actionTargetId ID of the action target.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchJourneyActiontarget",value:function patchJourneyActiontarget(actionTargetId,opts){opts=opts||{};// verify the required parameter 'actionTargetId' is set
if(actionTargetId===undefined||actionTargetId===null){throw'Missing the required parameter "actionTargetId" when calling patchJourneyActiontarget';}return this.apiClient.callApi('/api/v2/journey/actiontargets/{actionTargetId}','PATCH',{'actionTargetId':actionTargetId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a single action template.
	 * 
	 * @param {String} actionTemplateId ID of the action template.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchJourneyActiontemplate",value:function patchJourneyActiontemplate(actionTemplateId,opts){opts=opts||{};// verify the required parameter 'actionTemplateId' is set
if(actionTemplateId===undefined||actionTemplateId===null){throw'Missing the required parameter "actionTemplateId" when calling patchJourneyActiontemplate';}return this.apiClient.callApi('/api/v2/journey/actiontemplates/{actionTemplateId}','PATCH',{'actionTemplateId':actionTemplateId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an outcome.
	 * 
	 * @param {String} outcomeId ID of the outcome.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchJourneyOutcome",value:function patchJourneyOutcome(outcomeId,opts){opts=opts||{};// verify the required parameter 'outcomeId' is set
if(outcomeId===undefined||outcomeId===null){throw'Missing the required parameter "outcomeId" when calling patchJourneyOutcome';}return this.apiClient.callApi('/api/v2/journey/outcomes/{outcomeId}','PATCH',{'outcomeId':outcomeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a segment.
	 * 
	 * @param {String} segmentId ID of the segment.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchJourneySegment",value:function patchJourneySegment(segmentId,opts){opts=opts||{};// verify the required parameter 'segmentId' is set
if(segmentId===undefined||segmentId===null){throw'Missing the required parameter "segmentId" when calling patchJourneySegment';}return this.apiClient.callApi('/api/v2/journey/segments/{segmentId}','PATCH',{'segmentId':segmentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for journey aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsJourneysAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsJourneysAggregatesJobs",value:function postAnalyticsJourneysAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsJourneysAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for journey aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsJourneysAggregatesQuery",value:function postAnalyticsJourneysAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsJourneysAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/journeys/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an action map.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneyActionmaps",value:function postJourneyActionmaps(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/actionmaps','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for estimates
	 * 
	 * @param {Object} body audience estimator request
	 */},{key:"postJourneyActionmapsEstimatesJobs",value:function postJourneyActionmapsEstimatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postJourneyActionmapsEstimatesJobs';}return this.apiClient.callApi('/api/v2/journey/actionmaps/estimates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a single action template.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneyActiontemplates",value:function postJourneyActiontemplates(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/actiontemplates','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sends an action event, which is used for changing the state of actions that have been offered to the user.
	 * 
	 * @param {String} deploymentId The ID of the deployment sending the beacon.
	 * @param {Object} body 
	 */},{key:"postJourneyDeploymentActionevent",value:function postJourneyDeploymentActionevent(deploymentId,body){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling postJourneyDeploymentActionevent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postJourneyDeploymentActionevent';}return this.apiClient.callApi('/api/v2/journey/deployments/{deploymentId}/actionevent','POST',{'deploymentId':deploymentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a journey app event, used for tracking customer activity on an application.
	 * 
	 * @param {String} deploymentId The ID of the deployment sending the app event.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneyDeploymentAppevents",value:function postJourneyDeploymentAppevents(deploymentId,opts){opts=opts||{};// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling postJourneyDeploymentAppevents';}return this.apiClient.callApi('/api/v2/journey/deployments/{deploymentId}/appevents','POST',{'deploymentId':deploymentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an outcome.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneyOutcomes",value:function postJourneyOutcomes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/outcomes','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Outcome Attributions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body outcome attribution request
	 * postJourneyOutcomesAttributionsJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postJourneyOutcomesAttributionsJobs",value:function postJourneyOutcomesAttributionsJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/outcomes/attributions/jobs','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an outcome predictor.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneyOutcomesPredictors",value:function postJourneyOutcomesPredictors(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/outcomes/predictors','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a segment.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postJourneySegments",value:function postJourneySegments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/journey/segments','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return JourneyApi;}();var KnowledgeApi=/*#__PURE__*/function(){/**
	 * Knowledge service.
	 * @module purecloud-platform-client-v2/api/KnowledgeApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new KnowledgeApi. 
	 * @alias module:purecloud-platform-client-v2/api/KnowledgeApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function KnowledgeApi(apiClient){_classCallCheck(this,KnowledgeApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete knowledge base
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 */_createClass(KnowledgeApi,[{key:"deleteKnowledgeKnowledgebase",value:function deleteKnowledgeKnowledgebase(knowledgeBaseId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebase';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}','DELETE',{'knowledgeBaseId':knowledgeBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete category
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} categoryId Category ID
	 */},{key:"deleteKnowledgeKnowledgebaseCategory",value:function deleteKnowledgeKnowledgebaseCategory(knowledgeBaseId,categoryId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseCategory';}// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling deleteKnowledgeKnowledgebaseCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'categoryId':categoryId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete document.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 */},{key:"deleteKnowledgeKnowledgebaseDocument",value:function deleteKnowledgeKnowledgebaseDocument(knowledgeBaseId,documentId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseDocument';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling deleteKnowledgeKnowledgebaseDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a variation for a document.
	 * 
	 * @param {String} documentVariationId Globally unique identifier for a document variation.
	 * @param {String} documentId Globally unique identifier for a document.
	 * @param {String} knowledgeBaseId Globally unique identifier for a knowledge base.
	 */},{key:"deleteKnowledgeKnowledgebaseDocumentVariation",value:function deleteKnowledgeKnowledgebaseDocumentVariation(documentVariationId,documentId,knowledgeBaseId){// verify the required parameter 'documentVariationId' is set
if(documentVariationId===undefined||documentVariationId===null){throw'Missing the required parameter "documentVariationId" when calling deleteKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling deleteKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseDocumentVariation';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/variations/{documentVariationId}','DELETE',{'documentVariationId':documentVariationId,'documentId':documentId,'knowledgeBaseId':knowledgeBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete export job
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} exportJobId Export job ID
	 */},{key:"deleteKnowledgeKnowledgebaseExportJob",value:function deleteKnowledgeKnowledgebaseExportJob(knowledgeBaseId,exportJobId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseExportJob';}// verify the required parameter 'exportJobId' is set
if(exportJobId===undefined||exportJobId===null){throw'Missing the required parameter "exportJobId" when calling deleteKnowledgeKnowledgebaseExportJob';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/export/jobs/{exportJobId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'exportJobId':exportJobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete import job
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} importJobId Import job ID
	 */},{key:"deleteKnowledgeKnowledgebaseImportJob",value:function deleteKnowledgeKnowledgebaseImportJob(knowledgeBaseId,importJobId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseImportJob';}// verify the required parameter 'importJobId' is set
if(importJobId===undefined||importJobId===null){throw'Missing the required parameter "importJobId" when calling deleteKnowledgeKnowledgebaseImportJob';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'importJobId':importJobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete label
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} labelId Label ID
	 */},{key:"deleteKnowledgeKnowledgebaseLabel",value:function deleteKnowledgeKnowledgebaseLabel(knowledgeBaseId,labelId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseLabel';}// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling deleteKnowledgeKnowledgebaseLabel';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'labelId':labelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete category
	 * 
	 * @param {String} categoryId Category ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @deprecated
	 */},{key:"deleteKnowledgeKnowledgebaseLanguageCategory",value:function deleteKnowledgeKnowledgebaseLanguageCategory(categoryId,knowledgeBaseId,languageCode){// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling deleteKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteKnowledgeKnowledgebaseLanguageCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}','DELETE',{'categoryId':categoryId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete document
	 * 
	 * @param {String} documentId Document ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @deprecated
	 */},{key:"deleteKnowledgeKnowledgebaseLanguageDocument",value:function deleteKnowledgeKnowledgebaseLanguageDocument(documentId,knowledgeBaseId,languageCode){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling deleteKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteKnowledgeKnowledgebaseLanguageDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}','DELETE',{'documentId':documentId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete import operation
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} importId Import ID
	 * @deprecated
	 */},{key:"deleteKnowledgeKnowledgebaseLanguageDocumentsImport",value:function deleteKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId,languageCode,importId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling deleteKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling deleteKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'importId' is set
if(importId===undefined||importId===null){throw'Missing the required parameter "importId" when calling deleteKnowledgeKnowledgebaseLanguageDocumentsImport';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}','DELETE',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'importId':importId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get categories
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.parentId If specified, retrieves the children categories by parent category ID.
	 * @param {Boolean} opts.isRoot If specified, retrieves only the root categories.
	 * @param {String} opts.name Filter to return the categories that starts with the given category name.
	 * @param {Object} opts.sortBy Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (default to Name)
	 * @param {String} opts.expand The specified entity attribute will be filled. Supported value:Ancestors: every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors.
	 * @param {Boolean} opts.includeDocumentCount If specified, retrieves the number of documents related to category.
	 */},{key:"getKnowledgeGuestSessionCategories",value:function getKnowledgeGuestSessionCategories(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getKnowledgeGuestSessionCategories';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/categories','GET',{'sessionId':sessionId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'parentId':opts['parentId'],'isRoot':opts['isRoot'],'name':opts['name'],'sortBy':opts['sortBy'],'expand':opts['expand'],'includeDocumentCount':opts['includeDocumentCount']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a knowledge document by ID.
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {String} documentId Document ID
	 */},{key:"getKnowledgeGuestSessionDocument",value:function getKnowledgeGuestSessionDocument(sessionId,documentId){// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getKnowledgeGuestSessionDocument';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeGuestSessionDocument';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}','GET',{'sessionId':sessionId,'documentId':documentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get documents.
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.categoryId If specified, retrieves documents associated with category ids, comma separated values expected.
	 * @param {Number} opts.pageSize Number of entities to return. Maximum of 200.
	 */},{key:"getKnowledgeGuestSessionDocuments",value:function getKnowledgeGuestSessionDocuments(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getKnowledgeGuestSessionDocuments';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents','GET',{'sessionId':sessionId},{'categoryId':this.apiClient.buildCollectionParam(opts['categoryId'],'multi'),'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get knowledge base
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 */},{key:"getKnowledgeKnowledgebase",value:function getKnowledgeKnowledgebase(knowledgeBaseId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebase';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}','GET',{'knowledgeBaseId':knowledgeBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get categories
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.parentId If specified, retrieves the children categories by parent category ID.
	 * @param {Boolean} opts.isRoot If specified, retrieves only the root categories.
	 * @param {String} opts.name Filter to return the categories that starts with the given category name.
	 * @param {Object} opts.sortBy Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (default to Name)
	 * @param {String} opts.expand The specified entity attribute will be filled. Supported value:Ancestors: every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors.
	 * @param {Boolean} opts.includeDocumentCount If specified, retrieves the number of documents related to category.
	 */},{key:"getKnowledgeKnowledgebaseCategories",value:function getKnowledgeKnowledgebaseCategories(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseCategories';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories','GET',{'knowledgeBaseId':knowledgeBaseId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'parentId':opts['parentId'],'isRoot':opts['isRoot'],'name':opts['name'],'sortBy':opts['sortBy'],'expand':opts['expand'],'includeDocumentCount':opts['includeDocumentCount']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get category
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} categoryId Category ID
	 */},{key:"getKnowledgeKnowledgebaseCategory",value:function getKnowledgeKnowledgebaseCategory(knowledgeBaseId,categoryId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseCategory';}// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling getKnowledgeKnowledgebaseCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}','GET',{'knowledgeBaseId':knowledgeBaseId,'categoryId':categoryId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get document.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected. Max No. of variations that can be returned on expand is 20.
	 * @param {Object} opts.state when state is Draft, draft version of the document is returned,otherwise by default published version is returned in the response.
	 */},{key:"getKnowledgeKnowledgebaseDocument",value:function getKnowledgeKnowledgebaseDocument(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocument';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'state':opts['state']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of feedback records given on a document
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Boolean} opts.onlyCommented If true, only feedback records that have comment are returned. If false, feedback records with and without comment are returned. Default: false.
	 * @param {String} opts.documentVersionId Document version ID to filter by. Supported only if onlyCommented=true is set.
	 * @param {String} opts.documentVariationId Document variation ID to filter by. Supported only if onlyCommented=true is set.
	 * @param {Object} opts.appType Application type to filter by. Supported only if onlyCommented=true is set.
	 * @param {Object} opts.queryType Query type to filter by. Supported only if onlyCommented=true is set.
	 * @param {String} opts.userId The ID of the user, who created the feedback, to filter by. Supported only if onlyCommented=true is set.
	 * @param {String} opts.queueId Queue ID to filter by. Supported only if onlyCommented=true is set.
	 * @param {Object} opts.state State to filter by. Supported only if onlyCommented=true is set. Default: Final
	 */},{key:"getKnowledgeKnowledgebaseDocumentFeedback",value:function getKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentFeedback';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentFeedback';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/feedback','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'onlyCommented':opts['onlyCommented'],'documentVersionId':opts['documentVersionId'],'documentVariationId':opts['documentVariationId'],'appType':opts['appType'],'queryType':opts['queryType'],'userId':opts['userId'],'queueId':opts['queueId'],'state':opts['state']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a single feedback record given on a document
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {String} feedbackId Feedback ID.
	 */},{key:"getKnowledgeKnowledgebaseDocumentFeedbackFeedbackId",value:function getKnowledgeKnowledgebaseDocumentFeedbackFeedbackId(knowledgeBaseId,documentId,feedbackId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentFeedbackFeedbackId';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentFeedbackFeedbackId';}// verify the required parameter 'feedbackId' is set
if(feedbackId===undefined||feedbackId===null){throw'Missing the required parameter "feedbackId" when calling getKnowledgeKnowledgebaseDocumentFeedbackFeedbackId';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/feedback/{feedbackId}','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId,'feedbackId':feedbackId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a variation for a document.
	 * 
	 * @param {String} documentVariationId Globally unique identifier for a document variation.
	 * @param {String} documentId Globally unique identifier for a document.
	 * @param {String} knowledgeBaseId Globally unique identifier for a knowledge base.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.documentState The state of the document.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVariation",value:function getKnowledgeKnowledgebaseDocumentVariation(documentVariationId,documentId,knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'documentVariationId' is set
if(documentVariationId===undefined||documentVariationId===null){throw'Missing the required parameter "documentVariationId" when calling getKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVariation';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/variations/{documentVariationId}','GET',{'documentVariationId':documentVariationId,'documentId':documentId,'knowledgeBaseId':knowledgeBaseId},{'documentState':opts['documentState']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get variations for a document.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Object} opts.documentState The state of the document.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVariations",value:function getKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVariations';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVariations';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/variations','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'documentState':opts['documentState']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get document version.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {String} versionId Globally unique identifier for the document version.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVersion",value:function getKnowledgeKnowledgebaseDocumentVersion(knowledgeBaseId,documentId,versionId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVersion';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getKnowledgeKnowledgebaseDocumentVersion';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId,'versionId':versionId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get variation for the given document version.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {String} versionId Globally unique identifier for the document version.
	 * @param {String} variationId Globally unique identifier for the document version variation.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVersionVariation",value:function getKnowledgeKnowledgebaseDocumentVersionVariation(knowledgeBaseId,documentId,versionId,variationId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVersionVariation';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVersionVariation';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getKnowledgeKnowledgebaseDocumentVersionVariation';}// verify the required parameter 'variationId' is set
if(variationId===undefined||variationId===null){throw'Missing the required parameter "variationId" when calling getKnowledgeKnowledgebaseDocumentVersionVariation';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations/{variationId}','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId,'versionId':versionId,'variationId':variationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get variations for the given document version.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {String} versionId Globally unique identifier for the document version.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVersionVariations",value:function getKnowledgeKnowledgebaseDocumentVersionVariations(knowledgeBaseId,documentId,versionId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVersionVariations';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVersionVariations';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getKnowledgeKnowledgebaseDocumentVersionVariations';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions/{versionId}/variations','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId,'versionId':versionId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get document versions.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected.
	 */},{key:"getKnowledgeKnowledgebaseDocumentVersions",value:function getKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocumentVersions';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseDocumentVersions';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions','GET',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get documents.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.interval Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
	 * @param {Array.<String>} opts.documentId Retrieves the specified documents, comma separated values expected.
	 * @param {Array.<String>} opts.categoryId If specified, retrieves documents associated with category ids, comma separated values expected.
	 * @param {Boolean} opts.includeSubcategories Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories.
	 * @param {Boolean} opts.includeDrafts If includeDrafts is true, Documents in the draft state are also returned in the response.
	 * @param {Array.<String>} opts.labelIds If specified, retrieves documents associated with label ids, comma separated values expected.
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected.
	 * @param {Array.<String>} opts.externalIds If specified, retrieves documents associated with external ids, comma separated values expected.
	 */},{key:"getKnowledgeKnowledgebaseDocuments",value:function getKnowledgeKnowledgebaseDocuments(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseDocuments';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents','GET',{'knowledgeBaseId':knowledgeBaseId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'interval':opts['interval'],'documentId':this.apiClient.buildCollectionParam(opts['documentId'],'multi'),'categoryId':this.apiClient.buildCollectionParam(opts['categoryId'],'multi'),'includeSubcategories':opts['includeSubcategories'],'includeDrafts':opts['includeDrafts'],'labelIds':this.apiClient.buildCollectionParam(opts['labelIds'],'multi'),'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'externalIds':this.apiClient.buildCollectionParam(opts['externalIds'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get export job report
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} exportJobId Export job ID
	 */},{key:"getKnowledgeKnowledgebaseExportJob",value:function getKnowledgeKnowledgebaseExportJob(knowledgeBaseId,exportJobId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseExportJob';}// verify the required parameter 'exportJobId' is set
if(exportJobId===undefined||exportJobId===null){throw'Missing the required parameter "exportJobId" when calling getKnowledgeKnowledgebaseExportJob';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/export/jobs/{exportJobId}','GET',{'knowledgeBaseId':knowledgeBaseId,'exportJobId':exportJobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get import job report
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} importJobId Import job ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand If expand contains 'urls' downloadURL and failedEntitiesURL will be filled.
	 */},{key:"getKnowledgeKnowledgebaseImportJob",value:function getKnowledgeKnowledgebaseImportJob(knowledgeBaseId,importJobId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseImportJob';}// verify the required parameter 'importJobId' is set
if(importJobId===undefined||importJobId===null){throw'Missing the required parameter "importJobId" when calling getKnowledgeKnowledgebaseImportJob';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}','GET',{'knowledgeBaseId':knowledgeBaseId,'importJobId':importJobId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get label
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} labelId Label ID
	 */},{key:"getKnowledgeKnowledgebaseLabel",value:function getKnowledgeKnowledgebaseLabel(knowledgeBaseId,labelId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLabel';}// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling getKnowledgeKnowledgebaseLabel';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}','GET',{'knowledgeBaseId':knowledgeBaseId,'labelId':labelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get labels
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.name Filter to return the labels that contains the given phrase in the name.
	 * @param {Boolean} opts.includeDocumentCount If specified, retrieves the number of documents related to label.
	 */},{key:"getKnowledgeKnowledgebaseLabels",value:function getKnowledgeKnowledgebaseLabels(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLabels';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels','GET',{'knowledgeBaseId':knowledgeBaseId},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'name':opts['name'],'includeDocumentCount':opts['includeDocumentCount']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get categories
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 200. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.name Filter to return the categories that starts with the given category name.
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageCategories",value:function getKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId,languageCode,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageCategories';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageCategories';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories','GET',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get category
	 * 
	 * @param {String} categoryId Category ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageCategory",value:function getKnowledgeKnowledgebaseLanguageCategory(categoryId,knowledgeBaseId,languageCode){// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling getKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}','GET',{'categoryId':categoryId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get document
	 * 
	 * @param {String} documentId Document ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageDocument",value:function getKnowledgeKnowledgebaseLanguageDocument(documentId,knowledgeBaseId,languageCode){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}','GET',{'documentId':documentId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get document content upload status
	 * 
	 * @param {String} documentId Document ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} uploadId UploadId
	 * @deprecated
	 * getKnowledgeKnowledgebaseLanguageDocumentUpload is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getKnowledgeKnowledgebaseLanguageDocumentUpload",value:function getKnowledgeKnowledgebaseLanguageDocumentUpload(documentId,knowledgeBaseId,languageCode,uploadId){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling getKnowledgeKnowledgebaseLanguageDocumentUpload';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageDocumentUpload';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageDocumentUpload';}// verify the required parameter 'uploadId' is set
if(uploadId===undefined||uploadId===null){throw'Missing the required parameter "uploadId" when calling getKnowledgeKnowledgebaseLanguageDocumentUpload';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}/uploads/{uploadId}','GET',{'documentId':documentId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'uploadId':uploadId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get documents
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 200. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.categories Filter by categories ids, comma separated values expected.
	 * @param {String} opts.title Filter by document title.
	 * @param {Object} opts.sortBy Sort by.
	 * @param {Object} opts.sortOrder Sort Order.
	 * @param {Array.<String>} opts.documentIds Comma-separated list of document identifiers to fetch by.
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageDocuments",value:function getKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId,languageCode,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageDocuments';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageDocuments';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents','GET',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'categories':opts['categories'],'title':opts['title'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'documentIds':this.apiClient.buildCollectionParam(opts['documentIds'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get import operation report
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} importId Import ID
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageDocumentsImport",value:function getKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId,languageCode,importId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'importId' is set
if(importId===undefined||importId===null){throw'Missing the required parameter "importId" when calling getKnowledgeKnowledgebaseLanguageDocumentsImport';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}','GET',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'importId':importId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get training detail
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} trainingId Training ID
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageTraining",value:function getKnowledgeKnowledgebaseLanguageTraining(knowledgeBaseId,languageCode,trainingId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageTraining';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageTraining';}// verify the required parameter 'trainingId' is set
if(trainingId===undefined||trainingId===null){throw'Missing the required parameter "trainingId" when calling getKnowledgeKnowledgebaseLanguageTraining';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}','GET',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'trainingId':trainingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all trainings information for a knowledgebase
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 200. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Object} opts.knowledgeDocumentsState Return the training with the specified state of the trained documents.
	 * @deprecated
	 */},{key:"getKnowledgeKnowledgebaseLanguageTrainings",value:function getKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId,languageCode,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseLanguageTrainings';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling getKnowledgeKnowledgebaseLanguageTrainings';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings','GET',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'knowledgeDocumentsState':opts['knowledgeDocumentsState']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get knowledge base unanswered group for a particular groupId
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} groupId The ID of the group to be retrieved.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.app The app value to be used for filtering phrases.
	 * @param {String} opts.dateStart The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.dateEnd The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getKnowledgeKnowledgebaseUnansweredGroup",value:function getKnowledgeKnowledgebaseUnansweredGroup(knowledgeBaseId,groupId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseUnansweredGroup';}// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getKnowledgeKnowledgebaseUnansweredGroup';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/unanswered/groups/{groupId}','GET',{'knowledgeBaseId':knowledgeBaseId,'groupId':groupId},{'app':opts['app'],'dateStart':opts['dateStart'],'dateEnd':opts['dateEnd']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get knowledge base unanswered phrase group for a particular phraseGroupId
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} groupId The ID of the group to be retrieved.
	 * @param {String} phraseGroupId The ID of the phraseGroup to be retrieved.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.app The app value to be used for filtering phrases.
	 * @param {String} opts.dateStart The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.dateEnd The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",value:function getKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId,groupId,phraseGroupId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}// verify the required parameter 'phraseGroupId' is set
if(phraseGroupId===undefined||phraseGroupId===null){throw'Missing the required parameter "phraseGroupId" when calling getKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/unanswered/groups/{groupId}/phrasegroups/{phraseGroupId}','GET',{'knowledgeBaseId':knowledgeBaseId,'groupId':groupId,'phraseGroupId':phraseGroupId},{'app':opts['app'],'dateStart':opts['dateStart'],'dateEnd':opts['dateEnd']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get knowledge base unanswered groups
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.app The app value to be used for filtering phrases.
	 * @param {String} opts.dateStart The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} opts.dateEnd The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getKnowledgeKnowledgebaseUnansweredGroups",value:function getKnowledgeKnowledgebaseUnansweredGroups(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling getKnowledgeKnowledgebaseUnansweredGroups';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/unanswered/groups','GET',{'knowledgeBaseId':knowledgeBaseId},{'app':opts['app'],'dateStart':opts['dateStart'],'dateEnd':opts['dateEnd']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get knowledge bases
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 100. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 100.
	 * @param {String} opts.name Filter by Name.
	 * @param {Object} opts.coreLanguage Filter by core language.
	 * @param {Boolean} opts.published Filter by published status.
	 * @param {Object} opts.sortBy Sort by.
	 * @param {Object} opts.sortOrder Sort Order.
	 */},{key:"getKnowledgeKnowledgebases",value:function getKnowledgeKnowledgebases(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/knowledge/knowledgebases','GET',{},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'name':opts['name'],'coreLanguage':opts['coreLanguage'],'published':opts['published'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update search result.
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {String} searchId Search Result ID
	 * @param {Object} body 
	 */},{key:"patchKnowledgeGuestSessionDocumentsSearchSearchId",value:function patchKnowledgeGuestSessionDocumentsSearchSearchId(sessionId,searchId,body){// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling patchKnowledgeGuestSessionDocumentsSearchSearchId';}// verify the required parameter 'searchId' is set
if(searchId===undefined||searchId===null){throw'Missing the required parameter "searchId" when calling patchKnowledgeGuestSessionDocumentsSearchSearchId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeGuestSessionDocumentsSearchSearchId';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents/search/{searchId}','PATCH',{'sessionId':sessionId,'searchId':searchId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update knowledge base
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebase",value:function patchKnowledgeKnowledgebase(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebase';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebase';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}','PATCH',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update category
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} categoryId Category ID
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebaseCategory",value:function patchKnowledgeKnowledgebaseCategory(knowledgeBaseId,categoryId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseCategory';}// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling patchKnowledgeKnowledgebaseCategory';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories/{categoryId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'categoryId':categoryId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update document.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebaseDocument",value:function patchKnowledgeKnowledgebaseDocument(knowledgeBaseId,documentId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseDocument';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling patchKnowledgeKnowledgebaseDocument';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a variation for a document.
	 * 
	 * @param {String} documentVariationId Globally unique identifier for a document variation.
	 * @param {String} documentId Globally unique identifier for a document.
	 * @param {String} knowledgeBaseId Globally unique identifier for a knowledge base.
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebaseDocumentVariation",value:function patchKnowledgeKnowledgebaseDocumentVariation(documentVariationId,documentId,knowledgeBaseId,body){// verify the required parameter 'documentVariationId' is set
if(documentVariationId===undefined||documentVariationId===null){throw'Missing the required parameter "documentVariationId" when calling patchKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling patchKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseDocumentVariation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseDocumentVariation';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/variations/{documentVariationId}','PATCH',{'documentVariationId':documentVariationId,'documentId':documentId,'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update search result.
	 * 
	 * @param {String} knowledgeBaseId The ID of knowledge base containing the documents to query.
	 * @param {String} searchId Search Result ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchKnowledgeKnowledgebaseDocumentsSearchSearchId",value:function patchKnowledgeKnowledgebaseDocumentsSearchSearchId(knowledgeBaseId,searchId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseDocumentsSearchSearchId';}// verify the required parameter 'searchId' is set
if(searchId===undefined||searchId===null){throw'Missing the required parameter "searchId" when calling patchKnowledgeKnowledgebaseDocumentsSearchSearchId';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/search/{searchId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'searchId':searchId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start import job
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} importJobId Import job ID
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebaseImportJob",value:function patchKnowledgeKnowledgebaseImportJob(knowledgeBaseId,importJobId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseImportJob';}// verify the required parameter 'importJobId' is set
if(importJobId===undefined||importJobId===null){throw'Missing the required parameter "importJobId" when calling patchKnowledgeKnowledgebaseImportJob';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseImportJob';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs/{importJobId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'importJobId':importJobId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update label
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} labelId Label ID
	 * @param {Object} body 
	 */},{key:"patchKnowledgeKnowledgebaseLabel",value:function patchKnowledgeKnowledgebaseLabel(knowledgeBaseId,labelId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseLabel';}// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling patchKnowledgeKnowledgebaseLabel';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseLabel';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels/{labelId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'labelId':labelId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update category
	 * 
	 * @param {String} categoryId Category ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"patchKnowledgeKnowledgebaseLanguageCategory",value:function patchKnowledgeKnowledgebaseLanguageCategory(categoryId,knowledgeBaseId,languageCode,body){// verify the required parameter 'categoryId' is set
if(categoryId===undefined||categoryId===null){throw'Missing the required parameter "categoryId" when calling patchKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling patchKnowledgeKnowledgebaseLanguageCategory';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseLanguageCategory';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories/{categoryId}','PATCH',{'categoryId':categoryId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update document
	 * 
	 * @param {String} documentId Document ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"patchKnowledgeKnowledgebaseLanguageDocument",value:function patchKnowledgeKnowledgebaseLanguageDocument(documentId,knowledgeBaseId,languageCode,body){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling patchKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling patchKnowledgeKnowledgebaseLanguageDocument';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseLanguageDocument';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}','PATCH',{'documentId':documentId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update documents collection
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Array.<Object>} body 
	 * @deprecated
	 */},{key:"patchKnowledgeKnowledgebaseLanguageDocuments",value:function patchKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId,languageCode,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseLanguageDocuments';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling patchKnowledgeKnowledgebaseLanguageDocuments';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseLanguageDocuments';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents','PATCH',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start import operation
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} importId Import ID
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"patchKnowledgeKnowledgebaseLanguageDocumentsImport",value:function patchKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId,languageCode,importId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling patchKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'importId' is set
if(importId===undefined||importId===null){throw'Missing the required parameter "importId" when calling patchKnowledgeKnowledgebaseLanguageDocumentsImport';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseLanguageDocumentsImport';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports/{importId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'importId':importId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Knowledge base unanswered phrase group
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {String} groupId The ID of the group to be updated.
	 * @param {String} phraseGroupId The ID of the phraseGroup to be updated.
	 * @param {Object} body Request body of the update unanswered group endpoint.
	 */},{key:"patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",value:function patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId,groupId,phraseGroupId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}// verify the required parameter 'phraseGroupId' is set
if(phraseGroupId===undefined||phraseGroupId===null){throw'Missing the required parameter "phraseGroupId" when calling patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/unanswered/groups/{groupId}/phrasegroups/{phraseGroupId}','PATCH',{'knowledgeBaseId':knowledgeBaseId,'groupId':groupId,'phraseGroupId':phraseGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a presigned URL for uploading a knowledge import file with a set of documents
	 * 
	 * @param {Object} body query
	 */},{key:"postKnowledgeDocumentuploads",value:function postKnowledgeDocumentuploads(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeDocumentuploads';}return this.apiClient.callApi('/api/v2/knowledge/documentuploads','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Give feedback on a document
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeGuestSessionDocumentFeedback",value:function postKnowledgeGuestSessionDocumentFeedback(sessionId,documentId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling postKnowledgeGuestSessionDocumentFeedback';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeGuestSessionDocumentFeedback';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents/{documentId}/feedback','POST',{'sessionId':sessionId,'documentId':documentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search the documents in a guest session.
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields, if any, to expand for each document in the search result matching the query.
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeGuestSessionDocumentsSearch",value:function postKnowledgeGuestSessionDocumentsSearch(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling postKnowledgeGuestSessionDocumentsSearch';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents/search','POST',{'sessionId':sessionId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the knowledge documents to provide suggestions for auto completion.
	 * 
	 * @param {String} sessionId Knowledge guest session ID.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeGuestSessionDocumentsSearchSuggestions",value:function postKnowledgeGuestSessionDocumentsSearchSuggestions(sessionId,opts){opts=opts||{};// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling postKnowledgeGuestSessionDocumentsSearchSuggestions';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions/{sessionId}/documents/search/suggestions','POST',{'sessionId':sessionId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create guest session
	 * 
	 * @param {Object} body 
	 */},{key:"postKnowledgeGuestSessions",value:function postKnowledgeGuestSessions(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeGuestSessions';}return this.apiClient.callApi('/api/v2/knowledge/guest/sessions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new category
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseCategories",value:function postKnowledgeKnowledgebaseCategories(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseCategories';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseCategories';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/categories','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Give feedback on a document
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentFeedback",value:function postKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentFeedback';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeKnowledgebaseDocumentFeedback';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/feedback','POST',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a variation for a document.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentVariations",value:function postKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId,documentId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentVariations';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeKnowledgebaseDocumentVariations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocumentVariations';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/variations','POST',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates or restores a document version.
	 * 
	 * @param {String} knowledgeBaseId Globally unique identifier for the knowledge base.
	 * @param {String} documentId Globally unique identifier for the document.
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentVersions",value:function postKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId,documentId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentVersions';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeKnowledgebaseDocumentVersions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocumentVersions';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/versions','POST',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create view for a document.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID.
	 * @param {String} documentId Document ID.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentViews",value:function postKnowledgeKnowledgebaseDocumentViews(knowledgeBaseId,documentId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentViews';}// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeKnowledgebaseDocumentViews';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/{documentId}/views','POST',{'knowledgeBaseId':knowledgeBaseId,'documentId':documentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create document.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseDocuments",value:function postKnowledgeKnowledgebaseDocuments(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocuments';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocuments';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk remove documents.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 * postKnowledgeKnowledgebaseDocumentsBulkRemove is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postKnowledgeKnowledgebaseDocumentsBulkRemove",value:function postKnowledgeKnowledgebaseDocumentsBulkRemove(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentsBulkRemove';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocumentsBulkRemove';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/bulk/remove','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk update documents.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 * postKnowledgeKnowledgebaseDocumentsBulkUpdate is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postKnowledgeKnowledgebaseDocumentsBulkUpdate",value:function postKnowledgeKnowledgebaseDocumentsBulkUpdate(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentsBulkUpdate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocumentsBulkUpdate';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/bulk/update','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search the documents in a knowledge base.
	 * 
	 * @param {String} knowledgeBaseId The ID of knowledge base containing the documents to query.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields, if any, to expand for each document in the search result matching the query.
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentsSearch",value:function postKnowledgeKnowledgebaseDocumentsSearch(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentsSearch';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/search','POST',{'knowledgeBaseId':knowledgeBaseId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the knowledge documents to provide suggestions for auto completion.
	 * 
	 * @param {String} knowledgeBaseId The ID of knowledge base containing the documents to query.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postKnowledgeKnowledgebaseDocumentsSearchSuggestions",value:function postKnowledgeKnowledgebaseDocumentsSearchSuggestions(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentsSearchSuggestions';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/search/suggestions','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add document versions.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 * postKnowledgeKnowledgebaseDocumentsVersionsBulkAdd is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postKnowledgeKnowledgebaseDocumentsVersionsBulkAdd",value:function postKnowledgeKnowledgebaseDocumentsVersionsBulkAdd(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseDocumentsVersionsBulkAdd';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseDocumentsVersionsBulkAdd';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/documents/versions/bulk/add','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create export job
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseExportJobs",value:function postKnowledgeKnowledgebaseExportJobs(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseExportJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseExportJobs';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/export/jobs','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create import job
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseImportJobs",value:function postKnowledgeKnowledgebaseImportJobs(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseImportJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseImportJobs';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/import/jobs','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new label
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebaseLabels",value:function postKnowledgeKnowledgebaseLabels(knowledgeBaseId,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLabels';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseLabels';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/labels','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new category
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseLanguageCategories",value:function postKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId,languageCode,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageCategories';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageCategories';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseLanguageCategories';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/categories','POST',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Upload Article Content
	 * 
	 * @param {String} documentId Document ID
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 * postKnowledgeKnowledgebaseLanguageDocumentUploads is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postKnowledgeKnowledgebaseLanguageDocumentUploads",value:function postKnowledgeKnowledgebaseLanguageDocumentUploads(documentId,knowledgeBaseId,languageCode,body){// verify the required parameter 'documentId' is set
if(documentId===undefined||documentId===null){throw'Missing the required parameter "documentId" when calling postKnowledgeKnowledgebaseLanguageDocumentUploads';}// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageDocumentUploads';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageDocumentUploads';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseLanguageDocumentUploads';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/{documentId}/uploads','POST',{'documentId':documentId,'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create document
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseLanguageDocuments",value:function postKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId,languageCode,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageDocuments';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageDocuments';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseLanguageDocuments';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents','POST',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create import operation
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {Object} body 
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseLanguageDocumentsImports",value:function postKnowledgeKnowledgebaseLanguageDocumentsImports(knowledgeBaseId,languageCode,body){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageDocumentsImports';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageDocumentsImports';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebaseLanguageDocumentsImports';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/documents/imports','POST',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Promote trained documents from draft state to active.
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @param {String} trainingId Training ID
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseLanguageTrainingPromote",value:function postKnowledgeKnowledgebaseLanguageTrainingPromote(knowledgeBaseId,languageCode,trainingId){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageTrainingPromote';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageTrainingPromote';}// verify the required parameter 'trainingId' is set
if(trainingId===undefined||trainingId===null){throw'Missing the required parameter "trainingId" when calling postKnowledgeKnowledgebaseLanguageTrainingPromote';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings/{trainingId}/promote','POST',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode,'trainingId':trainingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Trigger training
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} languageCode Language code, format: iso2-LOCALE
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseLanguageTrainings",value:function postKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId,languageCode){// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseLanguageTrainings';}// verify the required parameter 'languageCode' is set
if(languageCode===undefined||languageCode===null){throw'Missing the required parameter "languageCode" when calling postKnowledgeKnowledgebaseLanguageTrainings';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/languages/{languageCode}/trainings','POST',{'knowledgeBaseId':knowledgeBaseId,'languageCode':languageCode},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search Documents
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseSearch",value:function postKnowledgeKnowledgebaseSearch(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseSearch';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/search','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new knowledge base
	 * 
	 * @param {Object} body 
	 */},{key:"postKnowledgeKnowledgebases",value:function postKnowledgeKnowledgebases(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeKnowledgebases';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return KnowledgeApi;}();var LanguageUnderstandingApi=/*#__PURE__*/function(){/**
	 * LanguageUnderstanding service.
	 * @module purecloud-platform-client-v2/api/LanguageUnderstandingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LanguageUnderstandingApi. 
	 * @alias module:purecloud-platform-client-v2/api/LanguageUnderstandingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LanguageUnderstandingApi(apiClient){_classCallCheck(this,LanguageUnderstandingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an NLU Domain.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 */_createClass(LanguageUnderstandingApi,[{key:"deleteLanguageunderstandingDomain",value:function deleteLanguageunderstandingDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling deleteLanguageunderstandingDomain';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}','DELETE',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the feedback on the NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} feedbackId ID of the Feedback
	 */},{key:"deleteLanguageunderstandingDomainFeedbackFeedbackId",value:function deleteLanguageunderstandingDomainFeedbackFeedbackId(domainId,feedbackId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling deleteLanguageunderstandingDomainFeedbackFeedbackId';}// verify the required parameter 'feedbackId' is set
if(feedbackId===undefined||feedbackId===null){throw'Missing the required parameter "feedbackId" when calling deleteLanguageunderstandingDomainFeedbackFeedbackId';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}','DELETE',{'domainId':domainId,'feedbackId':feedbackId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an NLU Domain Version
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 */},{key:"deleteLanguageunderstandingDomainVersion",value:function deleteLanguageunderstandingDomainVersion(domainId,domainVersionId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling deleteLanguageunderstandingDomainVersion';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling deleteLanguageunderstandingDomainVersion';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}','DELETE',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a miner.
	 * 
	 * @param {String} minerId Miner ID
	 */},{key:"deleteLanguageunderstandingMiner",value:function deleteLanguageunderstandingMiner(minerId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling deleteLanguageunderstandingMiner';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}','DELETE',{'minerId':minerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a draft
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} draftId Draft ID
	 */},{key:"deleteLanguageunderstandingMinerDraft",value:function deleteLanguageunderstandingMinerDraft(minerId,draftId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling deleteLanguageunderstandingMinerDraft';}// verify the required parameter 'draftId' is set
if(draftId===undefined||draftId===null){throw'Missing the required parameter "draftId" when calling deleteLanguageunderstandingMinerDraft';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}','DELETE',{'minerId':minerId,'draftId':draftId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Find an NLU Domain.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 */},{key:"getLanguageunderstandingDomain",value:function getLanguageunderstandingDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomain';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}','GET',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all feedback in the given NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.intentName The top intent name to retrieve feedback for.
	 * @param {Object} opts.assessment The top assessment to retrieve feedback for.
	 * @param {String} opts.dateStart Begin of time window as ISO-8601 date.
	 * @param {String} opts.dateEnd End of time window as ISO-8601 date.
	 * @param {Boolean} opts.includeDeleted Whether to include soft-deleted items in the result.
	 * @param {String} opts.language Whether to filter response based on the language, e.g. en-us, pt-br.
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Boolean} opts.enableCursorPagination Enable Cursor Pagination (default to false)
	 * @param {Boolean} opts.includeTrainingUtterances Include Training Utterances. By default they're included. (default to true)
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true
	 * @param {Array.<String>} opts.fields Fields and properties to get, comma-separated
	 */},{key:"getLanguageunderstandingDomainFeedback",value:function getLanguageunderstandingDomainFeedback(domainId,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomainFeedback';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/feedback','GET',{'domainId':domainId},{'intentName':opts['intentName'],'assessment':opts['assessment'],'dateStart':opts['dateStart'],'dateEnd':opts['dateEnd'],'includeDeleted':opts['includeDeleted'],'language':opts['language'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'enableCursorPagination':opts['enableCursorPagination'],'includeTrainingUtterances':opts['includeTrainingUtterances'],'after':opts['after'],'fields':this.apiClient.buildCollectionParam(opts['fields'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Find a Feedback
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} feedbackId ID of the Feedback
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.fields Fields and properties to get, comma-separated
	 */},{key:"getLanguageunderstandingDomainFeedbackFeedbackId",value:function getLanguageunderstandingDomainFeedbackFeedbackId(domainId,feedbackId,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomainFeedbackFeedbackId';}// verify the required parameter 'feedbackId' is set
if(feedbackId===undefined||feedbackId===null){throw'Missing the required parameter "feedbackId" when calling getLanguageunderstandingDomainFeedbackFeedbackId';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/feedback/{feedbackId}','GET',{'domainId':domainId,'feedbackId':feedbackId},{'fields':this.apiClient.buildCollectionParam(opts['fields'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Find an NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeUtterances Whether utterances for intent definition should be included when marshalling response.
	 */},{key:"getLanguageunderstandingDomainVersion",value:function getLanguageunderstandingDomainVersion(domainId,domainVersionId,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomainVersion';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling getLanguageunderstandingDomainVersion';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}','GET',{'domainId':domainId,'domainVersionId':domainVersionId},{'includeUtterances':opts['includeUtterances']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieved quality report for the specified NLU Domain Version
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 */},{key:"getLanguageunderstandingDomainVersionReport",value:function getLanguageunderstandingDomainVersionReport(domainId,domainVersionId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomainVersionReport';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling getLanguageunderstandingDomainVersionReport';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/report','GET',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all NLU Domain Versions for a given Domain.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeUtterances Whether utterances for intent definition should be included when marshalling response.
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getLanguageunderstandingDomainVersions",value:function getLanguageunderstandingDomainVersions(domainId,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getLanguageunderstandingDomainVersions';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions','GET',{'domainId':domainId},{'includeUtterances':opts['includeUtterances'],'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all NLU Domains.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getLanguageunderstandingDomains",value:function getLanguageunderstandingDomains(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/languageunderstanding/domains','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get information about a miner.
	 * 
	 * @param {String} minerId Miner ID
	 */},{key:"getLanguageunderstandingMiner",value:function getLanguageunderstandingMiner(minerId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMiner';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}','GET',{'minerId':minerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get information about a draft.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} draftId Draft ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.draftIntentId Parameter to filter a specific intent.
	 * @param {String} opts.draftTopicId Parameter to filter a specific topic.
	 */},{key:"getLanguageunderstandingMinerDraft",value:function getLanguageunderstandingMinerDraft(minerId,draftId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerDraft';}// verify the required parameter 'draftId' is set
if(draftId===undefined||draftId===null){throw'Missing the required parameter "draftId" when calling getLanguageunderstandingMinerDraft';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}','GET',{'minerId':minerId,'draftId':draftId},{'draftIntentId':opts['draftIntentId'],'draftTopicId':opts['draftTopicId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve the list of drafts created.
	 * 
	 * @param {String} minerId Miner ID
	 */},{key:"getLanguageunderstandingMinerDrafts",value:function getLanguageunderstandingMinerDrafts(minerId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerDrafts';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/drafts','GET',{'minerId':minerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get information about a mined intent
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} intentId The ID of the intent to be retrieved.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Option to fetch utterances
	 */},{key:"getLanguageunderstandingMinerIntent",value:function getLanguageunderstandingMinerIntent(minerId,intentId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerIntent';}// verify the required parameter 'intentId' is set
if(intentId===undefined||intentId===null){throw'Missing the required parameter "intentId" when calling getLanguageunderstandingMinerIntent';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/intents/{intentId}','GET',{'minerId':minerId,'intentId':intentId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of mined intents.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Option to fetch utterances.
	 */},{key:"getLanguageunderstandingMinerIntents",value:function getLanguageunderstandingMinerIntents(minerId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerIntents';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/intents','GET',{'minerId':minerId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves details of a particular topic.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} topicId The ID of the topic to be retrieved.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Option to fetch phrases
	 */},{key:"getLanguageunderstandingMinerTopic",value:function getLanguageunderstandingMinerTopic(minerId,topicId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerTopic';}// verify the required parameter 'topicId' is set
if(topicId===undefined||topicId===null){throw'Missing the required parameter "topicId" when calling getLanguageunderstandingMinerTopic';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}','GET',{'minerId':minerId,'topicId':topicId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves utterances related to a phrase in a topic.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} topicId The ID of the topic to be retrieved.
	 * @param {String} phraseId The ID of the phrase to be retrieved.
	 */},{key:"getLanguageunderstandingMinerTopicPhrase",value:function getLanguageunderstandingMinerTopicPhrase(minerId,topicId,phraseId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerTopicPhrase';}// verify the required parameter 'topicId' is set
if(topicId===undefined||topicId===null){throw'Missing the required parameter "topicId" when calling getLanguageunderstandingMinerTopicPhrase';}// verify the required parameter 'phraseId' is set
if(phraseId===undefined||phraseId===null){throw'Missing the required parameter "phraseId" when calling getLanguageunderstandingMinerTopicPhrase';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/topics/{topicId}/phrases/{phraseId}','GET',{'minerId':minerId,'topicId':topicId,'phraseId':phraseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of mined topics.
	 * 
	 * @param {String} minerId Miner ID
	 */},{key:"getLanguageunderstandingMinerTopics",value:function getLanguageunderstandingMinerTopics(minerId){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling getLanguageunderstandingMinerTopics';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/topics','GET',{'minerId':minerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve the list of miners created.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.minerType Type of miner, either intent or topic
	 */},{key:"getLanguageunderstandingMiners",value:function getLanguageunderstandingMiners(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/languageunderstanding/miners','GET',{},{'minerType':opts['minerType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an NLU Domain.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {Object} body The updated NLU Domain.
	 */},{key:"patchLanguageunderstandingDomain",value:function patchLanguageunderstandingDomain(domainId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling patchLanguageunderstandingDomain';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchLanguageunderstandingDomain';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}','PATCH',{'domainId':domainId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Save information for the draft. Either topic draft or intent draft should be sent.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {String} draftId Draft ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchLanguageunderstandingMinerDraft",value:function patchLanguageunderstandingMinerDraft(minerId,draftId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling patchLanguageunderstandingMinerDraft';}// verify the required parameter 'draftId' is set
if(draftId===undefined||draftId===null){throw'Missing the required parameter "draftId" when calling patchLanguageunderstandingMinerDraft';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/drafts/{draftId}','PATCH',{'minerId':minerId,'draftId':draftId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create feedback for the NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {Object} body The Feedback to create.
	 */},{key:"postLanguageunderstandingDomainFeedback",value:function postLanguageunderstandingDomainFeedback(domainId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postLanguageunderstandingDomainFeedback';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingDomainFeedback';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/feedback','POST',{'domainId':domainId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Detect intent, entities, etc. in the submitted text using the specified NLU domain version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 * @param {Object} body The input data to perform detection on.
	 */},{key:"postLanguageunderstandingDomainVersionDetect",value:function postLanguageunderstandingDomainVersionDetect(domainId,domainVersionId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postLanguageunderstandingDomainVersionDetect';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling postLanguageunderstandingDomainVersionDetect';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingDomainVersionDetect';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/detect','POST',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish the draft NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 */},{key:"postLanguageunderstandingDomainVersionPublish",value:function postLanguageunderstandingDomainVersionPublish(domainId,domainVersionId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postLanguageunderstandingDomainVersionPublish';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling postLanguageunderstandingDomainVersionPublish';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/publish','POST',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Train the draft NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 */},{key:"postLanguageunderstandingDomainVersionTrain",value:function postLanguageunderstandingDomainVersionTrain(domainId,domainVersionId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postLanguageunderstandingDomainVersionTrain';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling postLanguageunderstandingDomainVersionTrain';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}/train','POST',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {Object} body The NLU Domain Version to create.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeUtterances Whether utterances for intent definition should be included when marshalling response.
	 */},{key:"postLanguageunderstandingDomainVersions",value:function postLanguageunderstandingDomainVersions(domainId,body,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postLanguageunderstandingDomainVersions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingDomainVersions';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions','POST',{'domainId':domainId},{'includeUtterances':opts['includeUtterances']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an NLU Domain.
	 * 
	 * @param {Object} body The NLU Domain to create.
	 */},{key:"postLanguageunderstandingDomains",value:function postLanguageunderstandingDomains(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingDomains';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new draft resource.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {Object} body Details for creating draft resource
	 */},{key:"postLanguageunderstandingMinerDrafts",value:function postLanguageunderstandingMinerDrafts(minerId,body){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling postLanguageunderstandingMinerDrafts';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingMinerDrafts';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/drafts','POST',{'minerId':minerId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start the mining process. Specify date range pair with mediaType, queueIds, participantType for mining data from Genesys Cloud. Specify only uploadKey for mining through an external file.
	 * 
	 * @param {String} minerId Miner ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postLanguageunderstandingMinerExecute",value:function postLanguageunderstandingMinerExecute(minerId,opts){opts=opts||{};// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling postLanguageunderstandingMinerExecute';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/execute','POST',{'minerId':minerId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a unique miner.
	 * 
	 * @param {Object} body Details for creating a new miner resource.
	 */},{key:"postLanguageunderstandingMiners",value:function postLanguageunderstandingMiners(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingMiners';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an NLU Domain Version.
	 * 
	 * @param {String} domainId ID of the NLU domain.
	 * @param {String} domainVersionId ID of the NLU domain version.
	 * @param {Object} body The updated NLU Domain Version.
	 */},{key:"putLanguageunderstandingDomainVersion",value:function putLanguageunderstandingDomainVersion(domainId,domainVersionId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling putLanguageunderstandingDomainVersion';}// verify the required parameter 'domainVersionId' is set
if(domainVersionId===undefined||domainVersionId===null){throw'Missing the required parameter "domainVersionId" when calling putLanguageunderstandingDomainVersion';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putLanguageunderstandingDomainVersion';}return this.apiClient.callApi('/api/v2/languageunderstanding/domains/{domainId}/versions/{domainVersionId}','PUT',{'domainId':domainId,'domainVersionId':domainVersionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LanguageUnderstandingApi;}();var LanguagesApi=/*#__PURE__*/function(){/**
	 * Languages service.
	 * @module purecloud-platform-client-v2/api/LanguagesApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LanguagesApi. 
	 * @alias module:purecloud-platform-client-v2/api/LanguagesApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LanguagesApi(apiClient){_classCallCheck(this,LanguagesApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete Language (Deprecated)
	 * This endpoint is deprecated. Please see the Routing API (DELETE /api/v2/routing/languages/{languageId})
	 * @param {String} languageId Language ID
	 * @deprecated
	 */_createClass(LanguagesApi,[{key:"deleteLanguage",value:function deleteLanguage(languageId){// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling deleteLanguage';}return this.apiClient.callApi('/api/v2/languages/{languageId}','DELETE',{'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Language (Deprecated)
	 * This endpoint is deprecated. Please see the Routing API (GET /api/v2/routing/languages/{languageId})
	 * @param {String} languageId Language ID
	 * @deprecated
	 */},{key:"getLanguage",value:function getLanguage(languageId){// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling getLanguage';}return this.apiClient.callApi('/api/v2/languages/{languageId}','GET',{'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of supported languages. (Deprecated)
	 * This endpoint is deprecated. Please see the Routing API (GET /api/v2/routing/languages)
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @param {String} opts.name Name
	 * @deprecated
	 */},{key:"getLanguages",value:function getLanguages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/languages','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all available languages for translation
	 * 
	 */},{key:"getLanguagesTranslations",value:function getLanguagesTranslations(){return this.apiClient.callApi('/api/v2/languages/translations','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the builtin translation for a language
	 * 
	 * @param {String} language The language of the builtin translation to retrieve
	 */},{key:"getLanguagesTranslationsBuiltin",value:function getLanguagesTranslationsBuiltin(language){// verify the required parameter 'language' is set
if(language===undefined||language===null){throw'Missing the required parameter "language" when calling getLanguagesTranslationsBuiltin';}return this.apiClient.callApi('/api/v2/languages/translations/builtin','GET',{},{'language':language},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get effective translation for an organization by language
	 * 
	 * @param {String} language The language of the translation to retrieve for the organization
	 */},{key:"getLanguagesTranslationsOrganization",value:function getLanguagesTranslationsOrganization(language){// verify the required parameter 'language' is set
if(language===undefined||language===null){throw'Missing the required parameter "language" when calling getLanguagesTranslationsOrganization';}return this.apiClient.callApi('/api/v2/languages/translations/organization','GET',{},{'language':language},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get effective language translation for a user
	 * 
	 * @param {String} userId The user id
	 */},{key:"getLanguagesTranslationsUser",value:function getLanguagesTranslationsUser(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getLanguagesTranslationsUser';}return this.apiClient.callApi('/api/v2/languages/translations/users/{userId}','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Language (Deprecated)
	 * This endpoint is deprecated. Please see the Routing API. (POST /api/v2/routing/languages
	 * @param {Object} body Language
	 * @deprecated
	 */},{key:"postLanguages",value:function postLanguages(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguages';}return this.apiClient.callApi('/api/v2/languages','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LanguagesApi;}();var LearningApi=/*#__PURE__*/function(){/**
	 * Learning service.
	 * @module purecloud-platform-client-v2/api/LearningApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LearningApi. 
	 * @alias module:purecloud-platform-client-v2/api/LearningApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LearningApi(apiClient){_classCallCheck(this,LearningApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a learning assignment
	 * 
	 * @param {String} assignmentId The Learning Assignment ID
	 */_createClass(LearningApi,[{key:"deleteLearningAssignment",value:function deleteLearningAssignment(assignmentId){// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling deleteLearningAssignment';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}','DELETE',{'assignmentId':assignmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a learning module
	 * This will delete a learning module if it is unpublished or it will delete a published and archived learning module
	 * @param {String} moduleId The ID of the learning module
	 */},{key:"deleteLearningModule",value:function deleteLearningModule(moduleId){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling deleteLearningModule';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}','DELETE',{'moduleId':moduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Learning Assignment
	 * Permission not required if you are the assigned user of the learning assignment
	 * @param {String} assignmentId The ID of Learning Assignment
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields to expand in response
	 */},{key:"getLearningAssignment",value:function getLearningAssignment(assignmentId,opts){opts=opts||{};// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling getLearningAssignment';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}','GET',{'assignmentId':assignmentId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List of Learning module Assignments
	 * Either moduleId or user value is required
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.moduleId Specifies the ID of the learning module. Fetch assignments for learning module ID
	 * @param {String} opts.interval Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {String} opts.completionInterval Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Specifies if only the non-overdue (overdue is False) or overdue (overdue is True) assignments are returned. If overdue is Any or if the overdue parameter is not supplied, all assignments are returned (default to Any)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.pass Specifies if only the failed (pass is False) or passed (pass is True) assignments (completed with assessment)are returned. If pass is Any or if the pass parameter is not supplied, all assignments are returned (default to Any)
	 * @param {Number} opts.minPercentageScore The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
	 * @param {Number} opts.maxPercentageScore The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
	 * @param {Object} opts.sortOrder Specifies result set sort order; if not specified, default sort order is descending (Desc) (default to Desc)
	 * @param {Object} opts.sortBy Specifies which field to sort the results by, default sort is by recommendedCompletionDate
	 * @param {Array.<String>} opts.userId Specifies the list of user IDs to be queried, up to 100 user IDs.
	 * @param {Array.<String>} opts.types Specifies the module types to filter by
	 * @param {Array.<String>} opts.states Specifies the assignment states to filter by
	 * @param {Array.<String>} opts.expand Specifies the expand option for returning additional information
	 */},{key:"getLearningAssignments",value:function getLearningAssignments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/assignments','GET',{},{'moduleId':opts['moduleId'],'interval':opts['interval'],'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'pass':opts['pass'],'minPercentageScore':opts['minPercentageScore'],'maxPercentageScore':opts['maxPercentageScore'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'userId':this.apiClient.buildCollectionParam(opts['userId'],'multi'),'types':this.apiClient.buildCollectionParam(opts['types'],'multi'),'states':this.apiClient.buildCollectionParam(opts['states'],'multi'),'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List of Learning Assignments assigned to current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.moduleId Specifies the ID of the learning module. Fetch assignments for learning module ID
	 * @param {String} opts.interval Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {String} opts.completionInterval Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Specifies if only the non-overdue (overdue is False) or overdue (overdue is True) assignments are returned. If overdue is Any or if the overdue parameter is not supplied, all assignments are returned (default to Any)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.pass Specifies if only the failed (pass is False) or passed (pass is True) assignments (completed with assessment)are returned. If pass is Any or if the pass parameter is not supplied, all assignments are returned (default to Any)
	 * @param {Number} opts.minPercentageScore The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
	 * @param {Number} opts.maxPercentageScore The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
	 * @param {Object} opts.sortOrder Specifies result set sort order; if not specified, default sort order is descending (Desc) (default to Desc)
	 * @param {Object} opts.sortBy Specifies which field to sort the results by, default sort is by recommendedCompletionDate
	 * @param {Array.<String>} opts.types Specifies the module types to filter by
	 * @param {Array.<String>} opts.states Specifies the assignment states to filter by
	 * @param {Array.<String>} opts.expand Specifies the expand option for returning additional information
	 */},{key:"getLearningAssignmentsMe",value:function getLearningAssignmentsMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/assignments/me','GET',{},{'moduleId':opts['moduleId'],'interval':opts['interval'],'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'pass':opts['pass'],'minPercentageScore':opts['minPercentageScore'],'maxPercentageScore':opts['maxPercentageScore'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'types':this.apiClient.buildCollectionParam(opts['types'],'multi'),'states':this.apiClient.buildCollectionParam(opts['states'],'multi'),'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a learning module
	 * 
	 * @param {String} moduleId The ID of the learning module
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields to expand in response(case insensitive)
	 */},{key:"getLearningModule",value:function getLearningModule(moduleId,opts){opts=opts||{};// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling getLearningModule';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}','GET',{'moduleId':moduleId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific Learning Module job status
	 * 
	 * @param {String} moduleId The ID of the learning module
	 * @param {String} jobId The ID of the learning module job
	 */},{key:"getLearningModuleJob",value:function getLearningModuleJob(moduleId,jobId){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling getLearningModuleJob';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getLearningModuleJob';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/jobs/{jobId}','GET',{'moduleId':moduleId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a learning module rule
	 * 
	 * @param {String} moduleId The ID of the learning module
	 */},{key:"getLearningModuleRule",value:function getLearningModuleRule(moduleId){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling getLearningModuleRule';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/rule','GET',{'moduleId':moduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get specific version of a published module
	 * 
	 * @param {String} moduleId The ID of the learning module
	 * @param {String} versionId The version of learning module
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields to expand in response(case insensitive)
	 */},{key:"getLearningModuleVersion",value:function getLearningModuleVersion(moduleId,versionId,opts){opts=opts||{};// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling getLearningModuleVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getLearningModuleVersion';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/versions/{versionId}','GET',{'moduleId':moduleId,'versionId':versionId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all learning modules of an organization
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.isArchived Archive status (default to false)
	 * @param {Array.<String>} opts.types Specifies the module types.
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Sort order (default to ascending)
	 * @param {Object} opts.sortBy Sort by (default to name)
	 * @param {String} opts.searchTerm Search Term (searchable by name)
	 * @param {Array.<String>} opts.expand Fields to expand in response(case insensitive)
	 * @param {Object} opts.isPublished Specifies if only the Unpublished (isPublished is False) or Published (isPublished is True) modules are returned. If isPublished is Any or omitted, both types are returned (default to Any)
	 * @param {Array.<String>} opts.statuses Specifies the module statuses to filter by
	 * @param {Array.<String>} opts.externalIds Specifies the module external IDs to filter by. Only one ID is allowed
	 */},{key:"getLearningModules",value:function getLearningModules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/modules','GET',{},{'isArchived':opts['isArchived'],'types':this.apiClient.buildCollectionParam(opts['types'],'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'sortBy':opts['sortBy'],'searchTerm':opts['searchTerm'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'isPublished':opts['isPublished'],'statuses':this.apiClient.buildCollectionParam(opts['statuses'],'multi'),'externalIds':this.apiClient.buildCollectionParam(opts['externalIds'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all learning modules of an organization including assignments for a specific user
	 * 
	 * @param {Array.<String>} userIds The IDs of the users to include
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.searchTerm Search Term (searches by name and description)
	 * @param {Object} opts.overdue Specifies if only modules with overdue/not overdue (overdue is True or False) assignments are returned. If overdue is Any or omitted, both are returned and can including modules that are unassigned. (default to Any)
	 * @param {Array.<String>} opts.assignmentStates Specifies the assignment states to return.
	 * @param {Array.<String>} opts.expand Fields to expand in response(case insensitive)
	 */},{key:"getLearningModulesAssignments",value:function getLearningModulesAssignments(userIds,opts){opts=opts||{};// verify the required parameter 'userIds' is set
if(userIds===undefined||userIds===null){throw'Missing the required parameter "userIds" when calling getLearningModulesAssignments';}return this.apiClient.callApi('/api/v2/learning/modules/assignments','GET',{},{'userIds':this.apiClient.buildCollectionParam(userIds,'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'searchTerm':opts['searchTerm'],'overdue':opts['overdue'],'assignmentStates':this.apiClient.buildCollectionParam(opts['assignmentStates'],'multi'),'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific Learning Module cover art using ID
	 * 
	 * @param {String} coverArtId Key identifier for the cover art
	 */},{key:"getLearningModulesCoverartCoverArtId",value:function getLearningModulesCoverartCoverArtId(coverArtId){// verify the required parameter 'coverArtId' is set
if(coverArtId===undefined||coverArtId===null){throw'Missing the required parameter "coverArtId" when calling getLearningModulesCoverartCoverArtId';}return this.apiClient.callApi('/api/v2/learning/modules/coverart/{coverArtId}','GET',{'coverArtId':coverArtId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Learning Assignment
	 * 
	 * @param {String} assignmentId The ID of Learning Assignment
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The Learning Assignment to be updated
	 */},{key:"patchLearningAssignment",value:function patchLearningAssignment(assignmentId,opts){opts=opts||{};// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling patchLearningAssignment';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}','PATCH',{'assignmentId':assignmentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reschedule Learning Assignment
	 * 
	 * @param {String} assignmentId The ID of Learning Assignment
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The Learning assignment reschedule model
	 */},{key:"patchLearningAssignmentReschedule",value:function patchLearningAssignmentReschedule(assignmentId,opts){opts=opts||{};// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling patchLearningAssignmentReschedule';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}/reschedule','PATCH',{'assignmentId':assignmentId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an external assignment for a specific user
	 * 
	 * @param {String} moduleId Key identifier for the module
	 * @param {String} userId Key identifier for the user
	 * @param {Object} body The learning request for updating the assignment
	 * patchLearningModuleUserAssignments is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchLearningModuleUserAssignments",value:function patchLearningModuleUserAssignments(moduleId,userId,body){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling patchLearningModuleUserAssignments';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchLearningModuleUserAssignments';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchLearningModuleUserAssignments';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/users/{userId}/assignments','PATCH',{'moduleId':moduleId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Score learning assessment for preview
	 * 
	 * @param {Object} body Assessment form and answers to score
	 */},{key:"postLearningAssessmentsScoring",value:function postLearningAssessmentsScoring(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningAssessmentsScoring';}return this.apiClient.callApi('/api/v2/learning/assessments/scoring','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reassign Learning Assignment
	 * This will reassign the state of the assignment to Assigned and update the assignment to the latest version of the module
	 * @param {String} assignmentId The Learning Assignment ID
	 */},{key:"postLearningAssignmentReassign",value:function postLearningAssignmentReassign(assignmentId){// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling postLearningAssignmentReassign';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}/reassign','POST',{'assignmentId':assignmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reset Learning Assignment
	 * This will reset the state of the assignment to Assigned and remove the version of Learning module associated with the assignment
	 * @param {String} assignmentId The Learning Assignment ID
	 */},{key:"postLearningAssignmentReset",value:function postLearningAssignmentReset(assignmentId){// verify the required parameter 'assignmentId' is set
if(assignmentId===undefined||assignmentId===null){throw'Missing the required parameter "assignmentId" when calling postLearningAssignmentReset';}return this.apiClient.callApi('/api/v2/learning/assignments/{assignmentId}/reset','POST',{'assignmentId':assignmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Learning Assignment
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The Learning Assignment to be created
	 */},{key:"postLearningAssignments",value:function postLearningAssignments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/assignments','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve aggregated assignment data
	 * 
	 * @param {Object} body Aggregate Request
	 */},{key:"postLearningAssignmentsAggregatesQuery",value:function postLearningAssignmentsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningAssignmentsAggregatesQuery';}return this.apiClient.callApi('/api/v2/learning/assignments/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add multiple learning assignments
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<Object>} opts.body The learning assignments to be created
	 */},{key:"postLearningAssignmentsBulkadd",value:function postLearningAssignmentsBulkadd(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/assignments/bulkadd','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove multiple Learning Assignments
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.body The IDs of the learning assignments to be removed
	 */},{key:"postLearningAssignmentsBulkremove",value:function postLearningAssignmentsBulkremove(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/learning/assignments/bulkremove','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Starts a specified operation on learning module
	 * This will initiate operation specified in the request body for a learning module
	 * @param {String} moduleId The ID of the learning module
	 * @param {Object} body The learning module job request
	 */},{key:"postLearningModuleJobs",value:function postLearningModuleJobs(moduleId,body){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling postLearningModuleJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningModuleJobs';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/jobs','POST',{'moduleId':moduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish a Learning module
	 * 
	 * @param {String} moduleId The ID of the learning module
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The request body
	 */},{key:"postLearningModulePublish",value:function postLearningModulePublish(moduleId,opts){opts=opts||{};// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling postLearningModulePublish';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/publish','POST',{'moduleId':moduleId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new learning module
	 * This will create a new unpublished learning module with the specified fields.
	 * @param {Object} body The learning module to be created
	 */},{key:"postLearningModules",value:function postLearningModules(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningModules';}return this.apiClient.callApi('/api/v2/learning/modules','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get users for learning module rule
	 * This will get the users who matches the given rule.
	 * @param {Number} pageSize Page size
	 * @param {Number} pageNumber Page number
	 * @param {Object} body The learning module rule to fetch users
	 */},{key:"postLearningRulesQuery",value:function postLearningRulesQuery(pageSize,pageNumber,body){// verify the required parameter 'pageSize' is set
if(pageSize===undefined||pageSize===null){throw'Missing the required parameter "pageSize" when calling postLearningRulesQuery';}// verify the required parameter 'pageNumber' is set
if(pageNumber===undefined||pageNumber===null){throw'Missing the required parameter "pageNumber" when calling postLearningRulesQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningRulesQuery';}return this.apiClient.callApi('/api/v2/learning/rules/query','POST',{},{'pageSize':pageSize,'pageNumber':pageNumber},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of possible slots where a learning activity can be scheduled.
	 * 
	 * @param {Object} body The slot search request
	 */},{key:"postLearningScheduleslotsQuery",value:function postLearningScheduleslotsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLearningScheduleslotsQuery';}return this.apiClient.callApi('/api/v2/learning/scheduleslots/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a learning module
	 * This will update the name, description, completion time in days and inform steps for a learning module
	 * @param {String} moduleId The ID of the learning module
	 * @param {Object} body The learning module to be updated
	 */},{key:"putLearningModule",value:function putLearningModule(moduleId,body){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling putLearningModule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putLearningModule';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}','PUT',{'moduleId':moduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a learning module rule
	 * This will update a learning module rule with the specified fields.
	 * @param {String} moduleId The ID of the learning module
	 * @param {Object} body The learning module rule to be updated
	 */},{key:"putLearningModuleRule",value:function putLearningModuleRule(moduleId,body){// verify the required parameter 'moduleId' is set
if(moduleId===undefined||moduleId===null){throw'Missing the required parameter "moduleId" when calling putLearningModuleRule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putLearningModuleRule';}return this.apiClient.callApi('/api/v2/learning/modules/{moduleId}/rule','PUT',{'moduleId':moduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LearningApi;}();var LicenseApi=/*#__PURE__*/function(){/**
	 * License service.
	 * @module purecloud-platform-client-v2/api/LicenseApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LicenseApi. 
	 * @alias module:purecloud-platform-client-v2/api/LicenseApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LicenseApi(apiClient){_classCallCheck(this,LicenseApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get PureCloud license definition.
	 * 
	 * @param {String} licenseId ID
	 */_createClass(LicenseApi,[{key:"getLicenseDefinition",value:function getLicenseDefinition(licenseId){// verify the required parameter 'licenseId' is set
if(licenseId===undefined||licenseId===null){throw'Missing the required parameter "licenseId" when calling getLicenseDefinition';}return this.apiClient.callApi('/api/v2/license/definitions/{licenseId}','GET',{'licenseId':licenseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all PureCloud license definitions available for the organization.
	 * 
	 */},{key:"getLicenseDefinitions",value:function getLicenseDefinitions(){return this.apiClient.callApi('/api/v2/license/definitions','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated - no alternative required. This operation will always return 'true' for requested toggles
	 * 
	 * @param {String} featureName featureName
	 */},{key:"getLicenseToggle",value:function getLicenseToggle(featureName){// verify the required parameter 'featureName' is set
if(featureName===undefined||featureName===null){throw'Missing the required parameter "featureName" when calling getLicenseToggle';}return this.apiClient.callApi('/api/v2/license/toggles/{featureName}','GET',{'featureName':featureName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get licenses for specified user.
	 * 
	 * @param {String} userId ID
	 */},{key:"getLicenseUser",value:function getLicenseUser(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getLicenseUser';}return this.apiClient.callApi('/api/v2/license/users/{userId}','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a page of users and their licenses
	 * Retrieve a page of users in an organization along with the licenses they possess.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getLicenseUsers",value:function getLicenseUsers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/license/users','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of licenses inferred based on a list of roleIds
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.body The roleIds to use while inferring licenses
	 */},{key:"postLicenseInfer",value:function postLicenseInfer(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/license/infer','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the organization's license assignments in a batch.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body The license assignments to update.
	 */},{key:"postLicenseOrganization",value:function postLicenseOrganization(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/license/organization','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated. No alternative required - this endpoint has no effect
	 * 
	 * @param {String} featureName featureName
	 */},{key:"postLicenseToggle",value:function postLicenseToggle(featureName){// verify the required parameter 'featureName' is set
if(featureName===undefined||featureName===null){throw'Missing the required parameter "featureName" when calling postLicenseToggle';}return this.apiClient.callApi('/api/v2/license/toggles/{featureName}','POST',{'featureName':featureName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch user licenses in a batch.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.body The user IDs to fetch.
	 */},{key:"postLicenseUsers",value:function postLicenseUsers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/license/users','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LicenseApi;}();var LocationsApi=/*#__PURE__*/function(){/**
	 * Locations service.
	 * @module purecloud-platform-client-v2/api/LocationsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LocationsApi. 
	 * @alias module:purecloud-platform-client-v2/api/LocationsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LocationsApi(apiClient){_classCallCheck(this,LocationsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a location
	 * 
	 * @param {String} locationId Location ID
	 */_createClass(LocationsApi,[{key:"deleteLocation",value:function deleteLocation(locationId){// verify the required parameter 'locationId' is set
if(locationId===undefined||locationId===null){throw'Missing the required parameter "locationId" when calling deleteLocation';}return this.apiClient.callApi('/api/v2/locations/{locationId}','DELETE',{'locationId':locationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Location by ID.
	 * 
	 * @param {String} locationId Location ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getLocation",value:function getLocation(locationId,opts){opts=opts||{};// verify the required parameter 'locationId' is set
if(locationId===undefined||locationId===null){throw'Missing the required parameter "locationId" when calling getLocation';}return this.apiClient.callApi('/api/v2/locations/{locationId}','GET',{'locationId':locationId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get sublocations for location ID.
	 * 
	 * @param {String} locationId Location ID
	 */},{key:"getLocationSublocations",value:function getLocationSublocations(locationId){// verify the required parameter 'locationId' is set
if(locationId===undefined||locationId===null){throw'Missing the required parameter "locationId" when calling getLocationSublocations';}return this.apiClient.callApi('/api/v2/locations/{locationId}/sublocations','GET',{'locationId':locationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of all locations.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id id
	 * @param {Object} opts.sortOrder Sort order
	 */},{key:"getLocations",value:function getLocations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/locations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search locations using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Provides more details about a specified resource
	 */},{key:"getLocationsSearch",value:function getLocationsSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getLocationsSearch';}return this.apiClient.callApi('/api/v2/locations/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a location
	 * 
	 * @param {String} locationId Location ID
	 * @param {Object} body Location
	 */},{key:"patchLocation",value:function patchLocation(locationId,body){// verify the required parameter 'locationId' is set
if(locationId===undefined||locationId===null){throw'Missing the required parameter "locationId" when calling patchLocation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchLocation';}return this.apiClient.callApi('/api/v2/locations/{locationId}','PATCH',{'locationId':locationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a location
	 * 
	 * @param {Object} body Location
	 */},{key:"postLocations",value:function postLocations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLocations';}return this.apiClient.callApi('/api/v2/locations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search locations
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postLocationsSearch",value:function postLocationsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLocationsSearch';}return this.apiClient.callApi('/api/v2/locations/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LocationsApi;}();var LogCaptureApi=/*#__PURE__*/function(){/**
	 * LogCapture service.
	 * @module purecloud-platform-client-v2/api/LogCaptureApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new LogCaptureApi. 
	 * @alias module:purecloud-platform-client-v2/api/LogCaptureApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function LogCaptureApi(apiClient){_classCallCheck(this,LogCaptureApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Gets status of async download execution
	 * 
	 * @param {String} jobId Job ID
	 */_createClass(LogCaptureApi,[{key:"getDiagnosticsLogcaptureBrowserEntriesDownloadJob",value:function getDiagnosticsLogcaptureBrowserEntriesDownloadJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getDiagnosticsLogcaptureBrowserEntriesDownloadJob';}return this.apiClient.callApi('/api/v2/diagnostics/logcapture/browser/entries/download/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates an async download execution
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postDiagnosticsLogcaptureBrowserEntriesDownloadJobs",value:function postDiagnosticsLogcaptureBrowserEntriesDownloadJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/diagnostics/logcapture/browser/entries/download/jobs','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return LogCaptureApi;}();var MessagingApi=/*#__PURE__*/function(){/**
	 * Messaging service.
	 * @module purecloud-platform-client-v2/api/MessagingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new MessagingApi. 
	 * @alias module:purecloud-platform-client-v2/api/MessagingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function MessagingApi(apiClient){_classCallCheck(this,MessagingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a messaging setting
	 * 
	 * @param {String} messageSettingId Message Settings ID
	 * @deprecated
	 */_createClass(MessagingApi,[{key:"deleteMessagingSetting",value:function deleteMessagingSetting(messageSettingId){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling deleteMessagingSetting';}return this.apiClient.callApi('/api/v2/messaging/settings/{messageSettingId}','DELETE',{'messageSettingId':messageSettingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the organization's default setting, a global default will be applied to integrations without settings
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be applied to it.
	 * @deprecated
	 */},{key:"deleteMessagingSettingsDefault",value:function deleteMessagingSettingsDefault(){return this.apiClient.callApi('/api/v2/messaging/settings/default','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a supported content profile
	 * Deprecated - use DELETE /api/v2/conversations/messaging/supportedcontent/{supportedContentId} as replacement
	 * @param {String} supportedContentId Supported Content ID
	 * @deprecated
	 */},{key:"deleteMessagingSupportedcontentSupportedContentId",value:function deleteMessagingSupportedcontentSupportedContentId(supportedContentId){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling deleteMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/messaging/supportedcontent/{supportedContentId}','DELETE',{'supportedContentId':supportedContentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a messaging setting
	 * 
	 * @param {String} messageSettingId Message Settings ID
	 * @deprecated
	 */},{key:"getMessagingSetting",value:function getMessagingSetting(messageSettingId){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling getMessagingSetting';}return this.apiClient.callApi('/api/v2/messaging/settings/{messageSettingId}','GET',{'messageSettingId':messageSettingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of messaging settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @deprecated
	 */},{key:"getMessagingSettings",value:function getMessagingSettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/messaging/settings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the organization's default settings that will be used as the default when creating an integration.
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be applied to it.
	 * @deprecated
	 */},{key:"getMessagingSettingsDefault",value:function getMessagingSettingsDefault(){return this.apiClient.callApi('/api/v2/messaging/settings/default','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Supported Content profiles
	 * Deprecated - use GET /api/v2/conversations/messaging/supportedcontent as replacement
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @deprecated
	 */},{key:"getMessagingSupportedcontent",value:function getMessagingSupportedcontent(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/messaging/supportedcontent','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a supported content profile
	 * Deprecated - use GET /api/v2/conversations/messaging/supportedcontent/{supportedContentId} as replacement
	 * @param {String} supportedContentId Supported Content ID
	 * @deprecated
	 */},{key:"getMessagingSupportedcontentSupportedContentId",value:function getMessagingSupportedcontentSupportedContentId(supportedContentId){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling getMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/messaging/supportedcontent/{supportedContentId}','GET',{'supportedContentId':supportedContentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a messaging setting
	 * 
	 * @param {String} messageSettingId Message Settings ID
	 * @param {Object} body MessagingSetting
	 * @deprecated
	 */},{key:"patchMessagingSetting",value:function patchMessagingSetting(messageSettingId,body){// verify the required parameter 'messageSettingId' is set
if(messageSettingId===undefined||messageSettingId===null){throw'Missing the required parameter "messageSettingId" when calling patchMessagingSetting';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchMessagingSetting';}return this.apiClient.callApi('/api/v2/messaging/settings/{messageSettingId}','PATCH',{'messageSettingId':messageSettingId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a supported content profile
	 * Deprecated - use PATCH /api/v2/conversations/messaging/supportedcontent/{supportedContentId} as replacement
	 * @param {String} supportedContentId Supported Content ID
	 * @param {Object} body SupportedContent
	 * @deprecated
	 */},{key:"patchMessagingSupportedcontentSupportedContentId",value:function patchMessagingSupportedcontentSupportedContentId(supportedContentId,body){// verify the required parameter 'supportedContentId' is set
if(supportedContentId===undefined||supportedContentId===null){throw'Missing the required parameter "supportedContentId" when calling patchMessagingSupportedcontentSupportedContentId';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchMessagingSupportedcontentSupportedContentId';}return this.apiClient.callApi('/api/v2/messaging/supportedcontent/{supportedContentId}','PATCH',{'supportedContentId':supportedContentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a messaging setting
	 * 
	 * @param {Object} body MessagingSetting
	 * @deprecated
	 */},{key:"postMessagingSettings",value:function postMessagingSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postMessagingSettings';}return this.apiClient.callApi('/api/v2/messaging/settings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Supported Content profile
	 * Deprecated - use POST /api/v2/conversations/messaging/supportedcontent as replacement
	 * @param {Object} body SupportedContent
	 * @deprecated
	 */},{key:"postMessagingSupportedcontent",value:function postMessagingSupportedcontent(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postMessagingSupportedcontent';}return this.apiClient.callApi('/api/v2/messaging/supportedcontent','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set the organization's default settings that may be applied to an integration when it is created.
	 * When an integration is created a settings ID may be assigned to it. If the settings ID is not supplied, the default settings will be applied to it.
	 * @param {Object} body Messaging Setting ID
	 * @deprecated
	 */},{key:"putMessagingSettingsDefault",value:function putMessagingSettingsDefault(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putMessagingSettingsDefault';}return this.apiClient.callApi('/api/v2/messaging/settings/default','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return MessagingApi;}();var MobileDevicesApi=/*#__PURE__*/function(){/**
	 * MobileDevices service.
	 * @module purecloud-platform-client-v2/api/MobileDevicesApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new MobileDevicesApi. 
	 * @alias module:purecloud-platform-client-v2/api/MobileDevicesApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function MobileDevicesApi(apiClient){_classCallCheck(this,MobileDevicesApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete device
	 * 
	 * @param {String} deviceId Device ID
	 */_createClass(MobileDevicesApi,[{key:"deleteMobiledevice",value:function deleteMobiledevice(deviceId){// verify the required parameter 'deviceId' is set
if(deviceId===undefined||deviceId===null){throw'Missing the required parameter "deviceId" when calling deleteMobiledevice';}return this.apiClient.callApi('/api/v2/mobiledevices/{deviceId}','DELETE',{'deviceId':deviceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get device
	 * 
	 * @param {String} deviceId Device ID
	 */},{key:"getMobiledevice",value:function getMobiledevice(deviceId){// verify the required parameter 'deviceId' is set
if(deviceId===undefined||deviceId===null){throw'Missing the required parameter "deviceId" when calling getMobiledevice';}return this.apiClient.callApi('/api/v2/mobiledevices/{deviceId}','GET',{'deviceId':deviceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of all devices.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ascending)
	 */},{key:"getMobiledevices",value:function getMobiledevices(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/mobiledevices','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create User device
	 * 
	 * @param {Object} body Device
	 */},{key:"postMobiledevices",value:function postMobiledevices(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postMobiledevices';}return this.apiClient.callApi('/api/v2/mobiledevices','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update device
	 * 
	 * @param {String} deviceId Device ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Device
	 */},{key:"putMobiledevice",value:function putMobiledevice(deviceId,opts){opts=opts||{};// verify the required parameter 'deviceId' is set
if(deviceId===undefined||deviceId===null){throw'Missing the required parameter "deviceId" when calling putMobiledevice';}return this.apiClient.callApi('/api/v2/mobiledevices/{deviceId}','PUT',{'deviceId':deviceId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return MobileDevicesApi;}();var NotificationsApi=/*#__PURE__*/function(){/**
	 * Notifications service.
	 * @module purecloud-platform-client-v2/api/NotificationsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new NotificationsApi. 
	 * @alias module:purecloud-platform-client-v2/api/NotificationsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function NotificationsApi(apiClient){_classCallCheck(this,NotificationsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Remove all subscriptions
	 * 
	 * @param {String} channelId Channel ID
	 */_createClass(NotificationsApi,[{key:"deleteNotificationsChannelSubscriptions",value:function deleteNotificationsChannelSubscriptions(channelId){// verify the required parameter 'channelId' is set
if(channelId===undefined||channelId===null){throw'Missing the required parameter "channelId" when calling deleteNotificationsChannelSubscriptions';}return this.apiClient.callApi('/api/v2/notifications/channels/{channelId}/subscriptions','DELETE',{'channelId':channelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get available notification topics.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.includePreview Whether or not to include Preview topics (default to true)
	 */},{key:"getNotificationsAvailabletopics",value:function getNotificationsAvailabletopics(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/notifications/availabletopics','GET',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'includePreview':opts['includePreview']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of all subscriptions for this channel
	 * 
	 * @param {String} channelId Channel ID
	 */},{key:"getNotificationsChannelSubscriptions",value:function getNotificationsChannelSubscriptions(channelId){// verify the required parameter 'channelId' is set
if(channelId===undefined||channelId===null){throw'Missing the required parameter "channelId" when calling getNotificationsChannelSubscriptions';}return this.apiClient.callApi('/api/v2/notifications/channels/{channelId}/subscriptions','GET',{'channelId':channelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of existing channels
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.includechannels Show user's channels for this specific token or across all tokens for this user and app.  Channel Ids for other access tokens will not be shown, but will be presented to show their existence. (default to token)
	 */},{key:"getNotificationsChannels",value:function getNotificationsChannels(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/notifications/channels','GET',{},{'includechannels':opts['includechannels']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Verify a channel still exists and is valid
	 * Returns a 200 OK if channel exists, and a 404 Not Found if it doesnt
	 * @param {String} channelId Channel ID
	 */},{key:"headNotificationsChannel",value:function headNotificationsChannel(channelId){// verify the required parameter 'channelId' is set
if(channelId===undefined||channelId===null){throw'Missing the required parameter "channelId" when calling headNotificationsChannel';}return this.apiClient.callApi('/api/v2/notifications/channels/{channelId}','HEAD',{'channelId':channelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a list of subscriptions to the existing list of subscriptions
	 * 
	 * @param {String} channelId Channel ID
	 * @param {Array.<Object>} body Body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.ignoreErrors Optionally prevent throwing of errors for failed permissions checks. (default to false)
	 */},{key:"postNotificationsChannelSubscriptions",value:function postNotificationsChannelSubscriptions(channelId,body,opts){opts=opts||{};// verify the required parameter 'channelId' is set
if(channelId===undefined||channelId===null){throw'Missing the required parameter "channelId" when calling postNotificationsChannelSubscriptions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postNotificationsChannelSubscriptions';}return this.apiClient.callApi('/api/v2/notifications/channels/{channelId}/subscriptions','POST',{'channelId':channelId},{'ignoreErrors':opts['ignoreErrors']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new channel
	 * There is a limit of 20 channels per user/app combination. Creating a 21st channel will remove the channel with oldest last used date. Channels without an active connection will be removed first.
	 */},{key:"postNotificationsChannels",value:function postNotificationsChannels(){return this.apiClient.callApi('/api/v2/notifications/channels','POST',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace the current list of subscriptions with a new list.
	 * 
	 * @param {String} channelId Channel ID
	 * @param {Array.<Object>} body Body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.ignoreErrors Optionally prevent throwing of errors for failed permissions checks. (default to false)
	 */},{key:"putNotificationsChannelSubscriptions",value:function putNotificationsChannelSubscriptions(channelId,body,opts){opts=opts||{};// verify the required parameter 'channelId' is set
if(channelId===undefined||channelId===null){throw'Missing the required parameter "channelId" when calling putNotificationsChannelSubscriptions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putNotificationsChannelSubscriptions';}return this.apiClient.callApi('/api/v2/notifications/channels/{channelId}/subscriptions','PUT',{'channelId':channelId},{'ignoreErrors':opts['ignoreErrors']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return NotificationsApi;}();var OAuthApi=/*#__PURE__*/function(){/**
	 * OAuth service.
	 * @module purecloud-platform-client-v2/api/OAuthApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new OAuthApi. 
	 * @alias module:purecloud-platform-client-v2/api/OAuthApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function OAuthApi(apiClient){_classCallCheck(this,OAuthApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete OAuth Client
	 * 
	 * @param {String} clientId Client ID
	 */_createClass(OAuthApi,[{key:"deleteOauthClient",value:function deleteOauthClient(clientId){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling deleteOauthClient';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}','DELETE',{'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a client that is authorized by the resource owner
	 * 
	 * @param {String} clientId The ID of client
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.acceptLanguage The language in which to display the client descriptions. (default to en-us)
	 */},{key:"getOauthAuthorization",value:function getOauthAuthorization(clientId,opts){opts=opts||{};// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthAuthorization';}return this.apiClient.callApi('/api/v2/oauth/authorizations/{clientId}','GET',{'clientId':clientId},{},{'Accept-Language':opts['acceptLanguage']},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List clients that have been authorized, requested, or revoked by the resource owner
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.acceptLanguage The language in which to display the client descriptions. (default to en-us)
	 */},{key:"getOauthAuthorizations",value:function getOauthAuthorizations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/oauth/authorizations','GET',{},{},{'Accept-Language':opts['acceptLanguage']},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get OAuth Client
	 * 
	 * @param {String} clientId Client ID
	 */},{key:"getOauthClient",value:function getOauthClient(clientId){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthClient';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}','GET',{'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the results of a usage query
	 * 
	 * @param {String} executionId ID of the query execution
	 * @param {String} clientId Client ID
	 */},{key:"getOauthClientUsageQueryResult",value:function getOauthClientUsageQueryResult(executionId,clientId){// verify the required parameter 'executionId' is set
if(executionId===undefined||executionId===null){throw'Missing the required parameter "executionId" when calling getOauthClientUsageQueryResult';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthClientUsageQueryResult';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}','GET',{'executionId':executionId,'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a summary of OAuth client API usage
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {String} clientId Client ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.days Previous number of days to query (default to 7)
	 */},{key:"getOauthClientUsageSummary",value:function getOauthClientUsageSummary(clientId,opts){opts=opts||{};// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthClientUsageSummary';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/summary','GET',{'clientId':clientId},{'days':opts['days']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of OAuth clients
	 * 
	 */},{key:"getOauthClients",value:function getOauthClients(){return this.apiClient.callApi('/api/v2/oauth/clients','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * An OAuth scope
	 * 
	 * @param {String} scopeId Scope ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.acceptLanguage The language with which to display the scope description. (default to en-us)
	 */},{key:"getOauthScope",value:function getOauthScope(scopeId,opts){opts=opts||{};// verify the required parameter 'scopeId' is set
if(scopeId===undefined||scopeId===null){throw'Missing the required parameter "scopeId" when calling getOauthScope';}return this.apiClient.callApi('/api/v2/oauth/scopes/{scopeId}','GET',{'scopeId':scopeId},{},{'Accept-Language':opts['acceptLanguage']},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of OAuth scopes
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.acceptLanguage The language with which to display the scope descriptions. (default to en-us)
	 */},{key:"getOauthScopes",value:function getOauthScopes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/oauth/scopes','GET',{},{},{'Accept-Language':opts['acceptLanguage']},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Regenerate Client Secret
	 * This operation will set the client secret to a randomly generated cryptographically random value. All clients must be updated with the new secret. This operation should be used with caution.
	 * @param {String} clientId Client ID
	 */},{key:"postOauthClientSecret",value:function postOauthClientSecret(clientId){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling postOauthClientSecret';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/secret','POST',{'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for OAuth client API usage
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {String} clientId Client ID
	 * @param {Object} body Query
	 */},{key:"postOauthClientUsageQuery",value:function postOauthClientUsageQuery(clientId,body){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling postOauthClientUsageQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOauthClientUsageQuery';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/query','POST',{'clientId':clientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create OAuth client
	 * The OAuth Grant/Client is required in order to create an authentication token and gain access to PureCloud.  The preferred authorizedGrantTypes is CODE which requires applications to send a client ID and client secret. This is typically a web server.  If the client is unable to secure the client secret then the TOKEN grant type aka IMPLICIT should be used. This is would be for browser or mobile apps.  If a client is to be used outside of the context of a user then the CLIENT-CREDENTIALS grant may be used. In this case the client must be granted roles  via the roleIds field.
	 * @param {Object} body Client
	 */},{key:"postOauthClients",value:function postOauthClients(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOauthClients';}return this.apiClient.callApi('/api/v2/oauth/clients','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update OAuth Client
	 * 
	 * @param {String} clientId Client ID
	 * @param {Object} body Client
	 */},{key:"putOauthClient",value:function putOauthClient(clientId,body){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling putOauthClient';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOauthClient';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}','PUT',{'clientId':clientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return OAuthApi;}();var ObjectsApi=/*#__PURE__*/function(){/**
	 * Objects service.
	 * @module purecloud-platform-client-v2/api/ObjectsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ObjectsApi. 
	 * @alias module:purecloud-platform-client-v2/api/ObjectsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ObjectsApi(apiClient){_classCallCheck(this,ObjectsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.force Force delete this division as well as the grants and objects associated with it (default to false)
	 */_createClass(ObjectsApi,[{key:"deleteAuthorizationDivision",value:function deleteAuthorizationDivision(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling deleteAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','DELETE',{'divisionId':divisionId},{'force':opts['force']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns an authorization division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.objectCount Get count of objects in this division, grouped by type (default to false)
	 */},{key:"getAuthorizationDivision",value:function getAuthorizationDivision(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling getAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','GET',{'divisionId':divisionId},{'objectCount':opts['objectCount']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of all divisions defined for the organization
	 * Request specific divisions by id using a query param "id", e.g.  ?id=5f777167-63be-4c24-ad41-374155d9e28b&id=72e9fb25-c484-488d-9312-7acba82435b3
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Boolean} opts.objectCount Include the count of objects contained in the division (default to false)
	 * @param {Array.<String>} opts.id Optionally request specific divisions by their IDs
	 * @param {String} opts.name Search term to filter by division name
	 */},{key:"getAuthorizationDivisions",value:function getAuthorizationDivisions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/authorization/divisions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'objectCount':opts['objectCount'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve the home division for the organization.
	 * Will not include object counts.
	 */},{key:"getAuthorizationDivisionsHome",value:function getAuthorizationDivisionsHome(){return this.apiClient.callApi('/api/v2/authorization/divisions/home','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the maximum allowed number of divisions.
	 * 
	 */},{key:"getAuthorizationDivisionsLimit",value:function getAuthorizationDivisionsLimit(){return this.apiClient.callApi('/api/v2/authorization/divisions/limit','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Assign a list of objects to a division
	 * Set the division of a specified list of objects. The objects must all be of the same type, one of:  CAMPAIGN, MANAGEMENTUNIT, FLOW, QUEUE, DATATABLES or USER.  The body of the request is a list of object IDs, which are expected to be  GUIDs, e.g. ["206ce31f-61ec-40ed-a8b1-be6f06303998","250a754e-f5e4-4f51-800f-a92f09d3bf8c"]
	 * @param {String} divisionId Division ID
	 * @param {Object} objectType The type of the objects. Must be one of the valid object types
	 * @param {Array.<String>} body Object Id List
	 */},{key:"postAuthorizationDivisionObject",value:function postAuthorizationDivisionObject(divisionId,objectType,body){// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationDivisionObject';}// verify the required parameter 'objectType' is set
if(objectType===undefined||objectType===null){throw'Missing the required parameter "objectType" when calling postAuthorizationDivisionObject';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationDivisionObject';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}/objects/{objectType}','POST',{'divisionId':divisionId,'objectType':objectType},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Recreate a previously deleted division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Recreated division data
	 */},{key:"postAuthorizationDivisionRestore",value:function postAuthorizationDivisionRestore(divisionId,opts){opts=opts||{};// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationDivisionRestore';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}/restore','POST',{'divisionId':divisionId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a division.
	 * 
	 * @param {Object} body Division
	 */},{key:"postAuthorizationDivisions",value:function postAuthorizationDivisions(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationDivisions';}return this.apiClient.callApi('/api/v2/authorization/divisions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a division.
	 * 
	 * @param {String} divisionId Division ID
	 * @param {Object} body Updated division data
	 */},{key:"putAuthorizationDivision",value:function putAuthorizationDivision(divisionId,body){// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling putAuthorizationDivision';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putAuthorizationDivision';}return this.apiClient.callApi('/api/v2/authorization/divisions/{divisionId}','PUT',{'divisionId':divisionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ObjectsApi;}();var OperationalEventsApi=/*#__PURE__*/function(){/**
	 * OperationalEvents service.
	 * @module purecloud-platform-client-v2/api/OperationalEventsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new OperationalEventsApi. 
	 * @alias module:purecloud-platform-client-v2/api/OperationalEventsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function OperationalEventsApi(apiClient){_classCallCheck(this,OperationalEventsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get an operational event definition by its id
	 * 
	 * @param {String} eventDefinitionId EventDefinition id
	 */_createClass(OperationalEventsApi,[{key:"getUsageEventsDefinition",value:function getUsageEventsDefinition(eventDefinitionId){// verify the required parameter 'eventDefinitionId' is set
if(eventDefinitionId===undefined||eventDefinitionId===null){throw'Missing the required parameter "eventDefinitionId" when calling getUsageEventsDefinition';}return this.apiClient.callApi('/api/v2/usage/events/definitions/{eventDefinitionId}','GET',{'eventDefinitionId':eventDefinitionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all operational event definitions
	 * 
	 */},{key:"getUsageEventsDefinitions",value:function getUsageEventsDefinitions(){return this.apiClient.callApi('/api/v2/usage/events/definitions','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return OperationalEventsApi;}();var OrganizationApi=/*#__PURE__*/function(){/**
	 * Organization service.
	 * @module purecloud-platform-client-v2/api/OrganizationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new OrganizationApi. 
	 * @alias module:purecloud-platform-client-v2/api/OrganizationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function OrganizationApi(apiClient){_classCallCheck(this,OrganizationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Fetch field config for an entity type
	 * 
	 * @param {Object} type Field type
	 * @deprecated
	 */_createClass(OrganizationApi,[{key:"getFieldconfig",value:function getFieldconfig(type){// verify the required parameter 'type' is set
if(type===undefined||type===null){throw'Missing the required parameter "type" when calling getFieldconfig';}return this.apiClient.callApi('/api/v2/fieldconfig','GET',{},{'type':type},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets the organization's settings
	 * 
	 */},{key:"getOrganizationsAuthenticationSettings",value:function getOrganizationsAuthenticationSettings(){return this.apiClient.callApi('/api/v2/organizations/authentication/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of domains that will be allowed to embed PureCloud applications
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * @deprecated
	 */},{key:"getOrganizationsEmbeddedintegration",value:function getOrganizationsEmbeddedintegration(){return this.apiClient.callApi('/api/v2/organizations/embeddedintegration','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get organization IP address whitelist settings
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * @deprecated
	 */},{key:"getOrganizationsIpaddressauthentication",value:function getOrganizationsIpaddressauthentication(){return this.apiClient.callApi('/api/v2/organizations/ipaddressauthentication','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a limit change request
	 * 
	 * @param {String} requestId Unique id for the limit change request
	 */},{key:"getOrganizationsLimitsChangerequest",value:function getOrganizationsLimitsChangerequest(requestId){// verify the required parameter 'requestId' is set
if(requestId===undefined||requestId===null){throw'Missing the required parameter "requestId" when calling getOrganizationsLimitsChangerequest';}return this.apiClient.callApi('/api/v2/organizations/limits/changerequests/{requestId}','GET',{'requestId':requestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the available limit change requests
	 * Timestamp interval defaults to the last 365 days if both query parameters are omitted. If only one parameter is omitted, the interval will default to a 180 day range in the specified direction.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.after Timestamp indicating the date to begin after when searching for requests.
	 * @param {Number} opts.before Timestamp indicating the date to end before when searching for requests.
	 * @param {Object} opts.status Status of the request to be filtered by
	 * @param {Number} opts.pageSize Page Size (default to 25)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getOrganizationsLimitsChangerequests",value:function getOrganizationsLimitsChangerequests(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/organizations/limits/changerequests','GET',{},{'after':opts['after'],'before':opts['before'],'status':opts['status'],'pageSize':opts['pageSize'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a link to the limit documentation
	 * 
	 */},{key:"getOrganizationsLimitsDocs",value:function getOrganizationsLimitsDocs(){return this.apiClient.callApi('/api/v2/organizations/limits/docs','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the effective limits in a namespace for an organization
	 * 
	 * @param {String} namespaceName The namespace to fetch limits for
	 */},{key:"getOrganizationsLimitsNamespace",value:function getOrganizationsLimitsNamespace(namespaceName){// verify the required parameter 'namespaceName' is set
if(namespaceName===undefined||namespaceName===null){throw'Missing the required parameter "namespaceName" when calling getOrganizationsLimitsNamespace';}return this.apiClient.callApi('/api/v2/organizations/limits/namespaces/{namespaceName}','GET',{'namespaceName':namespaceName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the default limits in a namespace for an organization
	 * 
	 * @param {String} namespaceName The namespace to fetch defaults limits for
	 */},{key:"getOrganizationsLimitsNamespaceDefaults",value:function getOrganizationsLimitsNamespaceDefaults(namespaceName){// verify the required parameter 'namespaceName' is set
if(namespaceName===undefined||namespaceName===null){throw'Missing the required parameter "namespaceName" when calling getOrganizationsLimitsNamespaceDefaults';}return this.apiClient.callApi('/api/v2/organizations/limits/namespaces/{namespaceName}/defaults','GET',{'namespaceName':namespaceName},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the available limit namespaces
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 100)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrganizationsLimitsNamespaces",value:function getOrganizationsLimitsNamespaces(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/organizations/limits/namespaces','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get organization.
	 * 
	 */},{key:"getOrganizationsMe",value:function getOrganizationsMe(){return this.apiClient.callApi('/api/v2/organizations/me','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * 
	 * @deprecated
	 */},{key:"getOrganizationsWhitelist",value:function getOrganizationsWhitelist(){return this.apiClient.callApi('/api/v2/organizations/whitelist','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the organization's settings
	 * 
	 * @param {Object} body Org settings
	 */},{key:"patchOrganizationsAuthenticationSettings",value:function patchOrganizationsAuthenticationSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchOrganizationsAuthenticationSettings';}return this.apiClient.callApi('/api/v2/organizations/authentication/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update organization
	 * 
	 * @param {Object} featureName Organization feature
	 * @param {Object} enabled New state of feature
	 */},{key:"patchOrganizationsFeature",value:function patchOrganizationsFeature(featureName,enabled){// verify the required parameter 'featureName' is set
if(featureName===undefined||featureName===null){throw'Missing the required parameter "featureName" when calling patchOrganizationsFeature';}// verify the required parameter 'enabled' is set
if(enabled===undefined||enabled===null){throw'Missing the required parameter "enabled" when calling patchOrganizationsFeature';}return this.apiClient.callApi('/api/v2/organizations/features/{featureName}','PATCH',{'featureName':featureName},{},{},{},enabled,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the list of domains that will be allowed to embed PureCloud applications
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * @param {Object} body Whitelist settings
	 * @deprecated
	 */},{key:"putOrganizationsEmbeddedintegration",value:function putOrganizationsEmbeddedintegration(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrganizationsEmbeddedintegration';}return this.apiClient.callApi('/api/v2/organizations/embeddedintegration','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update organization IP address whitelist settings
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * @param {Object} body IP address Whitelist settings
	 * @deprecated
	 */},{key:"putOrganizationsIpaddressauthentication",value:function putOrganizationsIpaddressauthentication(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrganizationsIpaddressauthentication';}return this.apiClient.callApi('/api/v2/organizations/ipaddressauthentication','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update organization.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Organization
	 */},{key:"putOrganizationsMe",value:function putOrganizationsMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/organizations/me','PUT',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * This route is deprecated, please use /api/v2/organizations/authentication/settings instead
	 * 
	 * @param {Object} body Whitelist settings
	 * @deprecated
	 */},{key:"putOrganizationsWhitelist",value:function putOrganizationsWhitelist(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrganizationsWhitelist';}return this.apiClient.callApi('/api/v2/organizations/whitelist','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return OrganizationApi;}();var OrganizationAuthorizationApi=/*#__PURE__*/function(){/**
	 * OrganizationAuthorization service.
	 * @module purecloud-platform-client-v2/api/OrganizationAuthorizationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new OrganizationAuthorizationApi. 
	 * @alias module:purecloud-platform-client-v2/api/OrganizationAuthorizationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function OrganizationAuthorizationApi(apiClient){_classCallCheck(this,OrganizationAuthorizationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete Org Trust
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 */_createClass(OrganizationAuthorizationApi,[{key:"deleteOrgauthorizationTrustee",value:function deleteOrgauthorizationTrustee(trusteeOrgId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrustee';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}','DELETE',{'trusteeOrgId':trusteeOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes cloned user
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Id of the cloned user to delete
	 */},{key:"deleteOrgauthorizationTrusteeCloneduser",value:function deleteOrgauthorizationTrusteeCloneduser(trusteeOrgId,trusteeUserId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrusteeCloneduser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling deleteOrgauthorizationTrusteeCloneduser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers/{trusteeUserId}','DELETE',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee Group
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 */},{key:"deleteOrgauthorizationTrusteeGroup",value:function deleteOrgauthorizationTrusteeGroup(trusteeOrgId,trusteeGroupId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrusteeGroup';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling deleteOrgauthorizationTrusteeGroup';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}','DELETE',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee Group Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 */},{key:"deleteOrgauthorizationTrusteeGroupRoles",value:function deleteOrgauthorizationTrusteeGroupRoles(trusteeOrgId,trusteeGroupId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrusteeGroupRoles';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling deleteOrgauthorizationTrusteeGroupRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles','DELETE',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee User
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"deleteOrgauthorizationTrusteeUser",value:function deleteOrgauthorizationTrusteeUser(trusteeOrgId,trusteeUserId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrusteeUser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling deleteOrgauthorizationTrusteeUser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}','DELETE',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee User Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"deleteOrgauthorizationTrusteeUserRoles",value:function deleteOrgauthorizationTrusteeUserRoles(trusteeOrgId,trusteeUserId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling deleteOrgauthorizationTrusteeUserRoles';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling deleteOrgauthorizationTrusteeUserRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles','DELETE',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Bulk Org Trustees
	 * 
	 * @param {Array.<String>} id Comma separated list of trustee ids to remove
	 * deleteOrgauthorizationTrustees is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteOrgauthorizationTrustees",value:function deleteOrgauthorizationTrustees(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteOrgauthorizationTrustees';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Org Trust
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 */},{key:"deleteOrgauthorizationTrustor",value:function deleteOrgauthorizationTrustor(trustorOrgId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling deleteOrgauthorizationTrustor';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}','DELETE',{'trustorOrgId':trustorOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Cloned User
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"deleteOrgauthorizationTrustorCloneduser",value:function deleteOrgauthorizationTrustorCloneduser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling deleteOrgauthorizationTrustorCloneduser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling deleteOrgauthorizationTrustorCloneduser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}','DELETE',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee Group
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trustorGroupId Trustor Group Id
	 */},{key:"deleteOrgauthorizationTrustorGroup",value:function deleteOrgauthorizationTrustorGroup(trustorOrgId,trustorGroupId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling deleteOrgauthorizationTrustorGroup';}// verify the required parameter 'trustorGroupId' is set
if(trustorGroupId===undefined||trustorGroupId===null){throw'Missing the required parameter "trustorGroupId" when calling deleteOrgauthorizationTrustorGroup';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}','DELETE',{'trustorOrgId':trustorOrgId,'trustorGroupId':trustorGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Trustee User
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"deleteOrgauthorizationTrustorUser",value:function deleteOrgauthorizationTrustorUser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling deleteOrgauthorizationTrustorUser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling deleteOrgauthorizationTrustorUser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}','DELETE',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Bulk Org Trustors
	 * 
	 * @param {Array.<String>} id Comma separated list of trustor ids to remove
	 * deleteOrgauthorizationTrustors is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteOrgauthorizationTrustors",value:function deleteOrgauthorizationTrustors(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteOrgauthorizationTrustors';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Pairing Info
	 * 
	 * @param {String} pairingId Pairing Id
	 */},{key:"getOrgauthorizationPairing",value:function getOrgauthorizationPairing(pairingId){// verify the required parameter 'pairingId' is set
if(pairingId===undefined||pairingId===null){throw'Missing the required parameter "pairingId" when calling getOrgauthorizationPairing';}return this.apiClient.callApi('/api/v2/orgauthorization/pairings/{pairingId}','GET',{'pairingId':pairingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Org Trust
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 */},{key:"getOrgauthorizationTrustee",value:function getOrgauthorizationTrustee(trusteeOrgId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrustee';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}','GET',{'trusteeOrgId':trusteeOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of cloned users from the trustee organization (i.e. users with a native user record).
	 * There can be no more than 5 cloned users per organization, so results are represented as simple list and not paged
	 * @param {String} trusteeOrgId Trustee Organization Id
	 */},{key:"getOrgauthorizationTrusteeClonedusers",value:function getOrgauthorizationTrusteeClonedusers(trusteeOrgId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeClonedusers';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers','GET',{'trusteeOrgId':trusteeOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee Group
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 */},{key:"getOrgauthorizationTrusteeGroup",value:function getOrgauthorizationTrusteeGroup(trusteeOrgId,trusteeGroupId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeGroup';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling getOrgauthorizationTrusteeGroup';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}','GET',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee Group Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 */},{key:"getOrgauthorizationTrusteeGroupRoles",value:function getOrgauthorizationTrusteeGroupRoles(trusteeOrgId,trusteeGroupId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeGroupRoles';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling getOrgauthorizationTrusteeGroupRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles','GET',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of trustee groups for this organization (i.e. groups granted access to this organization).
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrusteeGroups",value:function getOrgauthorizationTrusteeGroups(trusteeOrgId,opts){opts=opts||{};// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeGroups';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups','GET',{'trusteeOrgId':trusteeOrgId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee User
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"getOrgauthorizationTrusteeUser",value:function getOrgauthorizationTrusteeUser(trusteeOrgId,trusteeUserId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeUser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling getOrgauthorizationTrusteeUser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}','GET',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee User Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"getOrgauthorizationTrusteeUserRoles",value:function getOrgauthorizationTrusteeUserRoles(trusteeOrgId,trusteeUserId){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeUserRoles';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling getOrgauthorizationTrusteeUserRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles','GET',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of trustee users for this organization (i.e. users granted access to this organization).
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrusteeUsers",value:function getOrgauthorizationTrusteeUsers(trusteeOrgId,opts){opts=opts||{};// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling getOrgauthorizationTrusteeUsers';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users','GET',{'trusteeOrgId':trusteeOrgId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of trustees for this organization (i.e. organizations granted access to this organization).
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrustees",value:function getOrgauthorizationTrustees(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/orgauthorization/trustees','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get organization authorization trust with Customer Care, if one exists.
	 * 
	 */},{key:"getOrgauthorizationTrusteesDefault",value:function getOrgauthorizationTrusteesDefault(){return this.apiClient.callApi('/api/v2/orgauthorization/trustees/default','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Org Trust
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 */},{key:"getOrgauthorizationTrustor",value:function getOrgauthorizationTrustor(trustorOrgId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustor';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}','GET',{'trustorOrgId':trustorOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Cloned User
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"getOrgauthorizationTrustorCloneduser",value:function getOrgauthorizationTrustorCloneduser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorCloneduser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling getOrgauthorizationTrustorCloneduser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}','GET',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of cloned users in the trustor organization (i.e. users with a native user record).
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 */},{key:"getOrgauthorizationTrustorClonedusers",value:function getOrgauthorizationTrustorClonedusers(trustorOrgId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorClonedusers';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers','GET',{'trustorOrgId':trustorOrgId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee Group
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trustorGroupId Trustor Group Id
	 */},{key:"getOrgauthorizationTrustorGroup",value:function getOrgauthorizationTrustorGroup(trustorOrgId,trustorGroupId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorGroup';}// verify the required parameter 'trustorGroupId' is set
if(trustorGroupId===undefined||trustorGroupId===null){throw'Missing the required parameter "trustorGroupId" when calling getOrgauthorizationTrustorGroup';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}','GET',{'trustorOrgId':trustorOrgId,'trustorGroupId':trustorGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of groups in the trustor organization (i.e. groups granted access).
	 * 
	 * @param {String} trustorOrgId Trustee Organization Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrustorGroups",value:function getOrgauthorizationTrustorGroups(trustorOrgId,opts){opts=opts||{};// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorGroups';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/groups','GET',{'trustorOrgId':trustorOrgId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trustee User
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"getOrgauthorizationTrustorUser",value:function getOrgauthorizationTrustorUser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorUser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling getOrgauthorizationTrustorUser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}','GET',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of users in the trustor organization (i.e. users granted access).
	 * 
	 * @param {String} trustorOrgId Trustee Organization Id
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrustorUsers",value:function getOrgauthorizationTrustorUsers(trustorOrgId,opts){opts=opts||{};// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling getOrgauthorizationTrustorUsers';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/users','GET',{'trustorOrgId':trustorOrgId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * The list of organizations that have authorized/trusted your organization.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getOrgauthorizationTrustors",value:function getOrgauthorizationTrustors(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/orgauthorization/trustors','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * A pairing id is created by the trustee and given to the trustor to create a trust.
	 * 
	 * @param {Object} body Pairing Info
	 */},{key:"postOrgauthorizationPairings",value:function postOrgauthorizationPairings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationPairings';}return this.apiClient.callApi('/api/v2/orgauthorization/pairings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a group to the trust.
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {Object} body Trust
	 */},{key:"postOrgauthorizationTrusteeGroups",value:function postOrgauthorizationTrusteeGroups(trusteeOrgId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling postOrgauthorizationTrusteeGroups';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationTrusteeGroups';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups','POST',{'trusteeOrgId':trusteeOrgId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a user to the trust.
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {Object} body Trust
	 */},{key:"postOrgauthorizationTrusteeUsers",value:function postOrgauthorizationTrusteeUsers(trusteeOrgId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling postOrgauthorizationTrusteeUsers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationTrusteeUsers';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users','POST',{'trusteeOrgId':trusteeOrgId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new organization authorization trust. This is required to grant other organizations access to your organization.
	 * 
	 * @param {Object} body Trust
	 */},{key:"postOrgauthorizationTrustees",value:function postOrgauthorizationTrustees(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationTrustees';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Org Trustee Audits
	 * 
	 * @param {Object} body Values to scope the request.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to timestamp)
	 * @param {String} opts.sortOrder Sort order (default to descending)
	 */},{key:"postOrgauthorizationTrusteesAudits",value:function postOrgauthorizationTrusteesAudits(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationTrusteesAudits';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/audits','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.assignDefaultRole Assign Admin role to default pairing with Customer Care
	 * @param {Boolean} opts.autoExpire Automatically expire pairing after 30 days
	 */},{key:"postOrgauthorizationTrusteesDefault",value:function postOrgauthorizationTrusteesDefault(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/orgauthorization/trustees/default','POST',{},{'assignDefaultRole':opts['assignDefaultRole'],'autoExpire':opts['autoExpire']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Org Trustor Audits
	 * 
	 * @param {Object} body Values to scope the request.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to timestamp)
	 * @param {String} opts.sortOrder Sort order (default to descending)
	 */},{key:"postOrgauthorizationTrustorAudits",value:function postOrgauthorizationTrustorAudits(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOrgauthorizationTrustorAudits';}return this.apiClient.callApi('/api/v2/orgauthorization/trustor/audits','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Org Trust
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {Object} body Client
	 */},{key:"putOrgauthorizationTrustee",value:function putOrgauthorizationTrustee(trusteeOrgId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling putOrgauthorizationTrustee';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrgauthorizationTrustee';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}','PUT',{'trusteeOrgId':trusteeOrgId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Trustee Group Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 * @param {Object} body Set of roles with corresponding divisions to apply
	 */},{key:"putOrgauthorizationTrusteeGroupRoledivisions",value:function putOrgauthorizationTrusteeGroupRoledivisions(trusteeOrgId,trusteeGroupId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling putOrgauthorizationTrusteeGroupRoledivisions';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling putOrgauthorizationTrusteeGroupRoledivisions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrgauthorizationTrusteeGroupRoledivisions';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roledivisions','PUT',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Trustee Group Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeGroupId Trustee Group Id
	 * @param {Array.<String>} body List of roles
	 */},{key:"putOrgauthorizationTrusteeGroupRoles",value:function putOrgauthorizationTrusteeGroupRoles(trusteeOrgId,trusteeGroupId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling putOrgauthorizationTrusteeGroupRoles';}// verify the required parameter 'trusteeGroupId' is set
if(trusteeGroupId===undefined||trusteeGroupId===null){throw'Missing the required parameter "trusteeGroupId" when calling putOrgauthorizationTrusteeGroupRoles';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrgauthorizationTrusteeGroupRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles','PUT',{'trusteeOrgId':trusteeOrgId,'trusteeGroupId':trusteeGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Trustee User Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 * @param {Object} body Set of roles with corresponding divisions to apply
	 */},{key:"putOrgauthorizationTrusteeUserRoledivisions",value:function putOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId,trusteeUserId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling putOrgauthorizationTrusteeUserRoledivisions';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling putOrgauthorizationTrusteeUserRoledivisions';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrgauthorizationTrusteeUserRoledivisions';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions','PUT',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Trustee User Roles
	 * 
	 * @param {String} trusteeOrgId Trustee Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 * @param {Array.<String>} body List of roles
	 */},{key:"putOrgauthorizationTrusteeUserRoles",value:function putOrgauthorizationTrusteeUserRoles(trusteeOrgId,trusteeUserId,body){// verify the required parameter 'trusteeOrgId' is set
if(trusteeOrgId===undefined||trusteeOrgId===null){throw'Missing the required parameter "trusteeOrgId" when calling putOrgauthorizationTrusteeUserRoles';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling putOrgauthorizationTrusteeUserRoles';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOrgauthorizationTrusteeUserRoles';}return this.apiClient.callApi('/api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles','PUT',{'trusteeOrgId':trusteeOrgId,'trusteeUserId':trusteeUserId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a clone of the trustee user in the trustor org.
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"putOrgauthorizationTrustorCloneduser",value:function putOrgauthorizationTrustorCloneduser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling putOrgauthorizationTrustorCloneduser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling putOrgauthorizationTrustorCloneduser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}','PUT',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a Trustee Group to the trust.
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trustorGroupId Trustor Group Id
	 */},{key:"putOrgauthorizationTrustorGroup",value:function putOrgauthorizationTrustorGroup(trustorOrgId,trustorGroupId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling putOrgauthorizationTrustorGroup';}// verify the required parameter 'trustorGroupId' is set
if(trustorGroupId===undefined||trustorGroupId===null){throw'Missing the required parameter "trustorGroupId" when calling putOrgauthorizationTrustorGroup';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}','PUT',{'trustorOrgId':trustorOrgId,'trustorGroupId':trustorGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a Trustee user to the trust.
	 * 
	 * @param {String} trustorOrgId Trustor Organization Id
	 * @param {String} trusteeUserId Trustee User Id
	 */},{key:"putOrgauthorizationTrustorUser",value:function putOrgauthorizationTrustorUser(trustorOrgId,trusteeUserId){// verify the required parameter 'trustorOrgId' is set
if(trustorOrgId===undefined||trustorOrgId===null){throw'Missing the required parameter "trustorOrgId" when calling putOrgauthorizationTrustorUser';}// verify the required parameter 'trusteeUserId' is set
if(trusteeUserId===undefined||trusteeUserId===null){throw'Missing the required parameter "trusteeUserId" when calling putOrgauthorizationTrustorUser';}return this.apiClient.callApi('/api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}','PUT',{'trustorOrgId':trustorOrgId,'trusteeUserId':trusteeUserId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return OrganizationAuthorizationApi;}();var OutboundApi=/*#__PURE__*/function(){/**
	 * Outbound service.
	 * @module purecloud-platform-client-v2/api/OutboundApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new OutboundApi. 
	 * @alias module:purecloud-platform-client-v2/api/OutboundApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function OutboundApi(apiClient){_classCallCheck(this,OutboundApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete attempt limits
	 * 
	 * @param {String} attemptLimitsId Attempt limits ID
	 */_createClass(OutboundApi,[{key:"deleteOutboundAttemptlimit",value:function deleteOutboundAttemptlimit(attemptLimitsId){// verify the required parameter 'attemptLimitsId' is set
if(attemptLimitsId===undefined||attemptLimitsId===null){throw'Missing the required parameter "attemptLimitsId" when calling deleteOutboundAttemptlimit';}return this.apiClient.callApi('/api/v2/outbound/attemptlimits/{attemptLimitsId}','DELETE',{'attemptLimitsId':attemptLimitsId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete callable time set
	 * 
	 * @param {String} callableTimeSetId Callable Time Set ID
	 */},{key:"deleteOutboundCallabletimeset",value:function deleteOutboundCallabletimeset(callableTimeSetId){// verify the required parameter 'callableTimeSetId' is set
if(callableTimeSetId===undefined||callableTimeSetId===null){throw'Missing the required parameter "callableTimeSetId" when calling deleteOutboundCallabletimeset';}return this.apiClient.callApi('/api/v2/outbound/callabletimesets/{callableTimeSetId}','DELETE',{'callableTimeSetId':callableTimeSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a dialer call analysis response set.
	 * 
	 * @param {String} callAnalysisSetId Call Analysis Response Set ID
	 */},{key:"deleteOutboundCallanalysisresponseset",value:function deleteOutboundCallanalysisresponseset(callAnalysisSetId){// verify the required parameter 'callAnalysisSetId' is set
if(callAnalysisSetId===undefined||callAnalysisSetId===null){throw'Missing the required parameter "callAnalysisSetId" when calling deleteOutboundCallanalysisresponseset';}return this.apiClient.callApi('/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}','DELETE',{'callAnalysisSetId':callAnalysisSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a campaign.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"deleteOutboundCampaign",value:function deleteOutboundCampaign(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling deleteOutboundCampaign';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}','DELETE',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reset campaign progress and recycle the campaign
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"deleteOutboundCampaignProgress",value:function deleteOutboundCampaignProgress(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling deleteOutboundCampaignProgress';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/progress','DELETE',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Campaign Rule
	 * 
	 * @param {String} campaignRuleId Campaign Rule ID
	 */},{key:"deleteOutboundCampaignrule",value:function deleteOutboundCampaignrule(campaignRuleId){// verify the required parameter 'campaignRuleId' is set
if(campaignRuleId===undefined||campaignRuleId===null){throw'Missing the required parameter "campaignRuleId" when calling deleteOutboundCampaignrule';}return this.apiClient.callApi('/api/v2/outbound/campaignrules/{campaignRuleId}','DELETE',{'campaignRuleId':campaignRuleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a contact list.
	 * 
	 * @param {String} contactListId ContactList ID
	 */},{key:"deleteOutboundContactlist",value:function deleteOutboundContactlist(contactListId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling deleteOutboundContactlist';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}','DELETE',{'contactListId':contactListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a contact.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {String} contactId Contact ID
	 */},{key:"deleteOutboundContactlistContact",value:function deleteOutboundContactlistContact(contactListId,contactId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling deleteOutboundContactlistContact';}// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling deleteOutboundContactlistContact';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}','DELETE',{'contactListId':contactListId,'contactId':contactId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete contacts from a contact list.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {Array.<String>} contactIds ContactIds to delete.
	 */},{key:"deleteOutboundContactlistContacts",value:function deleteOutboundContactlistContacts(contactListId,contactIds){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling deleteOutboundContactlistContacts';}// verify the required parameter 'contactIds' is set
if(contactIds===undefined||contactIds===null){throw'Missing the required parameter "contactIds" when calling deleteOutboundContactlistContacts';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts','DELETE',{'contactListId':contactListId},{'contactIds':this.apiClient.buildCollectionParam(contactIds,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Contact List Filter
	 * 
	 * @param {String} contactListFilterId Contact List Filter ID
	 */},{key:"deleteOutboundContactlistfilter",value:function deleteOutboundContactlistfilter(contactListFilterId){// verify the required parameter 'contactListFilterId' is set
if(contactListFilterId===undefined||contactListFilterId===null){throw'Missing the required parameter "contactListFilterId" when calling deleteOutboundContactlistfilter';}return this.apiClient.callApi('/api/v2/outbound/contactlistfilters/{contactListFilterId}','DELETE',{'contactListFilterId':contactListFilterId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete multiple contact lists.
	 * 
	 * @param {Array.<String>} id contact list id(s) to delete
	 */},{key:"deleteOutboundContactlists",value:function deleteOutboundContactlists(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteOutboundContactlists';}return this.apiClient.callApi('/api/v2/outbound/contactlists','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Contact List Template
	 * 
	 * @param {String} contactListTemplateId ContactListTemplate ID
	 */},{key:"deleteOutboundContactlisttemplate",value:function deleteOutboundContactlisttemplate(contactListTemplateId){// verify the required parameter 'contactListTemplateId' is set
if(contactListTemplateId===undefined||contactListTemplateId===null){throw'Missing the required parameter "contactListTemplateId" when calling deleteOutboundContactlisttemplate';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates/{contactListTemplateId}','DELETE',{'contactListTemplateId':contactListTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete multiple contact list templates.
	 * 
	 * @param {Array.<String>} id contact list template id(s) to delete
	 */},{key:"deleteOutboundContactlisttemplates",value:function deleteOutboundContactlisttemplates(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteOutboundContactlisttemplates';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an Outbound Digital Rule Set
	 * 
	 * @param {String} digitalRuleSetId The Digital Rule Set ID
	 */},{key:"deleteOutboundDigitalruleset",value:function deleteOutboundDigitalruleset(digitalRuleSetId){// verify the required parameter 'digitalRuleSetId' is set
if(digitalRuleSetId===undefined||digitalRuleSetId===null){throw'Missing the required parameter "digitalRuleSetId" when calling deleteOutboundDigitalruleset';}return this.apiClient.callApi('/api/v2/outbound/digitalrulesets/{digitalRuleSetId}','DELETE',{'digitalRuleSetId':digitalRuleSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete dialer DNC list
	 * 
	 * @param {String} dncListId DncList ID
	 */},{key:"deleteOutboundDnclist",value:function deleteOutboundDnclist(dncListId){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling deleteOutboundDnclist';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}','DELETE',{'dncListId':dncListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes all or expired custom exclusion column entries from a DNC list.
	 * This operation is only for Internal DNC lists of custom exclusion column entries
	 * @param {String} dncListId DncList ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.expiredOnly Set to true to only remove DNC entries that are expired (default to false)
	 */},{key:"deleteOutboundDnclistCustomexclusioncolumns",value:function deleteOutboundDnclistCustomexclusioncolumns(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling deleteOutboundDnclistCustomexclusioncolumns';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns','DELETE',{'dncListId':dncListId},{'expiredOnly':opts['expiredOnly']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes all or expired email addresses from a DNC list.
	 * This operation is Only for Internal DNC lists of email addresses
	 * @param {String} dncListId DncList ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.expiredOnly Set to true to only remove DNC entries that are expired (default to false)
	 */},{key:"deleteOutboundDnclistEmailaddresses",value:function deleteOutboundDnclistEmailaddresses(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling deleteOutboundDnclistEmailaddresses';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/emailaddresses','DELETE',{'dncListId':dncListId},{'expiredOnly':opts['expiredOnly']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes all or expired phone numbers from a DNC list.
	 * This operation is Only for Internal DNC lists of phone numbers
	 * @param {String} dncListId DncList ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.expiredOnly Set to true to only remove DNC entries that are expired (default to false)
	 */},{key:"deleteOutboundDnclistPhonenumbers",value:function deleteOutboundDnclistPhonenumbers(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling deleteOutboundDnclistPhonenumbers';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/phonenumbers','DELETE',{'dncListId':dncListId},{'expiredOnly':opts['expiredOnly']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Import Template
	 * 
	 * @param {String} importTemplateId Import Template ID
	 */},{key:"deleteOutboundImporttemplate",value:function deleteOutboundImporttemplate(importTemplateId){// verify the required parameter 'importTemplateId' is set
if(importTemplateId===undefined||importTemplateId===null){throw'Missing the required parameter "importTemplateId" when calling deleteOutboundImporttemplate';}return this.apiClient.callApi('/api/v2/outbound/importtemplates/{importTemplateId}','DELETE',{'importTemplateId':importTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete multiple import templates.
	 * 
	 * @param {Array.<String>} id import template id(s) to delete
	 */},{key:"deleteOutboundImporttemplates",value:function deleteOutboundImporttemplates(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteOutboundImporttemplates';}return this.apiClient.callApi('/api/v2/outbound/importtemplates','DELETE',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an Outbound Messaging Campaign
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"deleteOutboundMessagingcampaign",value:function deleteOutboundMessagingcampaign(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling deleteOutboundMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}','DELETE',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reset messaging campaign progress and recycle the messaging campaign
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"deleteOutboundMessagingcampaignProgress",value:function deleteOutboundMessagingcampaignProgress(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling deleteOutboundMessagingcampaignProgress';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}/progress','DELETE',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Rule Set.
	 * 
	 * @param {String} ruleSetId Rule Set ID
	 */},{key:"deleteOutboundRuleset",value:function deleteOutboundRuleset(ruleSetId){// verify the required parameter 'ruleSetId' is set
if(ruleSetId===undefined||ruleSetId===null){throw'Missing the required parameter "ruleSetId" when calling deleteOutboundRuleset';}return this.apiClient.callApi('/api/v2/outbound/rulesets/{ruleSetId}','DELETE',{'ruleSetId':ruleSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a dialer campaign schedule.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"deleteOutboundSchedulesCampaign",value:function deleteOutboundSchedulesCampaign(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling deleteOutboundSchedulesCampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/campaigns/{campaignId}','DELETE',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an email campaign schedule.
	 * 
	 * @param {String} emailCampaignId Email Campaign ID
	 */},{key:"deleteOutboundSchedulesEmailcampaign",value:function deleteOutboundSchedulesEmailcampaign(emailCampaignId){// verify the required parameter 'emailCampaignId' is set
if(emailCampaignId===undefined||emailCampaignId===null){throw'Missing the required parameter "emailCampaignId" when calling deleteOutboundSchedulesEmailcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}','DELETE',{'emailCampaignId':emailCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a messaging campaign schedule.
	 * 
	 * @param {String} messagingCampaignId Messaging Campaign ID
	 */},{key:"deleteOutboundSchedulesMessagingcampaign",value:function deleteOutboundSchedulesMessagingcampaign(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling deleteOutboundSchedulesMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}','DELETE',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a dialer sequence schedule.
	 * 
	 * @param {String} sequenceId Sequence ID
	 */},{key:"deleteOutboundSchedulesSequence",value:function deleteOutboundSchedulesSequence(sequenceId){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling deleteOutboundSchedulesSequence';}return this.apiClient.callApi('/api/v2/outbound/schedules/sequences/{sequenceId}','DELETE',{'sequenceId':sequenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a dialer campaign sequence.
	 * 
	 * @param {String} sequenceId Campaign Sequence ID
	 */},{key:"deleteOutboundSequence",value:function deleteOutboundSequence(sequenceId){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling deleteOutboundSequence';}return this.apiClient.callApi('/api/v2/outbound/sequences/{sequenceId}','DELETE',{'sequenceId':sequenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get attempt limits
	 * 
	 * @param {String} attemptLimitsId Attempt limits ID
	 */},{key:"getOutboundAttemptlimit",value:function getOutboundAttemptlimit(attemptLimitsId){// verify the required parameter 'attemptLimitsId' is set
if(attemptLimitsId===undefined||attemptLimitsId===null){throw'Missing the required parameter "attemptLimitsId" when calling getOutboundAttemptlimit';}return this.apiClient.callApi('/api/v2/outbound/attemptlimits/{attemptLimitsId}','GET',{'attemptLimitsId':attemptLimitsId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query attempt limits list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundAttemptlimits",value:function getOutboundAttemptlimits(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/attemptlimits','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get callable time set
	 * 
	 * @param {String} callableTimeSetId Callable Time Set ID
	 */},{key:"getOutboundCallabletimeset",value:function getOutboundCallabletimeset(callableTimeSetId){// verify the required parameter 'callableTimeSetId' is set
if(callableTimeSetId===undefined||callableTimeSetId===null){throw'Missing the required parameter "callableTimeSetId" when calling getOutboundCallabletimeset';}return this.apiClient.callApi('/api/v2/outbound/callabletimesets/{callableTimeSetId}','GET',{'callableTimeSetId':callableTimeSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query callable time set list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCallabletimesets",value:function getOutboundCallabletimesets(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/callabletimesets','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a dialer call analysis response set.
	 * 
	 * @param {String} callAnalysisSetId Call Analysis Response Set ID
	 */},{key:"getOutboundCallanalysisresponseset",value:function getOutboundCallanalysisresponseset(callAnalysisSetId){// verify the required parameter 'callAnalysisSetId' is set
if(callAnalysisSetId===undefined||callAnalysisSetId===null){throw'Missing the required parameter "callAnalysisSetId" when calling getOutboundCallanalysisresponseset';}return this.apiClient.callApi('/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}','GET',{'callAnalysisSetId':callAnalysisSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of dialer call analysis response sets.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCallanalysisresponsesets",value:function getOutboundCallanalysisresponsesets(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/callanalysisresponsesets','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dialer campaign.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaign",value:function getOutboundCampaign(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaign';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a preview of how agents will be mapped to this campaign's contact list.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignAgentownedmappingpreviewResults",value:function getOutboundCampaignAgentownedmappingpreviewResults(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignAgentownedmappingpreviewResults';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/agentownedmappingpreview/results','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get campaign diagnostics
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignDiagnostics",value:function getOutboundCampaignDiagnostics(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignDiagnostics';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/diagnostics','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dialer campaign interactions.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignInteractions",value:function getOutboundCampaignInteractions(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignInteractions';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/interactions','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get campaign progress
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignProgress",value:function getOutboundCampaignProgress(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignProgress';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/progress','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get statistics about a Dialer Campaign
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignStats",value:function getOutboundCampaignStats(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignStats';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/stats','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Campaign Rule
	 * 
	 * @param {String} campaignRuleId Campaign Rule ID
	 */},{key:"getOutboundCampaignrule",value:function getOutboundCampaignrule(campaignRuleId){// verify the required parameter 'campaignRuleId' is set
if(campaignRuleId===undefined||campaignRuleId===null){throw'Missing the required parameter "campaignRuleId" when calling getOutboundCampaignrule';}return this.apiClient.callApi('/api/v2/outbound/campaignrules/{campaignRuleId}','GET',{'campaignRuleId':campaignRuleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query Campaign Rule list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCampaignrules",value:function getOutboundCampaignrules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/campaignrules','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of dialer campaigns.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id id
	 * @param {String} opts.contactListId Contact List ID
	 * @param {String} opts.dncListIds DNC list ID
	 * @param {String} opts.distributionQueueId Distribution queue ID
	 * @param {String} opts.edgeGroupId Edge group ID
	 * @param {String} opts.callAnalysisResponseSetId Call analysis response set ID
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCampaigns",value:function getOutboundCampaigns(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/campaigns','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'filterType':opts['filterType'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'contactListId':opts['contactListId'],'dncListIds':opts['dncListIds'],'distributionQueueId':opts['distributionQueueId'],'edgeGroupId':opts['edgeGroupId'],'callAnalysisResponseSetId':opts['callAnalysisResponseSetId'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query across all types of campaigns by division
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id Campaign ID(s)
	 * @param {String} opts.name Campaign name(s)
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {Array.<String>} opts.mediaType Media type(s)
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCampaignsAll",value:function getOutboundCampaignsAll(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/campaigns/all','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'mediaType':this.apiClient.buildCollectionParam(opts['mediaType'],'multi'),'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query across all types of campaigns
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id Campaign ID(s)
	 * @param {String} opts.name Campaign name(s)
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {Array.<String>} opts.mediaType Media type(s)
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCampaignsAllDivisionviews",value:function getOutboundCampaignsAllDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/campaigns/all/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'mediaType':this.apiClient.buildCollectionParam(opts['mediaType'],'multi'),'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a basic Campaign information object
	 * This returns a simplified version of a Campaign, consisting of name and division.
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundCampaignsDivisionview",value:function getOutboundCampaignsDivisionview(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundCampaignsDivisionview';}return this.apiClient.callApi('/api/v2/outbound/campaigns/divisionviews/{campaignId}','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of basic Campaign information objects
	 * This returns a simplified version of a Campaign, consisting of name and division.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id id
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundCampaignsDivisionviews",value:function getOutboundCampaignsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/campaigns/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'filterType':opts['filterType'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a dialer contact list.
	 * 
	 * @param {String} contactListId ContactList ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 */},{key:"getOutboundContactlist",value:function getOutboundContactlist(contactListId,opts){opts=opts||{};// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlist';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}','GET',{'contactListId':contactListId},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a contact.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {String} contactId Contact ID
	 */},{key:"getOutboundContactlistContact",value:function getOutboundContactlistContact(contactListId,contactId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlistContact';}// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling getOutboundContactlistContact';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}','GET',{'contactListId':contactListId,'contactId':contactId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the URI of a contact list export.
	 * 
	 * @param {String} contactListId ContactList ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.download Redirect to download uri (default to false)
	 */},{key:"getOutboundContactlistExport",value:function getOutboundContactlistExport(contactListId,opts){opts=opts||{};// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlistExport';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/export','GET',{'contactListId':contactListId},{'download':opts['download']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dialer contactList import status.
	 * 
	 * @param {String} contactListId ContactList ID
	 */},{key:"getOutboundContactlistImportstatus",value:function getOutboundContactlistImportstatus(contactListId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlistImportstatus';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/importstatus','GET',{'contactListId':contactListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Preview the result of applying Automatic Time Zone Mapping to a contact list
	 * 
	 * @param {String} contactListId ContactList ID
	 */},{key:"getOutboundContactlistTimezonemappingpreview",value:function getOutboundContactlistTimezonemappingpreview(contactListId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlistTimezonemappingpreview';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/timezonemappingpreview','GET',{'contactListId':contactListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Contact list filter
	 * 
	 * @param {String} contactListFilterId Contact List Filter ID
	 */},{key:"getOutboundContactlistfilter",value:function getOutboundContactlistfilter(contactListFilterId){// verify the required parameter 'contactListFilterId' is set
if(contactListFilterId===undefined||contactListFilterId===null){throw'Missing the required parameter "contactListFilterId" when calling getOutboundContactlistfilter';}return this.apiClient.callApi('/api/v2/outbound/contactlistfilters/{contactListFilterId}','GET',{'contactListFilterId':contactListFilterId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query Contact list filters
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 * @param {String} opts.contactListId Contact List ID
	 */},{key:"getOutboundContactlistfilters",value:function getOutboundContactlistfilters(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/contactlistfilters','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'contactListId':opts['contactListId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of contact lists.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Include import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id id
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundContactlists",value:function getOutboundContactlists(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/contactlists','GET',{},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a basic ContactList information object
	 * This returns a simplified version of a ContactList, consisting of the name, division, column names, phone columns, import status, and size.
	 * @param {String} contactListId Contactlist ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Include import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 */},{key:"getOutboundContactlistsDivisionview",value:function getOutboundContactlistsDivisionview(contactListId,opts){opts=opts||{};// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling getOutboundContactlistsDivisionview';}return this.apiClient.callApi('/api/v2/outbound/contactlists/divisionviews/{contactListId}','GET',{'contactListId':contactListId},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of simplified contact list objects.
	 * This return a simplified version of contact lists, consisting of the name, division, column names, phone columns, import status, and size.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Include import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id id
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundContactlistsDivisionviews",value:function getOutboundContactlistsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/contactlists/divisionviews','GET',{},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'filterType':opts['filterType'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Contact List Template
	 * 
	 * @param {String} contactListTemplateId ContactListTemplate ID
	 */},{key:"getOutboundContactlisttemplate",value:function getOutboundContactlisttemplate(contactListTemplateId){// verify the required parameter 'contactListTemplateId' is set
if(contactListTemplateId===undefined||contactListTemplateId===null){throw'Missing the required parameter "contactListTemplateId" when calling getOutboundContactlisttemplate';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates/{contactListTemplateId}','GET',{'contactListTemplateId':contactListTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of contact list templates
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundContactlisttemplates",value:function getOutboundContactlisttemplates(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Outbound Digital Rule Set
	 * 
	 * @param {String} digitalRuleSetId The Digital Rule Set ID
	 */},{key:"getOutboundDigitalruleset",value:function getOutboundDigitalruleset(digitalRuleSetId){// verify the required parameter 'digitalRuleSetId' is set
if(digitalRuleSetId===undefined||digitalRuleSetId===null){throw'Missing the required parameter "digitalRuleSetId" when calling getOutboundDigitalruleset';}return this.apiClient.callApi('/api/v2/outbound/digitalrulesets/{digitalRuleSetId}','GET',{'digitalRuleSetId':digitalRuleSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of Outbound Digital Rule Sets
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortBy The field to sort by (default to name)
	 * @param {Object} opts.sortOrder The direction to sort (default to ascending)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id A list of digital rule set ids to bulk fetch
	 */},{key:"getOutboundDigitalrulesets",value:function getOutboundDigitalrulesets(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/digitalrulesets','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dialer DNC list
	 * 
	 * @param {String} dncListId DncList ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 */},{key:"getOutboundDnclist",value:function getOutboundDnclist(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling getOutboundDnclist';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}','GET',{'dncListId':dncListId},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the URI of a DNC list export.
	 * 
	 * @param {String} dncListId DncList ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.download Redirect to download uri (default to false)
	 */},{key:"getOutboundDnclistExport",value:function getOutboundDnclistExport(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling getOutboundDnclistExport';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/export','GET',{'dncListId':dncListId},{'download':opts['download']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get dialer dncList import status.
	 * 
	 * @param {String} dncListId DncList ID
	 */},{key:"getOutboundDnclistImportstatus",value:function getOutboundDnclistImportstatus(dncListId){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling getOutboundDnclistImportstatus';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/importstatus','GET',{'dncListId':dncListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query dialer DNC lists
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Object} opts.dncSourceType DncSourceType
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order
	 */},{key:"getOutboundDnclists",value:function getOutboundDnclists(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/dnclists','GET',{},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'dncSourceType':opts['dncSourceType'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a basic DncList information object
	 * This returns a simplified version of a DncList, consisting of the name, division, import status, and size.
	 * @param {String} dncListId Dnclist ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Include import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 */},{key:"getOutboundDnclistsDivisionview",value:function getOutboundDnclistsDivisionview(dncListId,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling getOutboundDnclistsDivisionview';}return this.apiClient.callApi('/api/v2/outbound/dnclists/divisionviews/{dncListId}','GET',{'dncListId':dncListId},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of simplified dnc list objects.
	 * This return a simplified version of dnc lists, consisting of the name, division, import status, and size.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeImportStatus Include import status (default to false)
	 * @param {Boolean} opts.includeSize Include size (default to false)
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {Object} opts.dncSourceType DncSourceType
	 * @param {Array.<String>} opts.id id
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundDnclistsDivisionviews",value:function getOutboundDnclistsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/dnclists/divisionviews','GET',{},{'includeImportStatus':opts['includeImportStatus'],'includeSize':opts['includeSize'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'filterType':opts['filterType'],'name':opts['name'],'dncSourceType':opts['dncSourceType'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Dialer Event
	 * 
	 * @param {String} eventId Event Log ID
	 */},{key:"getOutboundEvent",value:function getOutboundEvent(eventId){// verify the required parameter 'eventId' is set
if(eventId===undefined||eventId===null){throw'Missing the required parameter "eventId" when calling getOutboundEvent';}return this.apiClient.callApi('/api/v2/outbound/events/{eventId}','GET',{'eventId':eventId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query Event Logs
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.category Category
	 * @param {String} opts.level Level
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundEvents",value:function getOutboundEvents(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/events','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'filterType':opts['filterType'],'category':opts['category'],'level':opts['level'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Import Template
	 * 
	 * @param {String} importTemplateId Import Template ID
	 */},{key:"getOutboundImporttemplate",value:function getOutboundImporttemplate(importTemplateId){// verify the required parameter 'importTemplateId' is set
if(importTemplateId===undefined||importTemplateId===null){throw'Missing the required parameter "importTemplateId" when calling getOutboundImporttemplate';}return this.apiClient.callApi('/api/v2/outbound/importtemplates/{importTemplateId}','GET',{'importTemplateId':importTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the import status for an import template.
	 * 
	 * @param {String} importTemplateId importTemplateId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.listNamePrefix listNamePrefix
	 */},{key:"getOutboundImporttemplateImportstatus",value:function getOutboundImporttemplateImportstatus(importTemplateId,opts){opts=opts||{};// verify the required parameter 'importTemplateId' is set
if(importTemplateId===undefined||importTemplateId===null){throw'Missing the required parameter "importTemplateId" when calling getOutboundImporttemplateImportstatus';}return this.apiClient.callApi('/api/v2/outbound/importtemplates/{importTemplateId}/importstatus','GET',{'importTemplateId':importTemplateId},{'listNamePrefix':opts['listNamePrefix']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query Import Templates
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 * @param {String} opts.contactListTemplateId Contact List Template ID
	 */},{key:"getOutboundImporttemplates",value:function getOutboundImporttemplates(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/importtemplates','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'contactListTemplateId':opts['contactListTemplateId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Outbound Messaging Campaign
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"getOutboundMessagingcampaign",value:function getOutboundMessagingcampaign(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling getOutboundMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}','GET',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get messaging campaign diagnostics
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"getOutboundMessagingcampaignDiagnostics",value:function getOutboundMessagingcampaignDiagnostics(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling getOutboundMessagingcampaignDiagnostics';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}/diagnostics','GET',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get messaging campaign's progress
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"getOutboundMessagingcampaignProgress",value:function getOutboundMessagingcampaignProgress(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling getOutboundMessagingcampaignProgress';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}/progress','GET',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of Messaging Campaigns
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortBy The field to sort by (default to name)
	 * @param {Object} opts.sortOrder The direction to sort (default to ascending)
	 * @param {String} opts.name Name
	 * @param {String} opts.contactListId Contact List ID
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 * @param {Object} opts.type Campaign Type
	 * @param {String} opts.senderSmsPhoneNumber Sender SMS Phone Number
	 * @param {Array.<String>} opts.id A list of messaging campaign ids to bulk fetch
	 */},{key:"getOutboundMessagingcampaigns",value:function getOutboundMessagingcampaigns(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'contactListId':opts['contactListId'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'type':opts['type'],'senderSmsPhoneNumber':opts['senderSmsPhoneNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a basic Messaging Campaign information object
	 * This returns a simplified version of a Messaging Campaign, consisting of id, name, and division.
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 */},{key:"getOutboundMessagingcampaignsDivisionview",value:function getOutboundMessagingcampaignsDivisionview(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling getOutboundMessagingcampaignsDivisionview';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/divisionviews/{messagingCampaignId}','GET',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of basic Messaging Campaign information objects
	 * This returns a listing of simplified Messaging Campaigns, each consisting of id, name, and division.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder The direction to sort (default to a)
	 * @param {String} opts.name Name
	 * @param {Object} opts.type Campaign Type
	 * @param {Array.<String>} opts.id id
	 * @param {String} opts.senderSmsPhoneNumber Sender SMS Phone Number
	 */},{key:"getOutboundMessagingcampaignsDivisionviews",value:function getOutboundMessagingcampaignsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'name':opts['name'],'type':opts['type'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'senderSmsPhoneNumber':opts['senderSmsPhoneNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Rule Set by ID.
	 * 
	 * @param {String} ruleSetId Rule Set ID
	 */},{key:"getOutboundRuleset",value:function getOutboundRuleset(ruleSetId){// verify the required parameter 'ruleSetId' is set
if(ruleSetId===undefined||ruleSetId===null){throw'Missing the required parameter "ruleSetId" when calling getOutboundRuleset';}return this.apiClient.callApi('/api/v2/outbound/rulesets/{ruleSetId}','GET',{'ruleSetId':ruleSetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of Rule Sets.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundRulesets",value:function getOutboundRulesets(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/rulesets','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a dialer campaign schedule.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"getOutboundSchedulesCampaign",value:function getOutboundSchedulesCampaign(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling getOutboundSchedulesCampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/campaigns/{campaignId}','GET',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for a list of dialer campaign schedules.
	 * 
	 */},{key:"getOutboundSchedulesCampaigns",value:function getOutboundSchedulesCampaigns(){return this.apiClient.callApi('/api/v2/outbound/schedules/campaigns','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an email campaign schedule.
	 * 
	 * @param {String} emailCampaignId Email Campaign ID
	 */},{key:"getOutboundSchedulesEmailcampaign",value:function getOutboundSchedulesEmailcampaign(emailCampaignId){// verify the required parameter 'emailCampaignId' is set
if(emailCampaignId===undefined||emailCampaignId===null){throw'Missing the required parameter "emailCampaignId" when calling getOutboundSchedulesEmailcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}','GET',{'emailCampaignId':emailCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for a list of email campaign schedules.
	 * 
	 */},{key:"getOutboundSchedulesEmailcampaigns",value:function getOutboundSchedulesEmailcampaigns(){return this.apiClient.callApi('/api/v2/outbound/schedules/emailcampaigns','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a messaging campaign schedule.
	 * 
	 * @param {String} messagingCampaignId Messaging Campaign ID
	 */},{key:"getOutboundSchedulesMessagingcampaign",value:function getOutboundSchedulesMessagingcampaign(messagingCampaignId){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling getOutboundSchedulesMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}','GET',{'messagingCampaignId':messagingCampaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for a list of messaging campaign schedules.
	 * 
	 */},{key:"getOutboundSchedulesMessagingcampaigns",value:function getOutboundSchedulesMessagingcampaigns(){return this.apiClient.callApi('/api/v2/outbound/schedules/messagingcampaigns','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a dialer sequence schedule.
	 * 
	 * @param {String} sequenceId Sequence ID
	 */},{key:"getOutboundSchedulesSequence",value:function getOutboundSchedulesSequence(sequenceId){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling getOutboundSchedulesSequence';}return this.apiClient.callApi('/api/v2/outbound/schedules/sequences/{sequenceId}','GET',{'sequenceId':sequenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for a list of dialer sequence schedules.
	 * 
	 */},{key:"getOutboundSchedulesSequences",value:function getOutboundSchedulesSequences(){return this.apiClient.callApi('/api/v2/outbound/schedules/sequences','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a dialer campaign sequence.
	 * 
	 * @param {String} sequenceId Campaign Sequence ID
	 */},{key:"getOutboundSequence",value:function getOutboundSequence(sequenceId){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling getOutboundSequence';}return this.apiClient.callApi('/api/v2/outbound/sequences/{sequenceId}','GET',{'sequenceId':sequenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query a list of dialer campaign sequences.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. The max that will be returned is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.allowEmptyResult Whether to return an empty page when there are no results for that page (default to false)
	 * @param {Object} opts.filterType Filter type (default to Prefix)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by
	 * @param {Object} opts.sortOrder Sort order (default to a)
	 */},{key:"getOutboundSequences",value:function getOutboundSequences(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/outbound/sequences','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'allowEmptyResult':opts['allowEmptyResult'],'filterType':opts['filterType'],'name':opts['name'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the outbound settings for this organization
	 * 
	 */},{key:"getOutboundSettings",value:function getOutboundSettings(){return this.apiClient.callApi('/api/v2/outbound/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the Dialer wrap up code mapping.
	 * 
	 */},{key:"getOutboundWrapupcodemappings",value:function getOutboundWrapupcodemappings(){return this.apiClient.callApi('/api/v2/outbound/wrapupcodemappings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add entries to or delete entries from a DNC list.
	 * Only Internal DNC lists may be deleted from
	 * @param {String} dncListId DncList ID
	 * @param {Object} body DNC Custom exclusion column entries
	 */},{key:"patchOutboundDnclistCustomexclusioncolumns",value:function patchOutboundDnclistCustomexclusioncolumns(dncListId,body){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling patchOutboundDnclistCustomexclusioncolumns';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchOutboundDnclistCustomexclusioncolumns';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns','PATCH',{'dncListId':dncListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add emails to or Delete emails from a DNC list.
	 * Only Internal DNC lists may be added to or deleted from
	 * @param {String} dncListId DncList ID
	 * @param {Object} body DNC Emails
	 */},{key:"patchOutboundDnclistEmailaddresses",value:function patchOutboundDnclistEmailaddresses(dncListId,body){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling patchOutboundDnclistEmailaddresses';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchOutboundDnclistEmailaddresses';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/emailaddresses','PATCH',{'dncListId':dncListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add numbers to or delete numbers from a DNC list.
	 * Only Internal DNC lists may be added to deleted from
	 * @param {String} dncListId DncList ID
	 * @param {Object} body DNC Phone Numbers
	 */},{key:"patchOutboundDnclistPhonenumbers",value:function patchOutboundDnclistPhonenumbers(dncListId,body){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling patchOutboundDnclistPhonenumbers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchOutboundDnclistPhonenumbers';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/phonenumbers','PATCH',{'dncListId':dncListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the outbound settings for this organization
	 * 
	 * @param {Object} body outboundSettings
	 */},{key:"patchOutboundSettings",value:function patchOutboundSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchOutboundSettings';}return this.apiClient.callApi('/api/v2/outbound/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create attempt limits
	 * 
	 * @param {Object} body AttemptLimits
	 */},{key:"postOutboundAttemptlimits",value:function postOutboundAttemptlimits(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundAttemptlimits';}return this.apiClient.callApi('/api/v2/outbound/attemptlimits','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves audits for dialer.
	 * 
	 * @param {Object} body AuditSearch
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to entity.name)
	 * @param {String} opts.sortOrder Sort order (default to ascending)
	 * @param {Boolean} opts.facetsOnly Facets only (default to false)
	 */},{key:"postOutboundAudits",value:function postOutboundAudits(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundAudits';}return this.apiClient.callApi('/api/v2/outbound/audits','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'facetsOnly':opts['facetsOnly']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create callable time set
	 * 
	 * @param {Object} body DialerCallableTimeSet
	 */},{key:"postOutboundCallabletimesets",value:function postOutboundCallabletimesets(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCallabletimesets';}return this.apiClient.callApi('/api/v2/outbound/callabletimesets','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a dialer call analysis response set.
	 * 
	 * @param {Object} body ResponseSet
	 */},{key:"postOutboundCallanalysisresponsesets",value:function postOutboundCallanalysisresponsesets(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCallanalysisresponsesets';}return this.apiClient.callApi('/api/v2/outbound/callanalysisresponsesets','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate request for a preview of how agents will be mapped to this campaign's contact list.
	 * 
	 * @param {String} campaignId Campaign ID
	 */},{key:"postOutboundCampaignAgentownedmappingpreview",value:function postOutboundCampaignAgentownedmappingpreview(campaignId){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling postOutboundCampaignAgentownedmappingpreview';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/agentownedmappingpreview','POST',{'campaignId':campaignId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Schedule a Callback for a Dialer Campaign (Deprecated)
	 * This endpoint is deprecated and may have unexpected results. Please use "/conversations/{conversationId}/participants/{participantId}/callbacks instead."
	 * @param {String} campaignId Campaign ID
	 * @param {Object} body ContactCallbackRequest
	 * @deprecated
	 */},{key:"postOutboundCampaignCallbackSchedule",value:function postOutboundCampaignCallbackSchedule(campaignId,body){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling postOutboundCampaignCallbackSchedule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCampaignCallbackSchedule';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/callback/schedule','POST',{'campaignId':campaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Campaign Rule
	 * 
	 * @param {Object} body CampaignRule
	 */},{key:"postOutboundCampaignrules",value:function postOutboundCampaignrules(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCampaignrules';}return this.apiClient.callApi('/api/v2/outbound/campaignrules','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a campaign.
	 * 
	 * @param {Object} body Campaign
	 */},{key:"postOutboundCampaigns",value:function postOutboundCampaigns(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCampaigns';}return this.apiClient.callApi('/api/v2/outbound/campaigns','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get progress for a list of campaigns
	 * 
	 * @param {Array.<String>} body Campaign IDs
	 */},{key:"postOutboundCampaignsProgress",value:function postOutboundCampaignsProgress(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundCampaignsProgress';}return this.apiClient.callApi('/api/v2/outbound/campaigns/progress','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes all contacts out of a list. All outstanding recalls or rule-scheduled callbacks for non-preview campaigns configured with the contactlist will be cancelled.
	 * 
	 * @param {String} contactListId Contact List ID
	 */},{key:"postOutboundContactlistClear",value:function postOutboundContactlistClear(contactListId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling postOutboundContactlistClear';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/clear','POST',{'contactListId':contactListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add contacts to a contact list.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {Array.<Object>} body Contact
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.priority Contact priority. True means the contact(s) will be dialed next; false means the contact will go to the end of the contact queue.
	 * @param {Boolean} opts.clearSystemData Clear system data. True means the system columns (attempts, callable status, etc) stored on the contact will be cleared if the contact already exists; false means they won't.
	 * @param {Boolean} opts.doNotQueue Do not queue. True means that updated contacts will not have their positions in the queue altered, so contacts that have already been dialed will not be redialed. For new contacts, this parameter has no effect; False means that updated contacts will be re-queued, according to the 'priority' parameter.
	 */},{key:"postOutboundContactlistContacts",value:function postOutboundContactlistContacts(contactListId,body,opts){opts=opts||{};// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling postOutboundContactlistContacts';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlistContacts';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts','POST',{'contactListId':contactListId},{'priority':opts['priority'],'clearSystemData':opts['clearSystemData'],'doNotQueue':opts['doNotQueue']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get contacts from a contact list.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {Array.<String>} body ContactIds to get.
	 */},{key:"postOutboundContactlistContactsBulk",value:function postOutboundContactlistContactsBulk(contactListId,body){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling postOutboundContactlistContactsBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlistContactsBulk';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts/bulk','POST',{'contactListId':contactListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate the export of a contact list.
	 * Returns 200 if received OK.
	 * @param {String} contactListId ContactList ID
	 */},{key:"postOutboundContactlistExport",value:function postOutboundContactlistExport(contactListId){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling postOutboundContactlistExport';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/export','POST',{'contactListId':contactListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Contact List Filter
	 * 
	 * @param {Object} body ContactListFilter
	 */},{key:"postOutboundContactlistfilters",value:function postOutboundContactlistfilters(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlistfilters';}return this.apiClient.callApi('/api/v2/outbound/contactlistfilters','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a preview of the output of a contact list filter
	 * 
	 * @param {Object} body ContactListFilter
	 */},{key:"postOutboundContactlistfiltersPreview",value:function postOutboundContactlistfiltersPreview(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlistfiltersPreview';}return this.apiClient.callApi('/api/v2/outbound/contactlistfilters/preview','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a contact List.
	 * 
	 * @param {Object} body ContactList
	 */},{key:"postOutboundContactlists",value:function postOutboundContactlists(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlists';}return this.apiClient.callApi('/api/v2/outbound/contactlists','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Contact List Template
	 * 
	 * @param {Object} body ContactListTemplate
	 */},{key:"postOutboundContactlisttemplates",value:function postOutboundContactlisttemplates(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlisttemplates';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add multiple contact list templates
	 * 
	 * @param {Array.<Object>} body contact list template(s) to add
	 */},{key:"postOutboundContactlisttemplatesBulkAdd",value:function postOutboundContactlisttemplatesBulkAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundContactlisttemplatesBulkAdd';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates/bulk/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add phone numbers to a Dialer DNC list.
	 * 
	 * @param {String} conversationId Conversation ID
	 */},{key:"postOutboundConversationDnc",value:function postOutboundConversationDnc(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postOutboundConversationDnc';}return this.apiClient.callApi('/api/v2/outbound/conversations/{conversationId}/dnc','POST',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an Outbound Digital Rule Set
	 * 
	 * @param {Object} body Digital Rule Set
	 */},{key:"postOutboundDigitalrulesets",value:function postOutboundDigitalrulesets(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundDigitalrulesets';}return this.apiClient.callApi('/api/v2/outbound/digitalrulesets','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add email addresses to a DNC list.
	 * Only Internal DNC lists may be appended to
	 * @param {String} dncListId DncList ID
	 * @param {Array.<String>} body DNC email addresses
	 */},{key:"postOutboundDnclistEmailaddresses",value:function postOutboundDnclistEmailaddresses(dncListId,body){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling postOutboundDnclistEmailaddresses';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundDnclistEmailaddresses';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/emailaddresses','POST',{'dncListId':dncListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Initiate the export of a dnc list.
	 * Returns 200 if received OK.
	 * @param {String} dncListId DncList ID
	 */},{key:"postOutboundDnclistExport",value:function postOutboundDnclistExport(dncListId){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling postOutboundDnclistExport';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/export','POST',{'dncListId':dncListId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add phone numbers to a DNC list.
	 * Only Internal DNC lists may be appended to
	 * @param {String} dncListId DncList ID
	 * @param {Array.<String>} body DNC Phone Numbers
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expirationDateTime Expiration date for DNC phone numbers in yyyy-MM-ddTHH:mmZ format
	 */},{key:"postOutboundDnclistPhonenumbers",value:function postOutboundDnclistPhonenumbers(dncListId,body,opts){opts=opts||{};// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling postOutboundDnclistPhonenumbers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundDnclistPhonenumbers';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}/phonenumbers','POST',{'dncListId':dncListId},{'expirationDateTime':opts['expirationDateTime']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create dialer DNC list
	 * 
	 * @param {Object} body DncList
	 */},{key:"postOutboundDnclists",value:function postOutboundDnclists(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundDnclists';}return this.apiClient.callApi('/api/v2/outbound/dnclists','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Import Template
	 * 
	 * @param {Object} body ImportTemplate
	 */},{key:"postOutboundImporttemplates",value:function postOutboundImporttemplates(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundImporttemplates';}return this.apiClient.callApi('/api/v2/outbound/importtemplates','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add multiple import templates
	 * 
	 * @param {Array.<Object>} body import template(s) to add
	 */},{key:"postOutboundImporttemplatesBulkAdd",value:function postOutboundImporttemplatesBulkAdd(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundImporttemplatesBulkAdd';}return this.apiClient.callApi('/api/v2/outbound/importtemplates/bulk/add','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Messaging Campaign
	 * 
	 * @param {Object} body Messaging Campaign
	 */},{key:"postOutboundMessagingcampaigns",value:function postOutboundMessagingcampaigns(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundMessagingcampaigns';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get progress for a list of messaging campaigns
	 * 
	 * @param {Array.<String>} body Messaging Campaign IDs
	 */},{key:"postOutboundMessagingcampaignsProgress",value:function postOutboundMessagingcampaignsProgress(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundMessagingcampaignsProgress';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/progress','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Rule Set.
	 * 
	 * @param {Object} body RuleSet
	 */},{key:"postOutboundRulesets",value:function postOutboundRulesets(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundRulesets';}return this.apiClient.callApi('/api/v2/outbound/rulesets','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new campaign sequence.
	 * 
	 * @param {Object} body Organization
	 */},{key:"postOutboundSequences",value:function postOutboundSequences(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOutboundSequences';}return this.apiClient.callApi('/api/v2/outbound/sequences','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update attempt limits
	 * 
	 * @param {String} attemptLimitsId Attempt limits ID
	 * @param {Object} body AttemptLimits
	 */},{key:"putOutboundAttemptlimit",value:function putOutboundAttemptlimit(attemptLimitsId,body){// verify the required parameter 'attemptLimitsId' is set
if(attemptLimitsId===undefined||attemptLimitsId===null){throw'Missing the required parameter "attemptLimitsId" when calling putOutboundAttemptlimit';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundAttemptlimit';}return this.apiClient.callApi('/api/v2/outbound/attemptlimits/{attemptLimitsId}','PUT',{'attemptLimitsId':attemptLimitsId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update callable time set
	 * 
	 * @param {String} callableTimeSetId Callable Time Set ID
	 * @param {Object} body DialerCallableTimeSet
	 */},{key:"putOutboundCallabletimeset",value:function putOutboundCallabletimeset(callableTimeSetId,body){// verify the required parameter 'callableTimeSetId' is set
if(callableTimeSetId===undefined||callableTimeSetId===null){throw'Missing the required parameter "callableTimeSetId" when calling putOutboundCallabletimeset';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundCallabletimeset';}return this.apiClient.callApi('/api/v2/outbound/callabletimesets/{callableTimeSetId}','PUT',{'callableTimeSetId':callableTimeSetId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a dialer call analysis response set.
	 * 
	 * @param {String} callAnalysisSetId Call Analysis Response Set ID
	 * @param {Object} body ResponseSet
	 */},{key:"putOutboundCallanalysisresponseset",value:function putOutboundCallanalysisresponseset(callAnalysisSetId,body){// verify the required parameter 'callAnalysisSetId' is set
if(callAnalysisSetId===undefined||callAnalysisSetId===null){throw'Missing the required parameter "callAnalysisSetId" when calling putOutboundCallanalysisresponseset';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundCallanalysisresponseset';}return this.apiClient.callApi('/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}','PUT',{'callAnalysisSetId':callAnalysisSetId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a campaign.
	 * 
	 * @param {String} campaignId Campaign ID
	 * @param {Object} body Campaign
	 */},{key:"putOutboundCampaign",value:function putOutboundCampaign(campaignId,body){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling putOutboundCampaign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundCampaign';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}','PUT',{'campaignId':campaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send notification that an agent's state changed 
	 * New agent state.
	 * @param {String} campaignId Campaign ID
	 * @param {String} userId Agent's user ID
	 * @param {Object} body agent
	 */},{key:"putOutboundCampaignAgent",value:function putOutboundCampaignAgent(campaignId,userId,body){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling putOutboundCampaignAgent';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putOutboundCampaignAgent';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundCampaignAgent';}return this.apiClient.callApi('/api/v2/outbound/campaigns/{campaignId}/agents/{userId}','PUT',{'campaignId':campaignId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Campaign Rule
	 * 
	 * @param {String} campaignRuleId Campaign Rule ID
	 * @param {Object} body CampaignRule
	 */},{key:"putOutboundCampaignrule",value:function putOutboundCampaignrule(campaignRuleId,body){// verify the required parameter 'campaignRuleId' is set
if(campaignRuleId===undefined||campaignRuleId===null){throw'Missing the required parameter "campaignRuleId" when calling putOutboundCampaignrule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundCampaignrule';}return this.apiClient.callApi('/api/v2/outbound/campaignrules/{campaignRuleId}','PUT',{'campaignRuleId':campaignRuleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a contact list.
	 * 
	 * @param {String} contactListId ContactList ID
	 * @param {Object} body ContactList
	 */},{key:"putOutboundContactlist",value:function putOutboundContactlist(contactListId,body){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling putOutboundContactlist';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundContactlist';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}','PUT',{'contactListId':contactListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a contact.
	 * 
	 * @param {String} contactListId Contact List ID
	 * @param {String} contactId Contact ID
	 * @param {Object} body Contact
	 */},{key:"putOutboundContactlistContact",value:function putOutboundContactlistContact(contactListId,contactId,body){// verify the required parameter 'contactListId' is set
if(contactListId===undefined||contactListId===null){throw'Missing the required parameter "contactListId" when calling putOutboundContactlistContact';}// verify the required parameter 'contactId' is set
if(contactId===undefined||contactId===null){throw'Missing the required parameter "contactId" when calling putOutboundContactlistContact';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundContactlistContact';}return this.apiClient.callApi('/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}','PUT',{'contactListId':contactListId,'contactId':contactId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Contact List Filter
	 * 
	 * @param {String} contactListFilterId Contact List Filter ID
	 * @param {Object} body ContactListFilter
	 */},{key:"putOutboundContactlistfilter",value:function putOutboundContactlistfilter(contactListFilterId,body){// verify the required parameter 'contactListFilterId' is set
if(contactListFilterId===undefined||contactListFilterId===null){throw'Missing the required parameter "contactListFilterId" when calling putOutboundContactlistfilter';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundContactlistfilter';}return this.apiClient.callApi('/api/v2/outbound/contactlistfilters/{contactListFilterId}','PUT',{'contactListFilterId':contactListFilterId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a contact list template.
	 * 
	 * @param {String} contactListTemplateId ContactListTemplate ID
	 * @param {Object} body ContactListTemplate
	 */},{key:"putOutboundContactlisttemplate",value:function putOutboundContactlisttemplate(contactListTemplateId,body){// verify the required parameter 'contactListTemplateId' is set
if(contactListTemplateId===undefined||contactListTemplateId===null){throw'Missing the required parameter "contactListTemplateId" when calling putOutboundContactlisttemplate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundContactlisttemplate';}return this.apiClient.callApi('/api/v2/outbound/contactlisttemplates/{contactListTemplateId}','PUT',{'contactListTemplateId':contactListTemplateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an Outbound Digital Rule Set
	 * 
	 * @param {String} digitalRuleSetId The Digital Rule Set ID
	 * @param {Object} body Digital Rule Set
	 */},{key:"putOutboundDigitalruleset",value:function putOutboundDigitalruleset(digitalRuleSetId,body){// verify the required parameter 'digitalRuleSetId' is set
if(digitalRuleSetId===undefined||digitalRuleSetId===null){throw'Missing the required parameter "digitalRuleSetId" when calling putOutboundDigitalruleset';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundDigitalruleset';}return this.apiClient.callApi('/api/v2/outbound/digitalrulesets/{digitalRuleSetId}','PUT',{'digitalRuleSetId':digitalRuleSetId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update dialer DNC list
	 * 
	 * @param {String} dncListId DncList ID
	 * @param {Object} body DncList
	 */},{key:"putOutboundDnclist",value:function putOutboundDnclist(dncListId,body){// verify the required parameter 'dncListId' is set
if(dncListId===undefined||dncListId===null){throw'Missing the required parameter "dncListId" when calling putOutboundDnclist';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundDnclist';}return this.apiClient.callApi('/api/v2/outbound/dnclists/{dncListId}','PUT',{'dncListId':dncListId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Import Template
	 * 
	 * @param {String} importTemplateId Import Template ID
	 * @param {Object} body importTemplate
	 */},{key:"putOutboundImporttemplate",value:function putOutboundImporttemplate(importTemplateId,body){// verify the required parameter 'importTemplateId' is set
if(importTemplateId===undefined||importTemplateId===null){throw'Missing the required parameter "importTemplateId" when calling putOutboundImporttemplate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundImporttemplate';}return this.apiClient.callApi('/api/v2/outbound/importtemplates/{importTemplateId}','PUT',{'importTemplateId':importTemplateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an Outbound Messaging Campaign
	 * 
	 * @param {String} messagingCampaignId The Messaging Campaign ID
	 * @param {Object} body MessagingCampaign
	 */},{key:"putOutboundMessagingcampaign",value:function putOutboundMessagingcampaign(messagingCampaignId,body){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling putOutboundMessagingcampaign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/messagingcampaigns/{messagingCampaignId}','PUT',{'messagingCampaignId':messagingCampaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Rule Set.
	 * 
	 * @param {String} ruleSetId Rule Set ID
	 * @param {Object} body RuleSet
	 */},{key:"putOutboundRuleset",value:function putOutboundRuleset(ruleSetId,body){// verify the required parameter 'ruleSetId' is set
if(ruleSetId===undefined||ruleSetId===null){throw'Missing the required parameter "ruleSetId" when calling putOutboundRuleset';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundRuleset';}return this.apiClient.callApi('/api/v2/outbound/rulesets/{ruleSetId}','PUT',{'ruleSetId':ruleSetId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a new campaign schedule.
	 * 
	 * @param {String} campaignId Campaign ID
	 * @param {Object} body CampaignSchedule
	 */},{key:"putOutboundSchedulesCampaign",value:function putOutboundSchedulesCampaign(campaignId,body){// verify the required parameter 'campaignId' is set
if(campaignId===undefined||campaignId===null){throw'Missing the required parameter "campaignId" when calling putOutboundSchedulesCampaign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundSchedulesCampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/campaigns/{campaignId}','PUT',{'campaignId':campaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an email campaign schedule.
	 * 
	 * @param {String} emailCampaignId Email Campaign ID
	 * @param {Object} body EmailCampaignSchedule
	 */},{key:"putOutboundSchedulesEmailcampaign",value:function putOutboundSchedulesEmailcampaign(emailCampaignId,body){// verify the required parameter 'emailCampaignId' is set
if(emailCampaignId===undefined||emailCampaignId===null){throw'Missing the required parameter "emailCampaignId" when calling putOutboundSchedulesEmailcampaign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundSchedulesEmailcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}','PUT',{'emailCampaignId':emailCampaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a new messaging campaign schedule.
	 * 
	 * @param {String} messagingCampaignId Messaging Campaign ID
	 * @param {Object} body MessagingCampaignSchedule
	 */},{key:"putOutboundSchedulesMessagingcampaign",value:function putOutboundSchedulesMessagingcampaign(messagingCampaignId,body){// verify the required parameter 'messagingCampaignId' is set
if(messagingCampaignId===undefined||messagingCampaignId===null){throw'Missing the required parameter "messagingCampaignId" when calling putOutboundSchedulesMessagingcampaign';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundSchedulesMessagingcampaign';}return this.apiClient.callApi('/api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}','PUT',{'messagingCampaignId':messagingCampaignId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a new sequence schedule.
	 * 
	 * @param {String} sequenceId Sequence ID
	 * @param {Object} body SequenceSchedule
	 */},{key:"putOutboundSchedulesSequence",value:function putOutboundSchedulesSequence(sequenceId,body){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling putOutboundSchedulesSequence';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundSchedulesSequence';}return this.apiClient.callApi('/api/v2/outbound/schedules/sequences/{sequenceId}','PUT',{'sequenceId':sequenceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a new campaign sequence.
	 * 
	 * @param {String} sequenceId Campaign Sequence ID
	 * @param {Object} body Organization
	 */},{key:"putOutboundSequence",value:function putOutboundSequence(sequenceId,body){// verify the required parameter 'sequenceId' is set
if(sequenceId===undefined||sequenceId===null){throw'Missing the required parameter "sequenceId" when calling putOutboundSequence';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundSequence';}return this.apiClient.callApi('/api/v2/outbound/sequences/{sequenceId}','PUT',{'sequenceId':sequenceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the Dialer wrap up code mapping.
	 * 
	 * @param {Object} body wrapUpCodeMapping
	 */},{key:"putOutboundWrapupcodemappings",value:function putOutboundWrapupcodemappings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putOutboundWrapupcodemappings';}return this.apiClient.callApi('/api/v2/outbound/wrapupcodemappings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return OutboundApi;}();var PresenceApi=/*#__PURE__*/function(){/**
	 * Presence service.
	 * @module purecloud-platform-client-v2/api/PresenceApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new PresenceApi. 
	 * @alias module:purecloud-platform-client-v2/api/PresenceApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function PresenceApi(apiClient){_classCallCheck(this,PresenceApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a Presence Definition
	 * 
	 * @param {String} definitionId Presence Definition ID
	 */_createClass(PresenceApi,[{key:"deletePresenceDefinition0",value:function deletePresenceDefinition0(definitionId){// verify the required parameter 'definitionId' is set
if(definitionId===undefined||definitionId===null){throw'Missing the required parameter "definitionId" when calling deletePresenceDefinition0';}return this.apiClient.callApi('/api/v2/presence/definitions/{definitionId}','DELETE',{'definitionId':definitionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Presence Source
	 * 
	 * @param {String} sourceId Presence Source ID
	 */},{key:"deletePresenceSource",value:function deletePresenceSource(sourceId){// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling deletePresenceSource';}return this.apiClient.callApi('/api/v2/presence/sources/{sourceId}','DELETE',{'sourceId':sourceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Presence Definition
	 * 
	 * @param {String} presenceId Organization Presence ID
	 */},{key:"deletePresencedefinition",value:function deletePresencedefinition(presenceId){// verify the required parameter 'presenceId' is set
if(presenceId===undefined||presenceId===null){throw'Missing the required parameter "presenceId" when calling deletePresencedefinition';}return this.apiClient.callApi('/api/v2/presencedefinitions/{presenceId}','DELETE',{'presenceId':presenceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Presence Definition
	 * 
	 * @param {String} definitionId Presence Definition ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.localeCode The locale code to fetch for the presence definition. Use ALL to fetch everything.
	 */},{key:"getPresenceDefinition0",value:function getPresenceDefinition0(definitionId,opts){opts=opts||{};// verify the required parameter 'definitionId' is set
if(definitionId===undefined||definitionId===null){throw'Missing the required parameter "definitionId" when calling getPresenceDefinition0';}return this.apiClient.callApi('/api/v2/presence/definitions/{definitionId}','GET',{'definitionId':definitionId},{'localeCode':opts['localeCode']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Presence Definitions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.deactivated Deactivated query can be TRUE or FALSE (default to false)
	 * @param {Array.<String>} opts.divisionId One or more division IDs. If nothing is provided, the definitions associated withthe list of divisions that the user has access to will be returned.
	 * @param {Object} opts.localeCode The locale code to fetch for the presence definition. Use ALL to fetch everything.
	 */},{key:"getPresenceDefinitions0",value:function getPresenceDefinitions0(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/presence/definitions','GET',{},{'deactivated':opts['deactivated'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'localeCode':opts['localeCode']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the presence settings
	 * 
	 */},{key:"getPresenceSettings",value:function getPresenceSettings(){return this.apiClient.callApi('/api/v2/presence/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Presence Source
	 * 
	 * @param {String} sourceId Presence Source ID
	 */},{key:"getPresenceSource",value:function getPresenceSource(sourceId){// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling getPresenceSource';}return this.apiClient.callApi('/api/v2/presence/sources/{sourceId}','GET',{'sourceId':sourceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Presence Sources
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.deactivated Deactivated query can be TRUE or FALSE (default to false)
	 */},{key:"getPresenceSources",value:function getPresenceSources(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/presence/sources','GET',{},{'deactivated':opts['deactivated']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's Primary Presence Source
	 * 
	 * @param {String} userId user ID
	 */},{key:"getPresenceUserPrimarysource",value:function getPresenceUserPrimarysource(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getPresenceUserPrimarysource';}return this.apiClient.callApi('/api/v2/presence/users/{userId}/primarysource','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Presence Definition
	 * 
	 * @param {String} presenceId Organization Presence ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.localeCode The locale code to fetch for the presence definition. Use ALL to fetch everything.
	 */},{key:"getPresencedefinition",value:function getPresencedefinition(presenceId,opts){opts=opts||{};// verify the required parameter 'presenceId' is set
if(presenceId===undefined||presenceId===null){throw'Missing the required parameter "presenceId" when calling getPresencedefinition';}return this.apiClient.callApi('/api/v2/presencedefinitions/{presenceId}','GET',{'presenceId':presenceId},{'localeCode':opts['localeCode']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Organization's list of Presence Definitions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.deleted Deleted query can be TRUE, FALSE or ALL (default to false)
	 * @param {String} opts.localeCode The locale code to fetch for each presence definition. Use ALL to fetch everything.
	 */},{key:"getPresencedefinitions",value:function getPresencedefinitions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/presencedefinitions','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'deleted':opts['deleted'],'localeCode':opts['localeCode']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of SystemPresences
	 * 
	 */},{key:"getSystempresences",value:function getSystempresences(){return this.apiClient.callApi('/api/v2/systempresences','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's Presence
	 * Get a users presence for the specified source that is not specifically listed.  Used to support custom presence sources. This endpoint does not support registered presence sources.
	 * @param {String} userId user Id
	 * @param {String} sourceId Presence source ID
	 */},{key:"getUserPresence",value:function getUserPresence(userId,sourceId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserPresence';}// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling getUserPresence';}return this.apiClient.callApi('/api/v2/users/{userId}/presences/{sourceId}','GET',{'userId':userId,'sourceId':sourceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's Genesys Cloud presence.
	 * Get the default Genesys Cloud user presence source PURECLOUD
	 * @param {String} userId user Id
	 */},{key:"getUserPresencesPurecloud",value:function getUserPresencesPurecloud(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserPresencesPurecloud';}return this.apiClient.callApi('/api/v2/users/{userId}/presences/purecloud','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get bulk user presences for a single presence source
	 * 
	 * @param {String} sourceId The requested presence source ID.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id A comma separated list of user IDs to fetch their presence status in bulk. Limit 50.
	 */},{key:"getUsersPresenceBulk",value:function getUsersPresenceBulk(sourceId,opts){opts=opts||{};// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling getUsersPresenceBulk';}return this.apiClient.callApi('/api/v2/users/presences/{sourceId}/bulk','GET',{'sourceId':sourceId},{'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get bulk user presences for a Genesys Cloud (PURECLOUD) presence source
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id A comma separated list of user IDs to fetch their presence status in bulk. Limit 50.
	 */},{key:"getUsersPresencesPurecloudBulk",value:function getUsersPresencesPurecloudBulk(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/users/presences/purecloud/bulk','GET',{},{'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a user's Presence
	 * Patch a users presence for the specified source that is not specifically listed. This endpoint does not support registered presence sources. The presence object can be patched one of three ways. Option 1: Set the primary property to true. This will set the source defined in the path as the users primary presence source. Option 2: Provide the presenceDefinition value. The id is the only value required within the presenceDefinition. Option 3: Provide the message value. Option 1 can be combined with Option 2 and/or Option 3.
	 * @param {String} userId user Id
	 * @param {String} sourceId Presence source ID
	 * @param {Object} body User presence
	 */},{key:"patchUserPresence",value:function patchUserPresence(userId,sourceId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserPresence';}// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling patchUserPresence';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserPresence';}return this.apiClient.callApi('/api/v2/users/{userId}/presences/{sourceId}','PATCH',{'userId':userId,'sourceId':sourceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a Genesys Cloud user's presence
	 * The presence object can be patched one of three ways. Option 1: Set the primary property to true. This will set the PURECLOUD source as the users primary presence source. Option 2: Provide the presenceDefinition value. The id is the only value required within the presenceDefinition. Option 3: Provide the message value. Option 1 can be combined with Option 2 and/or Option 3.
	 * @param {String} userId user Id
	 * @param {Object} body User presence
	 */},{key:"patchUserPresencesPurecloud",value:function patchUserPresencesPurecloud(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserPresencesPurecloud';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserPresencesPurecloud';}return this.apiClient.callApi('/api/v2/users/{userId}/presences/purecloud','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Presence Definition
	 * 
	 * @param {Object} body The Presence Definition to create
	 */},{key:"postPresenceDefinitions0",value:function postPresenceDefinitions0(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postPresenceDefinitions0';}return this.apiClient.callApi('/api/v2/presence/definitions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Presence Source
	 * 
	 * @param {Object} body The Presence Source to create
	 */},{key:"postPresenceSources",value:function postPresenceSources(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postPresenceSources';}return this.apiClient.callApi('/api/v2/presence/sources','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Presence Definition
	 * 
	 * @param {Object} body The Presence Definition to create
	 */},{key:"postPresencedefinitions",value:function postPresencedefinitions(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postPresencedefinitions';}return this.apiClient.callApi('/api/v2/presencedefinitions','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Presence Definition
	 * 
	 * @param {String} definitionId Presence Definition ID
	 * @param {Object} body The updated Presence Definition
	 */},{key:"putPresenceDefinition0",value:function putPresenceDefinition0(definitionId,body){// verify the required parameter 'definitionId' is set
if(definitionId===undefined||definitionId===null){throw'Missing the required parameter "definitionId" when calling putPresenceDefinition0';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putPresenceDefinition0';}return this.apiClient.callApi('/api/v2/presence/definitions/{definitionId}','PUT',{'definitionId':definitionId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the presence settings
	 * 
	 * @param {Object} body Presence Settings
	 */},{key:"putPresenceSettings",value:function putPresenceSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putPresenceSettings';}return this.apiClient.callApi('/api/v2/presence/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Presence Source
	 * 
	 * @param {String} sourceId Presence Source ID
	 * @param {Object} body The updated Presence Source
	 */},{key:"putPresenceSource",value:function putPresenceSource(sourceId,body){// verify the required parameter 'sourceId' is set
if(sourceId===undefined||sourceId===null){throw'Missing the required parameter "sourceId" when calling putPresenceSource';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putPresenceSource';}return this.apiClient.callApi('/api/v2/presence/sources/{sourceId}','PUT',{'sourceId':sourceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a user's Primary Presence Source
	 * 
	 * @param {String} userId user ID
	 * @param {Object} body Primary Source
	 */},{key:"putPresenceUserPrimarysource",value:function putPresenceUserPrimarysource(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putPresenceUserPrimarysource';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putPresenceUserPrimarysource';}return this.apiClient.callApi('/api/v2/presence/users/{userId}/primarysource','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Presence Definition
	 * 
	 * @param {String} presenceId Organization Presence ID
	 * @param {Object} body The OrganizationPresence to update
	 */},{key:"putPresencedefinition",value:function putPresencedefinition(presenceId,body){// verify the required parameter 'presenceId' is set
if(presenceId===undefined||presenceId===null){throw'Missing the required parameter "presenceId" when calling putPresencedefinition';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putPresencedefinition';}return this.apiClient.callApi('/api/v2/presencedefinitions/{presenceId}','PUT',{'presenceId':presenceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update bulk user Presences
	 * 
	 * @param {Array.<Object>} body List of User presences
	 */},{key:"putUsersPresencesBulk",value:function putUsersPresencesBulk(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUsersPresencesBulk';}return this.apiClient.callApi('/api/v2/users/presences/bulk','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return PresenceApi;}();var ProcessAutomationApi=/*#__PURE__*/function(){/**
	 * ProcessAutomation service.
	 * @module purecloud-platform-client-v2/api/ProcessAutomationApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ProcessAutomationApi. 
	 * @alias module:purecloud-platform-client-v2/api/ProcessAutomationApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ProcessAutomationApi(apiClient){_classCallCheck(this,ProcessAutomationApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a Trigger
	 * 
	 * @param {String} triggerId triggerId
	 */_createClass(ProcessAutomationApi,[{key:"deleteProcessautomationTrigger",value:function deleteProcessautomationTrigger(triggerId){// verify the required parameter 'triggerId' is set
if(triggerId===undefined||triggerId===null){throw'Missing the required parameter "triggerId" when calling deleteProcessautomationTrigger';}return this.apiClient.callApi('/api/v2/processautomation/triggers/{triggerId}','DELETE',{'triggerId':triggerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single Trigger matching id
	 * 
	 * @param {String} triggerId triggerId
	 */},{key:"getProcessautomationTrigger",value:function getProcessautomationTrigger(triggerId){// verify the required parameter 'triggerId' is set
if(triggerId===undefined||triggerId===null){throw'Missing the required parameter "triggerId" when calling getProcessautomationTrigger';}return this.apiClient.callApi('/api/v2/processautomation/triggers/{triggerId}','GET',{'triggerId':triggerId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves all triggers, optionally filtered by query parameters.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {String} opts.topicName Topic name(s). Separated by commas
	 * @param {Boolean} opts.enabled Boolean indicating desired enabled state of triggers
	 * @param {Boolean} opts.hasDelayBy Boolean to filter based on delayBySeconds being set in triggers. Default returns all, true returns only those with delayBySeconds set, false returns those without delayBySeconds set.
	 */},{key:"getProcessautomationTriggers",value:function getProcessautomationTriggers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/processautomation/triggers','GET',{},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize'],'topicName':opts['topicName'],'enabled':opts['enabled'],'hasDelayBy':opts['hasDelayBy']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get topics available for organization
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 */},{key:"getProcessautomationTriggersTopics",value:function getProcessautomationTriggersTopics(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/processautomation/triggers/topics','GET',{},{'before':opts['before'],'after':opts['after'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Test the matching of a Trigger based on provided event body
	 * 
	 * @param {String} triggerId triggerId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.body eventBody
	 */},{key:"postProcessautomationTriggerTest",value:function postProcessautomationTriggerTest(triggerId,opts){opts=opts||{};// verify the required parameter 'triggerId' is set
if(triggerId===undefined||triggerId===null){throw'Missing the required parameter "triggerId" when calling postProcessautomationTriggerTest';}return this.apiClient.callApi('/api/v2/processautomation/triggers/{triggerId}/test','POST',{'triggerId':triggerId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Trigger
	 * 
	 * @param {Object} body Input used to create a Trigger.
	 */},{key:"postProcessautomationTriggers",value:function postProcessautomationTriggers(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postProcessautomationTriggers';}return this.apiClient.callApi('/api/v2/processautomation/triggers','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Test the matching of all organization Triggers on given topic using provided event body
	 * 
	 * @param {String} topicName topicName
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.body eventBody
	 */},{key:"postProcessautomationTriggersTopicTest",value:function postProcessautomationTriggersTopicTest(topicName,opts){opts=opts||{};// verify the required parameter 'topicName' is set
if(topicName===undefined||topicName===null){throw'Missing the required parameter "topicName" when calling postProcessautomationTriggersTopicTest';}return this.apiClient.callApi('/api/v2/processautomation/triggers/topics/{topicName}/test','POST',{'topicName':topicName},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Trigger
	 * 
	 * @param {String} triggerId triggerId
	 * @param {Object} body Input to update Trigger. (topicName cannot be updated, a new trigger must be created to use a new topicName)
	 */},{key:"putProcessautomationTrigger",value:function putProcessautomationTrigger(triggerId,body){// verify the required parameter 'triggerId' is set
if(triggerId===undefined||triggerId===null){throw'Missing the required parameter "triggerId" when calling putProcessautomationTrigger';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putProcessautomationTrigger';}return this.apiClient.callApi('/api/v2/processautomation/triggers/{triggerId}','PUT',{'triggerId':triggerId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ProcessAutomationApi;}();var QualityApi=/*#__PURE__*/function(){/**
	 * Quality service.
	 * @module purecloud-platform-client-v2/api/QualityApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new QualityApi. 
	 * @alias module:purecloud-platform-client-v2/api/QualityApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function QualityApi(apiClient){_classCallCheck(this,QualityApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a calibration by id.
	 * 
	 * @param {String} calibrationId Calibration ID
	 * @param {String} calibratorId calibratorId
	 */_createClass(QualityApi,[{key:"deleteQualityCalibration",value:function deleteQualityCalibration(calibrationId,calibratorId){// verify the required parameter 'calibrationId' is set
if(calibrationId===undefined||calibrationId===null){throw'Missing the required parameter "calibrationId" when calling deleteQualityCalibration';}// verify the required parameter 'calibratorId' is set
if(calibratorId===undefined||calibratorId===null){throw'Missing the required parameter "calibratorId" when calling deleteQualityCalibration';}return this.apiClient.callApi('/api/v2/quality/calibrations/{calibrationId}','DELETE',{'calibrationId':calibrationId},{'calibratorId':calibratorId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an evaluation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} evaluationId evaluationId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expand evaluatorId, evaluationForm
	 */},{key:"deleteQualityConversationEvaluation",value:function deleteQualityConversationEvaluation(conversationId,evaluationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteQualityConversationEvaluation';}// verify the required parameter 'evaluationId' is set
if(evaluationId===undefined||evaluationId===null){throw'Missing the required parameter "evaluationId" when calling deleteQualityConversationEvaluation';}return this.apiClient.callApi('/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}','DELETE',{'conversationId':conversationId,'evaluationId':evaluationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an evaluation form.
	 * 
	 * @param {String} formId Form ID
	 * @deprecated
	 */},{key:"deleteQualityForm",value:function deleteQualityForm(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling deleteQualityForm';}return this.apiClient.callApi('/api/v2/quality/forms/{formId}','DELETE',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an evaluation form.
	 * 
	 * @param {String} formId Form ID
	 */},{key:"deleteQualityFormsEvaluation",value:function deleteQualityFormsEvaluation(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling deleteQualityFormsEvaluation';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations/{formId}','DELETE',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a survey form.
	 * 
	 * @param {String} formId Form ID
	 */},{key:"deleteQualityFormsSurvey",value:function deleteQualityFormsSurvey(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling deleteQualityFormsSurvey';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/{formId}','DELETE',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for evaluation aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsEvaluationsAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsEvaluationsAggregatesJob",value:function getAnalyticsEvaluationsAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsEvaluationsAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsEvaluationsAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsEvaluationsAggregatesJobResults",value:function getAnalyticsEvaluationsAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsEvaluationsAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for survey aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsSurveysAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsSurveysAggregatesJob",value:function getAnalyticsSurveysAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsSurveysAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsSurveysAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsSurveysAggregatesJobResults",value:function getAnalyticsSurveysAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsSurveysAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of Agent Activities
	 * Each item on the list shows one agents evaluation activity comprised of the number of evaluations and the highest, average, and lowest standard and critical scores, as well as a sub list showing the number and average score of evaluations for each evaluator for that agent.  evaluatorUserId, startTime, and endTime are all filtering criteria. If specified, the only evaluations used to compile the agent activity response will be ones that match the filtering criteria. agentUserId, name, group, and agentTeamId are all agent selection criteria. criteria.  If one or more agent selection criteria are specified, then the returned activity will include users that match the criteria even if those users did not have any agent activity or evaluations that do not match any filtering criteria.  If no agent selection criteria are specified but an evaluatorUserId is, then the returned activity will be only for those agents that had evaluations where the evaluator is the evaluatorUserId.  If no agent selection criteria are specified and no evaluatorUserId is specified, then the returned activity will be for all users
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Date} opts.startTime Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Date} opts.endTime End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Array.<String>} opts.agentUserId user id of agent requested
	 * @param {String} opts.evaluatorUserId user id of the evaluator
	 * @param {String} opts.name name
	 * @param {String} opts.group group id
	 * @param {String} opts.agentTeamId team id of agents requested
	 * @param {String} opts.formContextId shared id between form versions
	 */},{key:"getQualityAgentsActivity",value:function getQualityAgentsActivity(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/agents/activity','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'startTime':opts['startTime'],'endTime':opts['endTime'],'agentUserId':this.apiClient.buildCollectionParam(opts['agentUserId'],'multi'),'evaluatorUserId':opts['evaluatorUserId'],'name':opts['name'],'group':opts['group'],'agentTeamId':opts['agentTeamId'],'formContextId':opts['formContextId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a calibration by id.  Requires either calibrator id or conversation id
	 * 
	 * @param {String} calibrationId Calibration ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.calibratorId calibratorId
	 * @param {String} opts.conversationId conversationId
	 */},{key:"getQualityCalibration",value:function getQualityCalibration(calibrationId,opts){opts=opts||{};// verify the required parameter 'calibrationId' is set
if(calibrationId===undefined||calibrationId===null){throw'Missing the required parameter "calibrationId" when calling getQualityCalibration';}return this.apiClient.callApi('/api/v2/quality/calibrations/{calibrationId}','GET',{'calibrationId':calibrationId},{'calibratorId':opts['calibratorId'],'conversationId':opts['conversationId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of calibrations
	 * 
	 * @param {String} calibratorId user id of calibrator
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.conversationId conversation id
	 * @param {Date} opts.startTime Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Date} opts.endTime end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 */},{key:"getQualityCalibrations",value:function getQualityCalibrations(calibratorId,opts){opts=opts||{};// verify the required parameter 'calibratorId' is set
if(calibratorId===undefined||calibratorId===null){throw'Missing the required parameter "calibratorId" when calling getQualityCalibrations';}return this.apiClient.callApi('/api/v2/quality/calibrations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'conversationId':opts['conversationId'],'startTime':opts['startTime'],'endTime':opts['endTime'],'calibratorId':calibratorId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an evaluation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} evaluationId evaluationId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expand agent, assignee, evaluator, evaluationForm
	 */},{key:"getQualityConversationEvaluation",value:function getQualityConversationEvaluation(conversationId,evaluationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getQualityConversationEvaluation';}// verify the required parameter 'evaluationId' is set
if(evaluationId===undefined||evaluationId===null){throw'Missing the required parameter "evaluationId" when calling getQualityConversationEvaluation';}return this.apiClient.callApi('/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}','GET',{'conversationId':conversationId,'evaluationId':evaluationId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the surveys for a conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getQualityConversationSurveys",value:function getQualityConversationSurveys(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getQualityConversationSurveys';}return this.apiClient.callApi('/api/v2/quality/conversations/{conversationId}/surveys','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status of audit query execution
	 * 
	 * @param {String} transactionId Transaction ID
	 */},{key:"getQualityConversationsAuditsQueryTransactionId",value:function getQualityConversationsAuditsQueryTransactionId(transactionId){// verify the required parameter 'transactionId' is set
if(transactionId===undefined||transactionId===null){throw'Missing the required parameter "transactionId" when calling getQualityConversationsAuditsQueryTransactionId';}return this.apiClient.callApi('/api/v2/quality/conversations/audits/query/{transactionId}','GET',{'transactionId':transactionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get results of audit query
	 * 
	 * @param {String} transactionId Transaction ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getQualityConversationsAuditsQueryTransactionIdResults",value:function getQualityConversationsAuditsQueryTransactionIdResults(transactionId,opts){opts=opts||{};// verify the required parameter 'transactionId' is set
if(transactionId===undefined||transactionId===null){throw'Missing the required parameter "transactionId" when calling getQualityConversationsAuditsQueryTransactionIdResults';}return this.apiClient.callApi('/api/v2/quality/conversations/audits/query/{transactionId}/results','GET',{'transactionId':transactionId},{'cursor':opts['cursor'],'pageSize':opts['pageSize'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Queries Evaluations and returns a paged list
	 * Query params must include one of conversationId, evaluatorUserId, agentUserId or assigneeUserId. When querying by agentUserId (and not conversationId or evaluatorUserId), the results are sorted by release date. Evaluations set to Never Release are omitted in this case. When querying by evaluatorUserId or conversationId (including when combined with agentUserId), the results are sorted by assigned date.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy NOTE: Does not work when querying evaluations
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage NOTE: Does not work when querying evaluations
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.conversationId conversationId specified
	 * @param {String} opts.agentUserId user id of the agent
	 * @param {String} opts.agentTeamId team id of the agent
	 * @param {String} opts.evaluatorUserId evaluator user id
	 * @param {String} opts.assigneeUserId assignee user id
	 * @param {String} opts.queueId queue id
	 * @param {String} opts.startTime start time of the evaluation query
	 * @param {String} opts.endTime end time of the evaluation query
	 * @param {String} opts.formContextId shared id between form versions
	 * @param {Array.<String>} opts.evaluationState 
	 * @param {Boolean} opts.isReleased the evaluation has been released
	 * @param {Boolean} opts.agentHasRead agent has the evaluation
	 * @param {Boolean} opts.expandAnswerTotalScores get the total scores for evaluations
	 * @param {Number} opts.maximum the maximum number of results to return
	 * @param {String} opts.sortOrder NOTE: Does not work when conversationId is supplied.
	 */},{key:"getQualityEvaluationsQuery",value:function getQualityEvaluationsQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/evaluations/query','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'conversationId':opts['conversationId'],'agentUserId':opts['agentUserId'],'agentTeamId':opts['agentTeamId'],'evaluatorUserId':opts['evaluatorUserId'],'assigneeUserId':opts['assigneeUserId'],'queueId':opts['queueId'],'startTime':opts['startTime'],'endTime':opts['endTime'],'formContextId':opts['formContextId'],'evaluationState':this.apiClient.buildCollectionParam(opts['evaluationState'],'multi'),'isReleased':opts['isReleased'],'agentHasRead':opts['agentHasRead'],'expandAnswerTotalScores':opts['expandAnswerTotalScores'],'maximum':opts['maximum'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an evaluator activity
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Date} opts.startTime The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Date} opts.endTime The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {String} opts.name Evaluator name
	 * @param {Array.<String>} opts.permission permission strings
	 * @param {String} opts.group group id
	 * @param {String} opts.agentTeamId team id of agents to be considered
	 */},{key:"getQualityEvaluatorsActivity",value:function getQualityEvaluatorsActivity(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/evaluators/activity','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'startTime':opts['startTime'],'endTime':opts['endTime'],'name':opts['name'],'permission':this.apiClient.buildCollectionParam(opts['permission'],'multi'),'group':opts['group'],'agentTeamId':opts['agentTeamId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an evaluation form
	 * 
	 * @param {String} formId Form ID
	 * @deprecated
	 */},{key:"getQualityForm",value:function getQualityForm(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityForm';}return this.apiClient.callApi('/api/v2/quality/forms/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the revisions for a specific evaluation.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @deprecated
	 */},{key:"getQualityFormVersions",value:function getQualityFormVersions(formId,opts){opts=opts||{};// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityFormVersions';}return this.apiClient.callApi('/api/v2/quality/forms/{formId}/versions','GET',{'formId':formId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of evaluation forms
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Object} opts.expand If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions
	 * @param {String} opts.name Name
	 * @param {String} opts.sortOrder Order to sort results, either asc or desc
	 * @deprecated
	 */},{key:"getQualityForms",value:function getQualityForms(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/forms','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'expand':opts['expand'],'name':opts['name'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an evaluation form
	 * 
	 * @param {String} formId Form ID
	 */},{key:"getQualityFormsEvaluation",value:function getQualityFormsEvaluation(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityFormsEvaluation';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the revisions for a specific evaluation.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortOrder Sort order (default to asc)
	 */},{key:"getQualityFormsEvaluationVersions",value:function getQualityFormsEvaluationVersions(formId,opts){opts=opts||{};// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityFormsEvaluationVersions';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations/{formId}/versions','GET',{'formId':formId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of evaluation forms
	 * By default, "published" field is always returned as false for all evaluation forms. If you set "expand=publishHistory", then you will be able to get published versions for each corresponding evaluation form. In addition, "questionGroups", the detailed information about evaluation form, is not returned by default. We will enhance this field in the future release.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Object} opts.expand If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions
	 * @param {String} opts.name Name
	 * @param {String} opts.sortOrder Order to sort results, either asc or desc
	 */},{key:"getQualityFormsEvaluations",value:function getQualityFormsEvaluations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/forms/evaluations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'expand':opts['expand'],'name':opts['name'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of the latest published evaluation form versions by context ids
	 * 
	 * @param {Array.<String>} contextId A comma-delimited list of valid evaluation form context ids
	 */},{key:"getQualityFormsEvaluationsBulkContexts",value:function getQualityFormsEvaluationsBulkContexts(contextId){// verify the required parameter 'contextId' is set
if(contextId===undefined||contextId===null){throw'Missing the required parameter "contextId" when calling getQualityFormsEvaluationsBulkContexts';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations/bulk/contexts','GET',{},{'contextId':this.apiClient.buildCollectionParam(contextId,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a survey form
	 * 
	 * @param {String} formId Form ID
	 */},{key:"getQualityFormsSurvey",value:function getQualityFormsSurvey(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityFormsSurvey';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the revisions for a specific survey.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getQualityFormsSurveyVersions",value:function getQualityFormsSurveyVersions(formId,opts){opts=opts||{};// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityFormsSurveyVersions';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/{formId}/versions','GET',{'formId':formId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of survey forms
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Object} opts.expand If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions
	 * @param {String} opts.name Name
	 * @param {String} opts.sortOrder Order to sort results, either asc or desc
	 */},{key:"getQualityFormsSurveys",value:function getQualityFormsSurveys(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/forms/surveys','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'expand':opts['expand'],'name':opts['name'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of survey forms by their ids
	 * 
	 * @param {Array.<String>} id A comma-delimited list of valid survey form ids
	 */},{key:"getQualityFormsSurveysBulk",value:function getQualityFormsSurveysBulk(id){// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling getQualityFormsSurveysBulk';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/bulk','GET',{},{'id':this.apiClient.buildCollectionParam(id,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of the latest form versions by context ids
	 * 
	 * @param {Array.<String>} contextId A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.published If true, the latest published version will be included. If false, only the unpublished version will be included. (default to true)
	 */},{key:"getQualityFormsSurveysBulkContexts",value:function getQualityFormsSurveysBulkContexts(contextId,opts){opts=opts||{};// verify the required parameter 'contextId' is set
if(contextId===undefined||contextId===null){throw'Missing the required parameter "contextId" when calling getQualityFormsSurveysBulkContexts';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/bulk/contexts','GET',{},{'contextId':this.apiClient.buildCollectionParam(contextId,'multi'),'published':opts['published']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published evaluation forms.
	 * 
	 * @param {String} formId Form ID
	 * @deprecated
	 */},{key:"getQualityPublishedform",value:function getQualityPublishedform(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityPublishedform';}return this.apiClient.callApi('/api/v2/quality/publishedforms/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published evaluation forms.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {Boolean} opts.onlyLatestPerContext onlyLatestPerContext (default to false)
	 * @deprecated
	 */},{key:"getQualityPublishedforms",value:function getQualityPublishedforms(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/publishedforms','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'onlyLatestPerContext':opts['onlyLatestPerContext']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the most recent published version of an evaluation form.
	 * 
	 * @param {String} formId Form ID
	 */},{key:"getQualityPublishedformsEvaluation",value:function getQualityPublishedformsEvaluation(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityPublishedformsEvaluation';}return this.apiClient.callApi('/api/v2/quality/publishedforms/evaluations/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published evaluation forms.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {Boolean} opts.onlyLatestPerContext onlyLatestPerContext (default to false)
	 */},{key:"getQualityPublishedformsEvaluations",value:function getQualityPublishedformsEvaluations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/publishedforms/evaluations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'onlyLatestPerContext':opts['onlyLatestPerContext']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the most recent published version of a survey form.
	 * 
	 * @param {String} formId Form ID
	 */},{key:"getQualityPublishedformsSurvey",value:function getQualityPublishedformsSurvey(formId){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling getQualityPublishedformsSurvey';}return this.apiClient.callApi('/api/v2/quality/publishedforms/surveys/{formId}','GET',{'formId':formId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published survey forms.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {Boolean} opts.onlyLatestEnabledPerContext onlyLatestEnabledPerContext (default to false)
	 */},{key:"getQualityPublishedformsSurveys",value:function getQualityPublishedformsSurveys(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/quality/publishedforms/surveys','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'onlyLatestEnabledPerContext':opts['onlyLatestEnabledPerContext']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a survey for a conversation
	 * 
	 * @param {String} surveyId surveyId
	 */},{key:"getQualitySurvey",value:function getQualitySurvey(surveyId){// verify the required parameter 'surveyId' is set
if(surveyId===undefined||surveyId===null){throw'Missing the required parameter "surveyId" when calling getQualitySurvey';}return this.apiClient.callApi('/api/v2/quality/surveys/{surveyId}','GET',{'surveyId':surveyId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a survey as an end-customer, for the purposes of scoring it.
	 * 
	 * @param {String} customerSurveyUrl customerSurveyUrl
	 */},{key:"getQualitySurveysScorable",value:function getQualitySurveysScorable(customerSurveyUrl){// verify the required parameter 'customerSurveyUrl' is set
if(customerSurveyUrl===undefined||customerSurveyUrl===null){throw'Missing the required parameter "customerSurveyUrl" when calling getQualitySurveysScorable';}return this.apiClient.callApi('/api/v2/quality/surveys/scorable','GET',{},{'customerSurveyUrl':customerSurveyUrl},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} body Survey form
	 */},{key:"patchQualityFormsSurvey",value:function patchQualityFormsSurvey(formId,body){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling patchQualityFormsSurvey';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchQualityFormsSurvey';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/{formId}','PATCH',{'formId':formId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for evaluation aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsEvaluationsAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsEvaluationsAggregatesJobs",value:function postAnalyticsEvaluationsAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsEvaluationsAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for evaluation aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsEvaluationsAggregatesQuery",value:function postAnalyticsEvaluationsAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsEvaluationsAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/evaluations/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for survey aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsSurveysAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsSurveysAggregatesJobs",value:function postAnalyticsSurveysAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsSurveysAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for survey aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsSurveysAggregatesQuery",value:function postAnalyticsSurveysAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsSurveysAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/surveys/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a calibration
	 * 
	 * @param {Object} body calibration
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expand calibratorId
	 */},{key:"postQualityCalibrations",value:function postQualityCalibrations(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityCalibrations';}return this.apiClient.callApi('/api/v2/quality/calibrations','POST',{},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an evaluation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} body evaluation
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expand evaluatorId
	 */},{key:"postQualityConversationEvaluations",value:function postQualityConversationEvaluations(conversationId,body,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postQualityConversationEvaluations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityConversationEvaluations';}return this.apiClient.callApi('/api/v2/quality/conversations/{conversationId}/evaluations','POST',{'conversationId':conversationId},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create audit query execution
	 * 
	 * @param {Object} body query
	 */},{key:"postQualityConversationsAuditsQuery",value:function postQualityConversationsAuditsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityConversationsAuditsQuery';}return this.apiClient.callApi('/api/v2/quality/conversations/audits/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for evaluation aggregates for the current user
	 * 
	 * @param {Object} body query
	 */},{key:"postQualityEvaluationsAggregatesQueryMe",value:function postQualityEvaluationsAggregatesQueryMe(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityEvaluationsAggregatesQueryMe';}return this.apiClient.callApi('/api/v2/quality/evaluations/aggregates/query/me','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Score evaluation
	 * 
	 * @param {Object} body evaluationAndScoringSet
	 */},{key:"postQualityEvaluationsScoring",value:function postQualityEvaluationsScoring(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityEvaluationsScoring';}return this.apiClient.callApi('/api/v2/quality/evaluations/scoring','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an evaluation form.
	 * 
	 * @param {Object} body Evaluation form
	 * @deprecated
	 */},{key:"postQualityForms",value:function postQualityForms(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityForms';}return this.apiClient.callApi('/api/v2/quality/forms','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an evaluation form.
	 * 
	 * @param {Object} body Evaluation form
	 */},{key:"postQualityFormsEvaluations",value:function postQualityFormsEvaluations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityFormsEvaluations';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a survey form.
	 * 
	 * @param {Object} body Survey form
	 */},{key:"postQualityFormsSurveys",value:function postQualityFormsSurveys(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityFormsSurveys';}return this.apiClient.callApi('/api/v2/quality/forms/surveys','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish an evaluation form.
	 * 
	 * @param {Object} body Publish request containing id of form to publish
	 * @deprecated
	 */},{key:"postQualityPublishedforms",value:function postQualityPublishedforms(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityPublishedforms';}return this.apiClient.callApi('/api/v2/quality/publishedforms','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish an evaluation form.
	 * 
	 * @param {Object} body Publish request containing id of form to publish
	 */},{key:"postQualityPublishedformsEvaluations",value:function postQualityPublishedformsEvaluations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityPublishedformsEvaluations';}return this.apiClient.callApi('/api/v2/quality/publishedforms/evaluations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish a survey form.
	 * 
	 * @param {Object} body Survey form
	 */},{key:"postQualityPublishedformsSurveys",value:function postQualityPublishedformsSurveys(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualityPublishedformsSurveys';}return this.apiClient.callApi('/api/v2/quality/publishedforms/surveys','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Score survey
	 * 
	 * @param {Object} body surveyAndScoringSet
	 */},{key:"postQualitySurveysScoring",value:function postQualitySurveysScoring(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postQualitySurveysScoring';}return this.apiClient.callApi('/api/v2/quality/surveys/scoring','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex
	 * 
	 * @param {String} calibrationId Calibration ID
	 * @param {Object} body Calibration
	 */},{key:"putQualityCalibration",value:function putQualityCalibration(calibrationId,body){// verify the required parameter 'calibrationId' is set
if(calibrationId===undefined||calibrationId===null){throw'Missing the required parameter "calibrationId" when calling putQualityCalibration';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualityCalibration';}return this.apiClient.callApi('/api/v2/quality/calibrations/{calibrationId}','PUT',{'calibrationId':calibrationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an evaluation
	 * The quality:evaluation:edit permission allows modification of most fields, while the quality:evaluation:editScore permission allows an evaluator to change just the question scores, and the quality:evaluation:editAgentSignoff permission allows an agent to change the agent comments and sign off on the evaluation.
	 * @param {String} conversationId conversationId
	 * @param {String} evaluationId evaluationId
	 * @param {Object} body evaluation
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.expand evaluatorId, evaluationForm, assignee, evaluator
	 */},{key:"putQualityConversationEvaluation",value:function putQualityConversationEvaluation(conversationId,evaluationId,body,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putQualityConversationEvaluation';}// verify the required parameter 'evaluationId' is set
if(evaluationId===undefined||evaluationId===null){throw'Missing the required parameter "evaluationId" when calling putQualityConversationEvaluation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualityConversationEvaluation';}return this.apiClient.callApi('/api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}','PUT',{'conversationId':conversationId,'evaluationId':evaluationId},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an evaluation form.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} body Evaluation form
	 * @deprecated
	 */},{key:"putQualityForm",value:function putQualityForm(formId,body){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling putQualityForm';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualityForm';}return this.apiClient.callApi('/api/v2/quality/forms/{formId}','PUT',{'formId':formId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an evaluation form.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} body Evaluation form
	 */},{key:"putQualityFormsEvaluation",value:function putQualityFormsEvaluation(formId,body){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling putQualityFormsEvaluation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualityFormsEvaluation';}return this.apiClient.callApi('/api/v2/quality/forms/evaluations/{formId}','PUT',{'formId':formId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a survey form.
	 * 
	 * @param {String} formId Form ID
	 * @param {Object} body Survey form
	 */},{key:"putQualityFormsSurvey",value:function putQualityFormsSurvey(formId,body){// verify the required parameter 'formId' is set
if(formId===undefined||formId===null){throw'Missing the required parameter "formId" when calling putQualityFormsSurvey';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualityFormsSurvey';}return this.apiClient.callApi('/api/v2/quality/forms/surveys/{formId}','PUT',{'formId':formId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a survey as an end-customer, for the purposes of scoring it.
	 * 
	 * @param {String} customerSurveyUrl customerSurveyUrl
	 * @param {Object} body survey
	 */},{key:"putQualitySurveysScorable",value:function putQualitySurveysScorable(customerSurveyUrl,body){// verify the required parameter 'customerSurveyUrl' is set
if(customerSurveyUrl===undefined||customerSurveyUrl===null){throw'Missing the required parameter "customerSurveyUrl" when calling putQualitySurveysScorable';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putQualitySurveysScorable';}return this.apiClient.callApi('/api/v2/quality/surveys/scorable','PUT',{},{'customerSurveyUrl':customerSurveyUrl},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return QualityApi;}();var RecordingApi=/*#__PURE__*/function(){/**
	 * Recording service.
	 * @module purecloud-platform-client-v2/api/RecordingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new RecordingApi. 
	 * @alias module:purecloud-platform-client-v2/api/RecordingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function RecordingApi(apiClient){_classCallCheck(this,RecordingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete annotation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {String} annotationId Annotation ID
	 */_createClass(RecordingApi,[{key:"deleteConversationRecordingAnnotation",value:function deleteConversationRecordingAnnotation(conversationId,recordingId,annotationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteConversationRecordingAnnotation';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling deleteConversationRecordingAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling deleteConversationRecordingAnnotation';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}','DELETE',{'conversationId':conversationId,'recordingId':recordingId,'annotationId':annotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes a single orphan recording
	 * 
	 * @param {String} orphanId Orphan ID
	 */},{key:"deleteOrphanrecording",value:function deleteOrphanrecording(orphanId){// verify the required parameter 'orphanId' is set
if(orphanId===undefined||orphanId===null){throw'Missing the required parameter "orphanId" when calling deleteOrphanrecording';}return this.apiClient.callApi('/api/v2/orphanrecordings/{orphanId}','DELETE',{'orphanId':orphanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete media retention policies
	 * Bulk delete of media retention policies, this will only delete the polices that match the ids specified in the query param.
	 * @param {String} ids 
	 */},{key:"deleteRecordingCrossplatformMediaretentionpolicies",value:function deleteRecordingCrossplatformMediaretentionpolicies(ids){// verify the required parameter 'ids' is set
if(ids===undefined||ids===null){throw'Missing the required parameter "ids" when calling deleteRecordingCrossplatformMediaretentionpolicies';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies','DELETE',{},{'ids':ids},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 */},{key:"deleteRecordingCrossplatformMediaretentionpolicy",value:function deleteRecordingCrossplatformMediaretentionpolicy(policyId){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling deleteRecordingCrossplatformMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}','DELETE',{'policyId':policyId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the recording bulk job
	 * 
	 * @param {String} jobId jobId
	 */},{key:"deleteRecordingJob",value:function deleteRecordingJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling deleteRecordingJob';}return this.apiClient.callApi('/api/v2/recording/jobs/{jobId}','DELETE',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete media retention policies
	 * Bulk delete of media retention policies, this will only delete the polices that match the ids specified in the query param.
	 * @param {String} ids 
	 */},{key:"deleteRecordingMediaretentionpolicies",value:function deleteRecordingMediaretentionpolicies(ids){// verify the required parameter 'ids' is set
if(ids===undefined||ids===null){throw'Missing the required parameter "ids" when calling deleteRecordingMediaretentionpolicies';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies','DELETE',{},{'ids':ids},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 */},{key:"deleteRecordingMediaretentionpolicy",value:function deleteRecordingMediaretentionpolicy(policyId){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling deleteRecordingMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies/{policyId}','DELETE',{'policyId':policyId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a specific recording.
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.formatId The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE (default to WEBM)
	 * @param {Object} opts.emailFormatId The desired media format when downloading an email recording. Valid values:EML,NONE (default to EML)
	 * @param {Object} opts.chatFormatId The desired media format when downloading a chat recording. Valid values:ZIP,NONE  (default to ZIP)
	 * @param {Object} opts.messageFormatId The desired media format when downloading a message recording. Valid values:ZIP,NONE (default to ZIP)
	 * @param {Object} opts.download requesting a download format of the recording. Valid values:true,false (default to false)
	 * @param {String} opts.fileName the name of the downloaded fileName
	 * @param {String} opts.locale The locale for the requested file when downloading, as an ISO 639-1 code
	 * @param {Array.<String>} opts.mediaFormats All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3
	 */},{key:"getConversationRecording",value:function getConversationRecording(conversationId,recordingId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecording';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getConversationRecording';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}','GET',{'conversationId':conversationId,'recordingId':recordingId},{'formatId':opts['formatId'],'emailFormatId':opts['emailFormatId'],'chatFormatId':opts['chatFormatId'],'messageFormatId':opts['messageFormatId'],'download':opts['download'],'fileName':opts['fileName'],'locale':opts['locale'],'mediaFormats':this.apiClient.buildCollectionParam(opts['mediaFormats'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get annotation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {String} annotationId Annotation ID
	 */},{key:"getConversationRecordingAnnotation",value:function getConversationRecordingAnnotation(conversationId,recordingId,annotationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecordingAnnotation';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getConversationRecordingAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling getConversationRecordingAnnotation';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}','GET',{'conversationId':conversationId,'recordingId':recordingId,'annotationId':annotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get annotations for recording
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 */},{key:"getConversationRecordingAnnotations",value:function getConversationRecordingAnnotations(conversationId,recordingId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecordingAnnotations';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getConversationRecordingAnnotations';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations','GET',{'conversationId':conversationId,'recordingId':recordingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get recording metadata for a conversation. Does not return playable media. Annotations won't be included in the response if either recording:recording:view or recording:annotation:view permission is missing.
	 * 
	 * @param {String} conversationId Conversation ID
	 */},{key:"getConversationRecordingmetadata",value:function getConversationRecordingmetadata(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecordingmetadata';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordingmetadata','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get metadata for a specific recording. Does not return playable media.
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 */},{key:"getConversationRecordingmetadataRecordingId",value:function getConversationRecordingmetadataRecordingId(conversationId,recordingId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecordingmetadataRecordingId';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getConversationRecordingmetadataRecordingId';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordingmetadata/{recordingId}','GET',{'conversationId':conversationId,'recordingId':recordingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all of a Conversation's Recordings.
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.maxWaitMs The maximum number of milliseconds to wait for the recording to be ready. Must be a positive value. (default to 5000)
	 * @param {Object} opts.formatId The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE. (default to WEBM)
	 * @param {Array.<String>} opts.mediaFormats All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3.
	 */},{key:"getConversationRecordings",value:function getConversationRecordings(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getConversationRecordings';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings','GET',{'conversationId':conversationId},{'maxWaitMs':opts['maxWaitMs'],'formatId':opts['formatId'],'mediaFormats':this.apiClient.buildCollectionParam(opts['mediaFormats'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a single orphan recording
	 * 
	 * @param {String} orphanId Orphan ID
	 */},{key:"getOrphanrecording",value:function getOrphanrecording(orphanId){// verify the required parameter 'orphanId' is set
if(orphanId===undefined||orphanId===null){throw'Missing the required parameter "orphanId" when calling getOrphanrecording';}return this.apiClient.callApi('/api/v2/orphanrecordings/{orphanId}','GET',{'orphanId':orphanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets the media of a single orphan recording
	 * A 202 response means the orphaned media is currently transcoding and will be available shortly.A 200 response denotes the transcoded orphan media is available now and is contained in the response body.
	 * @param {String} orphanId Orphan ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.formatId The desired media format. (default to WEBM)
	 * @param {Object} opts.emailFormatId The desired media format when downloading an email recording. (default to EML)
	 * @param {Object} opts.chatFormatId The desired media format when downloading a chat recording. (default to ZIP)
	 * @param {Object} opts.messageFormatId The desired media format when downloading a message recording. (default to ZIP)
	 * @param {Object} opts.download requesting a download format of the recording (default to false)
	 * @param {String} opts.fileName the name of the downloaded fileName
	 * @param {String} opts.locale The locale for the requested file when downloading, as an ISO 639-1 code
	 * @param {Array.<String>} opts.mediaFormats All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3
	 */},{key:"getOrphanrecordingMedia",value:function getOrphanrecordingMedia(orphanId,opts){opts=opts||{};// verify the required parameter 'orphanId' is set
if(orphanId===undefined||orphanId===null){throw'Missing the required parameter "orphanId" when calling getOrphanrecordingMedia';}return this.apiClient.callApi('/api/v2/orphanrecordings/{orphanId}/media','GET',{'orphanId':orphanId},{'formatId':opts['formatId'],'emailFormatId':opts['emailFormatId'],'chatFormatId':opts['chatFormatId'],'messageFormatId':opts['messageFormatId'],'download':opts['download'],'fileName':opts['fileName'],'locale':opts['locale'],'mediaFormats':this.apiClient.buildCollectionParam(opts['mediaFormats'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all orphan recordings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {Boolean} opts.hasConversation Filter resulting orphans by whether the conversation is known. False returns all orphans for the organization. (default to false)
	 * @param {Object} opts.media Filter resulting orphans based on their media type
	 */},{key:"getOrphanrecordings",value:function getOrphanrecordings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/orphanrecordings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'hasConversation':opts['hasConversation'],'media':opts['media']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status and results for a batch request job, only the user that submitted the job may retrieve results
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getRecordingBatchrequest",value:function getRecordingBatchrequest(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getRecordingBatchrequest';}return this.apiClient.callApi('/api/v2/recording/batchrequests/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets media retention policy list with query options to filter on name and enabled.
	 * for a less verbose response, add summary=true to this endpoint
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.name the policy name - used for filtering results in searches.
	 * @param {Boolean} opts.enabled checks to see if policy is enabled - use enabled = true or enabled = false
	 * @param {Boolean} opts.summary provides a less verbose response of policy lists. (default to false)
	 * @param {Boolean} opts.hasErrors provides a way to fetch all policies with errors or policies that do not have errors
	 * @param {Number} opts.deleteDaysThreshold provides a way to fetch all policies with any actions having deleteDays exceeding the provided value
	 */},{key:"getRecordingCrossplatformMediaretentionpolicies",value:function getRecordingCrossplatformMediaretentionpolicies(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'name':opts['name'],'enabled':opts['enabled'],'summary':opts['summary'],'hasErrors':opts['hasErrors'],'deleteDaysThreshold':opts['deleteDaysThreshold']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 */},{key:"getRecordingCrossplatformMediaretentionpolicy",value:function getRecordingCrossplatformMediaretentionpolicy(policyId){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling getRecordingCrossplatformMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}','GET',{'policyId':policyId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status of the job associated with the job id.
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getRecordingJob",value:function getRecordingJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getRecordingJob';}return this.apiClient.callApi('/api/v2/recording/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get IDs of recordings that the bulk job failed for
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size. Maximum is 100. (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.includeTotal If false, cursor will be used to locate the page instead of pageNumber.
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 */},{key:"getRecordingJobFailedrecordings",value:function getRecordingJobFailedrecordings(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getRecordingJobFailedrecordings';}return this.apiClient.callApi('/api/v2/recording/jobs/{jobId}/failedrecordings','GET',{'jobId':jobId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'includeTotal':opts['includeTotal'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status of all jobs within the user's organization
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortBy Sort by (default to userId)
	 * @param {Object} opts.state Filter by state
	 * @param {Boolean} opts.showOnlyMyJobs Show only my jobs
	 * @param {Object} opts.jobType Job Type (Can be left empty for both)
	 * @param {Boolean} opts.includeTotal If false, cursor will be used to locate the page instead of pageNumber.
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 */},{key:"getRecordingJobs",value:function getRecordingJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recording/jobs','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'state':opts['state'],'showOnlyMyJobs':opts['showOnlyMyJobs'],'jobType':opts['jobType'],'includeTotal':opts['includeTotal'],'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the encryption key configurations
	 * 
	 * @param {String} keyConfigurationId Key Configurations Id
	 */},{key:"getRecordingKeyconfiguration",value:function getRecordingKeyconfiguration(keyConfigurationId){// verify the required parameter 'keyConfigurationId' is set
if(keyConfigurationId===undefined||keyConfigurationId===null){throw'Missing the required parameter "keyConfigurationId" when calling getRecordingKeyconfiguration';}return this.apiClient.callApi('/api/v2/recording/keyconfigurations/{keyConfigurationId}','GET',{'keyConfigurationId':keyConfigurationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of key configurations data
	 * 
	 */},{key:"getRecordingKeyconfigurations",value:function getRecordingKeyconfigurations(){return this.apiClient.callApi('/api/v2/recording/keyconfigurations','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets media retention policy list with query options to filter on name and enabled.
	 * for a less verbose response, add summary=true to this endpoint
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The total page size requested (default to 25)
	 * @param {Number} opts.pageNumber The page number requested (default to 1)
	 * @param {String} opts.sortBy variable name requested to sort by
	 * @param {Array.<String>} opts.expand variable name requested by expand list
	 * @param {String} opts.nextPage next page token
	 * @param {String} opts.previousPage Previous page token
	 * @param {String} opts.name the policy name - used for filtering results in searches.
	 * @param {Boolean} opts.enabled checks to see if policy is enabled - use enabled = true or enabled = false
	 * @param {Boolean} opts.summary provides a less verbose response of policy lists. (default to false)
	 * @param {Boolean} opts.hasErrors provides a way to fetch all policies with errors or policies that do not have errors
	 * @param {Number} opts.deleteDaysThreshold provides a way to fetch all policies with any actions having deleteDays exceeding the provided value
	 */},{key:"getRecordingMediaretentionpolicies",value:function getRecordingMediaretentionpolicies(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'nextPage':opts['nextPage'],'previousPage':opts['previousPage'],'name':opts['name'],'enabled':opts['enabled'],'summary':opts['summary'],'hasErrors':opts['hasErrors'],'deleteDaysThreshold':opts['deleteDaysThreshold']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 */},{key:"getRecordingMediaretentionpolicy",value:function getRecordingMediaretentionpolicy(policyId){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling getRecordingMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies/{policyId}','GET',{'policyId':policyId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get encryption key list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getRecordingRecordingkeys",value:function getRecordingRecordingkeys(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recording/recordingkeys','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get key rotation schedule
	 * 
	 */},{key:"getRecordingRecordingkeysRotationschedule",value:function getRecordingRecordingkeysRotationschedule(){return this.apiClient.callApi('/api/v2/recording/recordingkeys/rotationschedule','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the Recording Settings for the Organization
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.createDefault If no settings are found, a new one is created with default values (default to false)
	 */},{key:"getRecordingSettings",value:function getRecordingSettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recording/settings','GET',{},{'createDefault':opts['createDefault']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the status of a recording upload status report
	 * 
	 * @param {String} reportId reportId
	 */},{key:"getRecordingUploadsReport",value:function getRecordingUploadsReport(reportId){// verify the required parameter 'reportId' is set
if(reportId===undefined||reportId===null){throw'Missing the required parameter "reportId" when calling getRecordingUploadsReport';}return this.apiClient.callApi('/api/v2/recording/uploads/reports/{reportId}','GET',{'reportId':reportId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for recording retention data
	 * 
	 * @param {Number} retentionThresholdDays Fetch retention data for recordings retained for more days than the provided value.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize Page size. Maximum is 500. (default to 25)
	 */},{key:"getRecordingsRetentionQuery",value:function getRecordingsRetentionQuery(retentionThresholdDays,opts){opts=opts||{};// verify the required parameter 'retentionThresholdDays' is set
if(retentionThresholdDays===undefined||retentionThresholdDays===null){throw'Missing the required parameter "retentionThresholdDays" when calling getRecordingsRetentionQuery';}return this.apiClient.callApi('/api/v2/recordings/retention/query','GET',{},{'retentionThresholdDays':retentionThresholdDays,'cursor':opts['cursor'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves a paged listing of screen recording sessions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getRecordingsScreensessions",value:function getRecordingsScreensessions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recordings/screensessions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 * @param {Object} body Policy
	 */},{key:"patchRecordingCrossplatformMediaretentionpolicy",value:function patchRecordingCrossplatformMediaretentionpolicy(policyId,body){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling patchRecordingCrossplatformMediaretentionpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRecordingCrossplatformMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}','PATCH',{'policyId':policyId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a media retention policy
	 * 
	 * @param {String} policyId Policy ID
	 * @param {Object} body Policy
	 */},{key:"patchRecordingMediaretentionpolicy",value:function patchRecordingMediaretentionpolicy(policyId,body){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling patchRecordingMediaretentionpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRecordingMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies/{policyId}','PATCH',{'policyId':policyId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a screen recording session
	 * 
	 * @param {String} recordingSessionId Screen recording session ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchRecordingsScreensession",value:function patchRecordingsScreensession(recordingSessionId,opts){opts=opts||{};// verify the required parameter 'recordingSessionId' is set
if(recordingSessionId===undefined||recordingSessionId===null){throw'Missing the required parameter "recordingSessionId" when calling patchRecordingsScreensession';}return this.apiClient.callApi('/api/v2/recordings/screensessions/{recordingSessionId}','PATCH',{'recordingSessionId':recordingSessionId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create annotation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {Object} body annotation
	 */},{key:"postConversationRecordingAnnotations",value:function postConversationRecordingAnnotations(conversationId,recordingId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postConversationRecordingAnnotations';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling postConversationRecordingAnnotations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationRecordingAnnotations';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations','POST',{'conversationId':conversationId,'recordingId':recordingId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Submit a batch download request for recordings. Recordings in response will be in their original format/codec - configured in the Trunk configuration.
	 * 
	 * @param {Object} body Job submission criteria
	 */},{key:"postRecordingBatchrequests",value:function postRecordingBatchrequests(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingBatchrequests';}return this.apiClient.callApi('/api/v2/recording/batchrequests','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create media retention policy
	 * Policy does not work retroactively
	 * @param {Object} body Policy
	 */},{key:"postRecordingCrossplatformMediaretentionpolicies",value:function postRecordingCrossplatformMediaretentionpolicies(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingCrossplatformMediaretentionpolicies';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a recording bulk job.
	 * Each organization can run up to a maximum of two concurrent jobs that are either in pending or processing state. Furthermore, the recording:recording:viewSensitiveData permission is required to access recordings with PCI DSS and/or PII data when redaction is enabled for their organization. If the requester does not have that permission and includeRecordingsWithSensitiveData is set to true, then their request will be rejected.
	 * @param {Object} body query
	 */},{key:"postRecordingJobs",value:function postRecordingJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingJobs';}return this.apiClient.callApi('/api/v2/recording/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Setup configurations for encryption key creation
	 * 
	 * @param {Object} body Encryption Configuration
	 */},{key:"postRecordingKeyconfigurations",value:function postRecordingKeyconfigurations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingKeyconfigurations';}return this.apiClient.callApi('/api/v2/recording/keyconfigurations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validate encryption key configurations without saving it
	 * 
	 * @param {Object} body Encryption Configuration
	 */},{key:"postRecordingKeyconfigurationsValidate",value:function postRecordingKeyconfigurationsValidate(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingKeyconfigurationsValidate';}return this.apiClient.callApi('/api/v2/recording/keyconfigurations/validate','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * create a local key management recording key
	 * 
	 * @param {Object} body Local Encryption body
	 */},{key:"postRecordingLocalkeys",value:function postRecordingLocalkeys(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingLocalkeys';}return this.apiClient.callApi('/api/v2/recording/localkeys','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create media retention policy
	 * Policy does not work retroactively
	 * @param {Object} body Policy
	 */},{key:"postRecordingMediaretentionpolicies",value:function postRecordingMediaretentionpolicies(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingMediaretentionpolicies';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create encryption key
	 * 
	 */},{key:"postRecordingRecordingkeys",value:function postRecordingRecordingkeys(){return this.apiClient.callApi('/api/v2/recording/recordingkeys','POST',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a recording upload status report
	 * 
	 * @param {Object} body Report parameters
	 */},{key:"postRecordingUploadsReports",value:function postRecordingUploadsReports(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingUploadsReports';}return this.apiClient.callApi('/api/v2/recording/uploads/reports','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of conversations with protected recordings
	 * 
	 * @param {Object} body conversationIds
	 */},{key:"postRecordingsDeletionprotection",value:function postRecordingsDeletionprotection(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingsDeletionprotection';}return this.apiClient.callApi('/api/v2/recordings/deletionprotection','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Acknowledge a screen recording.
	 * 
	 * @param {Object} body AcknowledgeScreenRecordingRequest
	 */},{key:"postRecordingsScreensessionsAcknowledge",value:function postRecordingsScreensessionsAcknowledge(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingsScreensessionsAcknowledge';}return this.apiClient.callApi('/api/v2/recordings/screensessions/acknowledge','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Provide meta-data a screen recording.
	 * 
	 * @param {Object} body ScreenRecordingMetaDataRequest
	 */},{key:"postRecordingsScreensessionsMetadata",value:function postRecordingsScreensessionsMetadata(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRecordingsScreensessionsMetadata';}return this.apiClient.callApi('/api/v2/recordings/screensessions/metadata','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the retention records on a recording.
	 * Currently supports updating and removing both archive and delete dates for eligible recordings. A request to change the archival date of an archived recording will result in a restoration of the recording until the new date set. The recording:recording:view permission is required for the recording, as well as either the recording:recording:editRetention or recording:screenRecording:editRetention permissions depending on the type of recording.
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {Object} body recording
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.clearExport Whether to clear the pending export for the recording
	 */},{key:"putConversationRecording",value:function putConversationRecording(conversationId,recordingId,body,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationRecording';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling putConversationRecording';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationRecording';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}','PUT',{'conversationId':conversationId,'recordingId':recordingId},{'clearExport':opts['clearExport']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update annotation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} recordingId Recording ID
	 * @param {String} annotationId Annotation ID
	 * @param {Object} body annotation
	 */},{key:"putConversationRecordingAnnotation",value:function putConversationRecordingAnnotation(conversationId,recordingId,annotationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling putConversationRecordingAnnotation';}// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling putConversationRecordingAnnotation';}// verify the required parameter 'annotationId' is set
if(annotationId===undefined||annotationId===null){throw'Missing the required parameter "annotationId" when calling putConversationRecordingAnnotation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putConversationRecordingAnnotation';}return this.apiClient.callApi('/api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}','PUT',{'conversationId':conversationId,'recordingId':recordingId,'annotationId':annotationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates an orphan recording to a regular recording with retention values
	 * If this operation is successful the orphan will no longer exist. It will be replaced by the resulting recording in the response. This replacement recording is accessible by the normal Recording api.
	 * @param {String} orphanId Orphan ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"putOrphanrecording",value:function putOrphanrecording(orphanId,opts){opts=opts||{};// verify the required parameter 'orphanId' is set
if(orphanId===undefined||orphanId===null){throw'Missing the required parameter "orphanId" when calling putOrphanrecording';}return this.apiClient.callApi('/api/v2/orphanrecordings/{orphanId}','PUT',{'orphanId':orphanId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a media retention policy
	 * Policy does not work retroactively
	 * @param {String} policyId Policy ID
	 * @param {Object} body Policy
	 */},{key:"putRecordingCrossplatformMediaretentionpolicy",value:function putRecordingCrossplatformMediaretentionpolicy(policyId,body){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling putRecordingCrossplatformMediaretentionpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingCrossplatformMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}','PUT',{'policyId':policyId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Execute the recording bulk job.
	 * A job must be executed by the same user whom originally created the job.  In addition, the user must have permission to update the recordings retention.
	 * @param {String} jobId jobId
	 * @param {Object} body query
	 */},{key:"putRecordingJob",value:function putRecordingJob(jobId,body){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling putRecordingJob';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingJob';}return this.apiClient.callApi('/api/v2/recording/jobs/{jobId}','PUT',{'jobId':jobId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the encryption key configurations
	 * 
	 * @param {String} keyConfigurationId Key Configurations Id
	 * @param {Object} body Encryption key configuration metadata
	 */},{key:"putRecordingKeyconfiguration",value:function putRecordingKeyconfiguration(keyConfigurationId,body){// verify the required parameter 'keyConfigurationId' is set
if(keyConfigurationId===undefined||keyConfigurationId===null){throw'Missing the required parameter "keyConfigurationId" when calling putRecordingKeyconfiguration';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingKeyconfiguration';}return this.apiClient.callApi('/api/v2/recording/keyconfigurations/{keyConfigurationId}','PUT',{'keyConfigurationId':keyConfigurationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a media retention policy
	 * Policy does not work retroactively
	 * @param {String} policyId Policy ID
	 * @param {Object} body Policy
	 */},{key:"putRecordingMediaretentionpolicy",value:function putRecordingMediaretentionpolicy(policyId,body){// verify the required parameter 'policyId' is set
if(policyId===undefined||policyId===null){throw'Missing the required parameter "policyId" when calling putRecordingMediaretentionpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingMediaretentionpolicy';}return this.apiClient.callApi('/api/v2/recording/mediaretentionpolicies/{policyId}','PUT',{'policyId':policyId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update key rotation schedule
	 * 
	 * @param {Object} body KeyRotationSchedule
	 */},{key:"putRecordingRecordingkeysRotationschedule",value:function putRecordingRecordingkeysRotationschedule(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingRecordingkeysRotationschedule';}return this.apiClient.callApi('/api/v2/recording/recordingkeys/rotationschedule','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the Recording Settings for the Organization
	 * 
	 * @param {Object} body Recording settings
	 */},{key:"putRecordingSettings",value:function putRecordingSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRecordingSettings';}return this.apiClient.callApi('/api/v2/recording/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Apply or revoke recording protection for conversations
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.protect Check for apply, uncheck for revoke (each action requires the respective permission) (default to true)
	 * @param {Object} opts.body 
	 */},{key:"putRecordingsDeletionprotection",value:function putRecordingsDeletionprotection(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/recordings/deletionprotection','PUT',{},{'protect':opts['protect']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return RecordingApi;}();var ResponseManagementApi=/*#__PURE__*/function(){/**
	 * ResponseManagement service.
	 * @module purecloud-platform-client-v2/api/ResponseManagementApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ResponseManagementApi. 
	 * @alias module:purecloud-platform-client-v2/api/ResponseManagementApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ResponseManagementApi(apiClient){_classCallCheck(this,ResponseManagementApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete an existing response library.
	 * This will remove any responses associated with the library.
	 * @param {String} libraryId Library ID
	 */_createClass(ResponseManagementApi,[{key:"deleteResponsemanagementLibrary",value:function deleteResponsemanagementLibrary(libraryId){// verify the required parameter 'libraryId' is set
if(libraryId===undefined||libraryId===null){throw'Missing the required parameter "libraryId" when calling deleteResponsemanagementLibrary';}return this.apiClient.callApi('/api/v2/responsemanagement/libraries/{libraryId}','DELETE',{'libraryId':libraryId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an existing response.
	 * This will remove the response from any libraries associated with it.
	 * @param {String} responseId Response ID
	 */},{key:"deleteResponsemanagementResponse",value:function deleteResponsemanagementResponse(responseId){// verify the required parameter 'responseId' is set
if(responseId===undefined||responseId===null){throw'Missing the required parameter "responseId" when calling deleteResponsemanagementResponse';}return this.apiClient.callApi('/api/v2/responsemanagement/responses/{responseId}','DELETE',{'responseId':responseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete response asset
	 * 
	 * @param {String} responseAssetId Asset Id
	 */},{key:"deleteResponsemanagementResponseasset",value:function deleteResponsemanagementResponseasset(responseAssetId){// verify the required parameter 'responseAssetId' is set
if(responseAssetId===undefined||responseAssetId===null){throw'Missing the required parameter "responseAssetId" when calling deleteResponsemanagementResponseasset';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/{responseAssetId}','DELETE',{'responseAssetId':responseAssetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of existing response libraries.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.messagingTemplateFilter Returns a list of libraries that contain responses with at least one messaging template defined for a specific message channel
	 * @param {String} opts.libraryPrefix Returns a list of libraries that contain the prefix provided
	 */},{key:"getResponsemanagementLibraries",value:function getResponsemanagementLibraries(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/responsemanagement/libraries','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'messagingTemplateFilter':opts['messagingTemplateFilter'],'libraryPrefix':opts['libraryPrefix']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about an existing response library.
	 * 
	 * @param {String} libraryId Library ID
	 */},{key:"getResponsemanagementLibrary",value:function getResponsemanagementLibrary(libraryId){// verify the required parameter 'libraryId' is set
if(libraryId===undefined||libraryId===null){throw'Missing the required parameter "libraryId" when calling getResponsemanagementLibrary';}return this.apiClient.callApi('/api/v2/responsemanagement/libraries/{libraryId}','GET',{'libraryId':libraryId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about an existing response.
	 * 
	 * @param {String} responseId Response ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getResponsemanagementResponse",value:function getResponsemanagementResponse(responseId,opts){opts=opts||{};// verify the required parameter 'responseId' is set
if(responseId===undefined||responseId===null){throw'Missing the required parameter "responseId" when calling getResponsemanagementResponse';}return this.apiClient.callApi('/api/v2/responsemanagement/responses/{responseId}','GET',{'responseId':responseId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get response asset information
	 * 
	 * @param {String} responseAssetId Asset Id
	 */},{key:"getResponsemanagementResponseasset",value:function getResponsemanagementResponseasset(responseAssetId){// verify the required parameter 'responseAssetId' is set
if(responseAssetId===undefined||responseAssetId===null){throw'Missing the required parameter "responseAssetId" when calling getResponsemanagementResponseasset';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/{responseAssetId}','GET',{'responseAssetId':responseAssetId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get response asset upload status
	 * 
	 * @param {String} statusId Status Id
	 */},{key:"getResponsemanagementResponseassetsStatusStatusId",value:function getResponsemanagementResponseassetsStatusStatusId(statusId){// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling getResponsemanagementResponseassetsStatusStatusId';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/status/{statusId}','GET',{'statusId':statusId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of existing responses.
	 * 
	 * @param {String} libraryId Library ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"getResponsemanagementResponses",value:function getResponsemanagementResponses(libraryId,opts){opts=opts||{};// verify the required parameter 'libraryId' is set
if(libraryId===undefined||libraryId===null){throw'Missing the required parameter "libraryId" when calling getResponsemanagementResponses';}return this.apiClient.callApi('/api/v2/responsemanagement/responses','GET',{},{'libraryId':libraryId,'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a response library.
	 * 
	 * @param {Object} body Library
	 */},{key:"postResponsemanagementLibraries",value:function postResponsemanagementLibraries(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postResponsemanagementLibraries';}return this.apiClient.callApi('/api/v2/responsemanagement/libraries','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search response assets
	 * 
	 * @param {Object} body request
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"postResponsemanagementResponseassetsSearch",value:function postResponsemanagementResponseassetsSearch(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postResponsemanagementResponseassetsSearch';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/search','POST',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates pre-signed url for uploading response asset
	 * 
	 * @param {Object} body request
	 */},{key:"postResponsemanagementResponseassetsUploads",value:function postResponsemanagementResponseassetsUploads(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postResponsemanagementResponseassetsUploads';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/uploads','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a response.
	 * 
	 * @param {Object} body Response
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"postResponsemanagementResponses",value:function postResponsemanagementResponses(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postResponsemanagementResponses';}return this.apiClient.callApi('/api/v2/responsemanagement/responses','POST',{},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query responses
	 * 
	 * @param {Object} body Response
	 */},{key:"postResponsemanagementResponsesQuery",value:function postResponsemanagementResponsesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postResponsemanagementResponsesQuery';}return this.apiClient.callApi('/api/v2/responsemanagement/responses/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing response library.
	 * Fields that can be updated: name. The most recent version is required for updates.
	 * @param {String} libraryId Library ID
	 * @param {Object} body Library
	 */},{key:"putResponsemanagementLibrary",value:function putResponsemanagementLibrary(libraryId,body){// verify the required parameter 'libraryId' is set
if(libraryId===undefined||libraryId===null){throw'Missing the required parameter "libraryId" when calling putResponsemanagementLibrary';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putResponsemanagementLibrary';}return this.apiClient.callApi('/api/v2/responsemanagement/libraries/{libraryId}','PUT',{'libraryId':libraryId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an existing response.
	 * Fields that can be updated: name, libraries, and texts. The most recent version is required for updates.
	 * @param {String} responseId Response ID
	 * @param {Object} body Response
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand instructions for the return value.
	 */},{key:"putResponsemanagementResponse",value:function putResponsemanagementResponse(responseId,body,opts){opts=opts||{};// verify the required parameter 'responseId' is set
if(responseId===undefined||responseId===null){throw'Missing the required parameter "responseId" when calling putResponsemanagementResponse';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putResponsemanagementResponse';}return this.apiClient.callApi('/api/v2/responsemanagement/responses/{responseId}','PUT',{'responseId':responseId},{'expand':opts['expand']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update response asset
	 * 
	 * @param {String} responseAssetId Asset Id
	 * @param {Object} body request
	 */},{key:"putResponsemanagementResponseasset",value:function putResponsemanagementResponseasset(responseAssetId,body){// verify the required parameter 'responseAssetId' is set
if(responseAssetId===undefined||responseAssetId===null){throw'Missing the required parameter "responseAssetId" when calling putResponsemanagementResponseasset';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putResponsemanagementResponseasset';}return this.apiClient.callApi('/api/v2/responsemanagement/responseassets/{responseAssetId}','PUT',{'responseAssetId':responseAssetId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ResponseManagementApi;}();var RoutingApi=/*#__PURE__*/function(){/**
	 * Routing service.
	 * @module purecloud-platform-client-v2/api/RoutingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new RoutingApi. 
	 * @alias module:purecloud-platform-client-v2/api/RoutingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function RoutingApi(apiClient){_classCallCheck(this,RoutingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete single benefit assessment.
	 * 
	 * @param {String} assessmentId Benefit Assessment ID
	 */_createClass(RoutingApi,[{key:"deleteRoutingAssessment",value:function deleteRoutingAssessment(assessmentId){// verify the required parameter 'assessmentId' is set
if(assessmentId===undefined||assessmentId===null){throw'Missing the required parameter "assessmentId" when calling deleteRoutingAssessment';}return this.apiClient.callApi('/api/v2/routing/assessments/{assessmentId}','DELETE',{'assessmentId':assessmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"deleteRoutingEmailDomain",value:function deleteRoutingEmailDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling deleteRoutingEmailDomain';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainId}','DELETE',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a route
	 * 
	 * @param {String} domainName email domain
	 * @param {String} routeId route ID
	 */},{key:"deleteRoutingEmailDomainRoute",value:function deleteRoutingEmailDomainRoute(domainName,routeId){// verify the required parameter 'domainName' is set
if(domainName===undefined||domainName===null){throw'Missing the required parameter "domainName" when calling deleteRoutingEmailDomainRoute';}// verify the required parameter 'routeId' is set
if(routeId===undefined||routeId===null){throw'Missing the required parameter "routeId" when calling deleteRoutingEmailDomainRoute';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainName}/routes/{routeId}','DELETE',{'domainName':domainName,'routeId':routeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an outbound domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"deleteRoutingEmailOutboundDomain",value:function deleteRoutingEmailOutboundDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling deleteRoutingEmailOutboundDomain';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/{domainId}','DELETE',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a routing language
	 * 
	 * @param {String} languageId Language ID
	 */},{key:"deleteRoutingLanguage",value:function deleteRoutingLanguage(languageId){// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling deleteRoutingLanguage';}return this.apiClient.callApi('/api/v2/routing/languages/{languageId}','DELETE',{'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete single predictor.
	 * 
	 * @param {String} predictorId Predictor ID
	 */},{key:"deleteRoutingPredictor",value:function deleteRoutingPredictor(predictorId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling deleteRoutingPredictor';}return this.apiClient.callApi('/api/v2/routing/predictors/{predictorId}','DELETE',{'predictorId':predictorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDelete forceDelete
	 */},{key:"deleteRoutingQueue",value:function deleteRoutingQueue(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling deleteRoutingQueue';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}','DELETE',{'queueId':queueId},{'forceDelete':opts['forceDelete']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a queue member.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} memberId Member ID
	 */},{key:"deleteRoutingQueueMember",value:function deleteRoutingQueueMember(queueId,memberId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling deleteRoutingQueueMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling deleteRoutingQueueMember';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/members/{memberId}','DELETE',{'queueId':queueId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * DEPRECATED: use DELETE /routing/queues/{queueId}/members/{memberId}.  Delete queue member.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} memberId Member ID
	 * @deprecated
	 */},{key:"deleteRoutingQueueUser",value:function deleteRoutingQueueUser(queueId,memberId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling deleteRoutingQueueUser';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling deleteRoutingQueueUser';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/users/{memberId}','DELETE',{'queueId':queueId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a wrap-up code from a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} codeId Code ID
	 */},{key:"deleteRoutingQueueWrapupcode",value:function deleteRoutingQueueWrapupcode(queueId,codeId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling deleteRoutingQueueWrapupcode';}// verify the required parameter 'codeId' is set
if(codeId===undefined||codeId===null){throw'Missing the required parameter "codeId" when calling deleteRoutingQueueWrapupcode';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/wrapupcodes/{codeId}','DELETE',{'queueId':queueId,'codeId':codeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an organization's routing settings
	 * 
	 */},{key:"deleteRoutingSettings",value:function deleteRoutingSettings(){return this.apiClient.callApi('/api/v2/routing/settings','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Routing Skill
	 * 
	 * @param {String} skillId Skill ID
	 */},{key:"deleteRoutingSkill",value:function deleteRoutingSkill(skillId){// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling deleteRoutingSkill';}return this.apiClient.callApi('/api/v2/routing/skills/{skillId}','DELETE',{'skillId':skillId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove skill group definition
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 */},{key:"deleteRoutingSkillgroup",value:function deleteRoutingSkillgroup(skillGroupId){// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling deleteRoutingSkillgroup';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}','DELETE',{'skillGroupId':skillGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an Address by Id for SMS
	 * 
	 * @param {String} addressId Address ID
	 */},{key:"deleteRoutingSmsAddress",value:function deleteRoutingSmsAddress(addressId){// verify the required parameter 'addressId' is set
if(addressId===undefined||addressId===null){throw'Missing the required parameter "addressId" when calling deleteRoutingSmsAddress';}return this.apiClient.callApi('/api/v2/routing/sms/addresses/{addressId}','DELETE',{'addressId':addressId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a phone number provisioned for SMS.
	 * 
	 * @param {String} addressId Address ID
	 */},{key:"deleteRoutingSmsPhonenumber",value:function deleteRoutingSmsPhonenumber(addressId){// verify the required parameter 'addressId' is set
if(addressId===undefined||addressId===null){throw'Missing the required parameter "addressId" when calling deleteRoutingSmsPhonenumber';}return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers/{addressId}','DELETE',{'addressId':addressId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the user's max utilization settings and revert to the organization-wide default.
	 * 
	 * @param {String} userId User ID
	 */},{key:"deleteRoutingUserUtilization",value:function deleteRoutingUserUtilization(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the organization-wide max utilization settings and revert to the system default.
	 * 
	 */},{key:"deleteRoutingUtilization",value:function deleteRoutingUtilization(){return this.apiClient.callApi('/api/v2/routing/utilization','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a utilization label
	 * 
	 * @param {String} labelId Utilization Label ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDelete Remove all label usages (if found) without warning (default to false)
	 * deleteRoutingUtilizationLabel is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteRoutingUtilizationLabel",value:function deleteRoutingUtilizationLabel(labelId,opts){opts=opts||{};// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling deleteRoutingUtilizationLabel';}return this.apiClient.callApi('/api/v2/routing/utilization/labels/{labelId}','DELETE',{'labelId':labelId},{'forceDelete':opts['forceDelete']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an utilization tag
	 * 
	 * @param {String} tagId Utilization Tag ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDelete Remove all tag usages (if found) without warning (default to false)
	 * deleteRoutingUtilizationTag is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteRoutingUtilizationTag",value:function deleteRoutingUtilizationTag(tagId,opts){opts=opts||{};// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling deleteRoutingUtilizationTag';}return this.apiClient.callApi('/api/v2/routing/utilization/tags/{tagId}','DELETE',{'tagId':tagId},{'forceDelete':opts['forceDelete']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete wrap-up code
	 * 
	 * @param {String} codeId Wrapup Code ID
	 */},{key:"deleteRoutingWrapupcode",value:function deleteRoutingWrapupcode(codeId){// verify the required parameter 'codeId' is set
if(codeId===undefined||codeId===null){throw'Missing the required parameter "codeId" when calling deleteRoutingWrapupcode';}return this.apiClient.callApi('/api/v2/routing/wrapupcodes/{codeId}','DELETE',{'codeId':codeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove routing language from user
	 * 
	 * @param {String} userId User ID
	 * @param {String} languageId languageId
	 */},{key:"deleteUserRoutinglanguage",value:function deleteUserRoutinglanguage(userId,languageId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserRoutinglanguage';}// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling deleteUserRoutinglanguage';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/{languageId}','DELETE',{'userId':userId,'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove routing skill from user
	 * 
	 * @param {String} userId User ID
	 * @param {String} skillId skillId
	 */},{key:"deleteUserRoutingskill",value:function deleteUserRoutingskill(userId,skillId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserRoutingskill';}// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling deleteUserRoutingskill';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/{skillId}','DELETE',{'userId':userId,'skillId':skillId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single benefit assessment.
	 * 
	 * @param {String} assessmentId Benefit Assessment ID
	 */},{key:"getRoutingAssessment",value:function getRoutingAssessment(assessmentId){// verify the required parameter 'assessmentId' is set
if(assessmentId===undefined||assessmentId===null){throw'Missing the required parameter "assessmentId" when calling getRoutingAssessment';}return this.apiClient.callApi('/api/v2/routing/assessments/{assessmentId}','GET',{'assessmentId':assessmentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all benefit assessments.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 200. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Array.<String>} opts.queueId Queue ID(s) to filter assessments by.
	 */},{key:"getRoutingAssessments",value:function getRoutingAssessments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/assessments','GET',{},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'queueId':this.apiClient.buildCollectionParam(opts['queueId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single benefit assessments job.
	 * 
	 * @param {String} jobId Benefit Assessment Job ID
	 */},{key:"getRoutingAssessmentsJob",value:function getRoutingAssessmentsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getRoutingAssessmentsJob';}return this.apiClient.callApi('/api/v2/routing/assessments/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all benefit assessment jobs.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.divisionId Division ID(s) to filter assessment jobs by.
	 */},{key:"getRoutingAssessmentsJobs",value:function getRoutingAssessmentsJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/assessments/jobs','GET',{},{'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get available media types
	 * 
	 */},{key:"getRoutingAvailablemediatypes",value:function getRoutingAvailablemediatypes(){return this.apiClient.callApi('/api/v2/routing/availablemediatypes','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"getRoutingEmailDomain",value:function getRoutingEmailDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getRoutingEmailDomain';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainId}','GET',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a route
	 * 
	 * @param {String} domainName email domain
	 * @param {String} routeId route ID
	 */},{key:"getRoutingEmailDomainRoute",value:function getRoutingEmailDomainRoute(domainName,routeId){// verify the required parameter 'domainName' is set
if(domainName===undefined||domainName===null){throw'Missing the required parameter "domainName" when calling getRoutingEmailDomainRoute';}// verify the required parameter 'routeId' is set
if(routeId===undefined||routeId===null){throw'Missing the required parameter "routeId" when calling getRoutingEmailDomainRoute';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainName}/routes/{routeId}','GET',{'domainName':domainName,'routeId':routeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get routes
	 * 
	 * @param {String} domainName email domain
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.pattern Filter routes by the route's pattern property
	 */},{key:"getRoutingEmailDomainRoutes",value:function getRoutingEmailDomainRoutes(domainName,opts){opts=opts||{};// verify the required parameter 'domainName' is set
if(domainName===undefined||domainName===null){throw'Missing the required parameter "domainName" when calling getRoutingEmailDomainRoutes';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainName}/routes','GET',{'domainName':domainName},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'pattern':opts['pattern']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get domains
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.excludeStatus Exclude MX record data (default to false)
	 * @param {String} opts.filter Optional search filter
	 */},{key:"getRoutingEmailDomains",value:function getRoutingEmailDomains(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/email/domains','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'excludeStatus':opts['excludeStatus'],'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"getRoutingEmailOutboundDomain",value:function getRoutingEmailOutboundDomain(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getRoutingEmailOutboundDomain';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/{domainId}','GET',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get activation status (cname + dkim) of an outbound domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"getRoutingEmailOutboundDomainActivation",value:function getRoutingEmailOutboundDomainActivation(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getRoutingEmailOutboundDomainActivation';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/{domainId}/activation','GET',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search a domain across organizations
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"getRoutingEmailOutboundDomainSearch",value:function getRoutingEmailOutboundDomainSearch(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling getRoutingEmailOutboundDomainSearch';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/{domainId}/search','GET',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get outbound domains
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.filter Optional search filter
	 */},{key:"getRoutingEmailOutboundDomains",value:function getRoutingEmailOutboundDomains(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/email/outbound/domains','GET',{},{'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get email setup
	 * 
	 */},{key:"getRoutingEmailSetup",value:function getRoutingEmailSetup(){return this.apiClient.callApi('/api/v2/routing/email/setup','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a routing language
	 * 
	 * @param {String} languageId Language ID
	 */},{key:"getRoutingLanguage",value:function getRoutingLanguage(languageId){// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling getRoutingLanguage';}return this.apiClient.callApi('/api/v2/routing/languages/{languageId}','GET',{'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of supported languages.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id id
	 */},{key:"getRoutingLanguages",value:function getRoutingLanguages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/languages','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a recipient
	 * 
	 * @param {String} recipientId Recipient ID
	 */},{key:"getRoutingMessageRecipient",value:function getRoutingMessageRecipient(recipientId){// verify the required parameter 'recipientId' is set
if(recipientId===undefined||recipientId===null){throw'Missing the required parameter "recipientId" when calling getRoutingMessageRecipient';}return this.apiClient.callApi('/api/v2/routing/message/recipients/{recipientId}','GET',{'recipientId':recipientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get recipients
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.messengerType Messenger Type
	 * @param {String} opts.name Recipient Name
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getRoutingMessageRecipients",value:function getRoutingMessageRecipients(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/message/recipients','GET',{},{'messengerType':opts['messengerType'],'name':opts['name'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a single predictor.
	 * 
	 * @param {String} predictorId Predictor ID
	 */},{key:"getRoutingPredictor",value:function getRoutingPredictor(predictorId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling getRoutingPredictor';}return this.apiClient.callApi('/api/v2/routing/predictors/{predictorId}','GET',{'predictorId':predictorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve Predictor Model Features.
	 * 
	 * @param {String} predictorId Predictor ID
	 * @param {String} modelId Model ID
	 */},{key:"getRoutingPredictorModelFeatures",value:function getRoutingPredictorModelFeatures(predictorId,modelId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling getRoutingPredictorModelFeatures';}// verify the required parameter 'modelId' is set
if(modelId===undefined||modelId===null){throw'Missing the required parameter "modelId" when calling getRoutingPredictorModelFeatures';}return this.apiClient.callApi('/api/v2/routing/predictors/{predictorId}/models/{modelId}/features','GET',{'predictorId':predictorId,'modelId':modelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve Predictor Models and Top Features.
	 * 
	 * @param {String} predictorId Predictor ID
	 */},{key:"getRoutingPredictorModels",value:function getRoutingPredictorModels(predictorId){// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling getRoutingPredictorModels';}return this.apiClient.callApi('/api/v2/routing/predictors/{predictorId}/models','GET',{'predictorId':predictorId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve all predictors.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.before The cursor that points to the start of the set of entities that has been returned.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {String} opts.limit Number of entities to return. Maximum of 200. Deprecated in favour of pageSize
	 * @param {String} opts.pageSize Number of entities to return. Maximum of 200.
	 * @param {Array.<String>} opts.queueId Comma-separated list of queue Ids to filter by.
	 */},{key:"getRoutingPredictors",value:function getRoutingPredictors(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/predictors','GET',{},{'before':opts['before'],'after':opts['after'],'limit':opts['limit'],'pageSize':opts['pageSize'],'queueId':this.apiClient.buildCollectionParam(opts['queueId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Key Performance Indicators
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.kpiGroup The Group of Key Performance Indicators to return
	 * @param {Array.<String>} opts.expand Parameter to request additional data to return in KPI payload
	 */},{key:"getRoutingPredictorsKeyperformanceindicators",value:function getRoutingPredictorsKeyperformanceindicators(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/predictors/keyperformanceindicators','GET',{},{'kpiGroup':opts['kpiGroup'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about this queue.
	 * 
	 * @param {String} queueId Queue ID
	 */},{key:"getRoutingQueue",value:function getRoutingQueue(queueId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueue';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}','GET',{'queueId':queueId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Comparison Period.
	 * 
	 * @param {String} queueId Queue id
	 * @param {String} comparisonPeriodId ComparisonPeriod id
	 */},{key:"getRoutingQueueComparisonperiod",value:function getRoutingQueueComparisonperiod(queueId,comparisonPeriodId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueComparisonperiod';}// verify the required parameter 'comparisonPeriodId' is set
if(comparisonPeriodId===undefined||comparisonPeriodId===null){throw'Missing the required parameter "comparisonPeriodId" when calling getRoutingQueueComparisonperiod';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}','GET',{'queueId':queueId,'comparisonPeriodId':comparisonPeriodId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of comparison periods
	 * 
	 * @param {String} queueId Queue id
	 */},{key:"getRoutingQueueComparisonperiods",value:function getRoutingQueueComparisonperiods(queueId){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueComparisonperiods';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/comparisonperiods','GET',{'queueId':queueId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Estimated Wait Time
	 * 
	 * @param {String} queueId queueId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.conversationId conversationId
	 */},{key:"getRoutingQueueEstimatedwaittime",value:function getRoutingQueueEstimatedwaittime(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueEstimatedwaittime';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/estimatedwaittime','GET',{'queueId':queueId},{'conversationId':opts['conversationId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Estimated Wait Time
	 * 
	 * @param {String} queueId queueId
	 * @param {String} mediaType mediaType
	 */},{key:"getRoutingQueueMediatypeEstimatedwaittime",value:function getRoutingQueueMediatypeEstimatedwaittime(queueId,mediaType){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueMediatypeEstimatedwaittime';}// verify the required parameter 'mediaType' is set
if(mediaType===undefined||mediaType===null){throw'Missing the required parameter "mediaType" when calling getRoutingQueueMediatypeEstimatedwaittime';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/mediatypes/{mediaType}/estimatedwaittime','GET',{'queueId':queueId,'mediaType':mediaType},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the members of this queue.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber  (default to 1)
	 * @param {Number} opts.pageSize Max value is 100 (default to 25)
	 * @param {Object} opts.sortOrder Note: results are sorted by name. (default to asc)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {String} opts.name Filter by queue member name (contains-style search)
	 * @param {Array.<String>} opts.profileSkills Filter by profile skill (contains-style search)
	 * @param {Array.<String>} opts.skills Filter by skill (contains-style search)
	 * @param {Array.<String>} opts.languages Filter by language (contains-style search)
	 * @param {Array.<String>} opts.routingStatus Filter by routing status
	 * @param {Array.<String>} opts.presence Filter by presence
	 * @param {Object} opts.memberBy Filter by member type
	 * @param {Object} opts.joined Filter by joined status
	 */},{key:"getRoutingQueueMembers",value:function getRoutingQueueMembers(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueMembers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/members','GET',{'queueId':queueId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'name':opts['name'],'profileSkills':this.apiClient.buildCollectionParam(opts['profileSkills'],'multi'),'skills':this.apiClient.buildCollectionParam(opts['skills'],'multi'),'languages':this.apiClient.buildCollectionParam(opts['languages'],'multi'),'routingStatus':this.apiClient.buildCollectionParam(opts['routingStatus'],'multi'),'presence':this.apiClient.buildCollectionParam(opts['presence'],'multi'),'memberBy':opts['memberBy'],'joined':opts['joined']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * DEPRECATED: use GET /routing/queues/{queueId}/members.  Get the members of this queue.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber  (default to 1)
	 * @param {Number} opts.pageSize Max value is 100 (default to 25)
	 * @param {Object} opts.sortOrder Note: results are sorted by name. (default to asc)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {Boolean} opts.joined Filter by joined status
	 * @param {String} opts.name Filter by queue member name
	 * @param {Array.<String>} opts.profileSkills Filter by profile skill
	 * @param {Array.<String>} opts.skills Filter by skill
	 * @param {Array.<String>} opts.languages Filter by language
	 * @param {Array.<String>} opts.routingStatus Filter by routing status
	 * @param {Array.<String>} opts.presence Filter by presence
	 * @deprecated
	 */},{key:"getRoutingQueueUsers",value:function getRoutingQueueUsers(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueUsers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/users','GET',{'queueId':queueId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'joined':opts['joined'],'name':opts['name'],'profileSkills':this.apiClient.buildCollectionParam(opts['profileSkills'],'multi'),'skills':this.apiClient.buildCollectionParam(opts['skills'],'multi'),'languages':this.apiClient.buildCollectionParam(opts['languages'],'multi'),'routingStatus':this.apiClient.buildCollectionParam(opts['routingStatus'],'multi'),'presence':this.apiClient.buildCollectionParam(opts['presence'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the wrap-up codes for a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getRoutingQueueWrapupcodes",value:function getRoutingQueueWrapupcodes(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getRoutingQueueWrapupcodes';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/wrapupcodes','GET',{'queueId':queueId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of queues.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.sortOrder Note: results are sorted by name. (default to asc)
	 * @param {String} opts.name Filter by queue name
	 * @param {Array.<String>} opts.id Filter by queue ID(s)
	 * @param {Array.<String>} opts.divisionId Filter by queue division ID(s)
	 * @param {Array.<String>} opts.peerId Filter by queue peer ID(s)
	 * @param {Boolean} opts.hasPeer Filter by queues associated with peer
	 */},{key:"getRoutingQueues",value:function getRoutingQueues(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/queues','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi'),'peerId':this.apiClient.buildCollectionParam(opts['peerId'],'multi'),'hasPeer':opts['hasPeer']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size [max value is 100] (default to 25)
	 * @param {Number} opts.pageNumber Page number [max value is 5] (default to 1)
	 * @param {Object} opts.sortBy Sort by (default to name)
	 * @param {Object} opts.sortOrder Sort order (default to asc)
	 * @param {String} opts.name Name
	 * @param {Array.<String>} opts.id Queue ID(s)
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 */},{key:"getRoutingQueuesDivisionviews",value:function getRoutingQueuesDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/queues/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a paged listing of simplified queue objects, sorted by name.  Can be used to get a digest of all queues in an organization.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size [max value is 500] (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Sort order (default to asc)
	 */},{key:"getRoutingQueuesDivisionviewsAll",value:function getRoutingQueuesDivisionviewsAll(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/queues/divisionviews/all','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a paged listing of queues the user is a member of.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.joined Filter by joined status.
	 * @param {Object} opts.sortOrder Note: results are sorted by name. (default to asc)
	 */},{key:"getRoutingQueuesMe",value:function getRoutingQueuesMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/queues/me','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'joined':opts['joined'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an organization's routing settings
	 * 
	 */},{key:"getRoutingSettings",value:function getRoutingSettings(){return this.apiClient.callApi('/api/v2/routing/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Contact Center Settings
	 * 
	 */},{key:"getRoutingSettingsContactcenter",value:function getRoutingSettingsContactcenter(){return this.apiClient.callApi('/api/v2/routing/settings/contactcenter','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Transcription Settings
	 * 
	 */},{key:"getRoutingSettingsTranscription",value:function getRoutingSettingsTranscription(){return this.apiClient.callApi('/api/v2/routing/settings/transcription','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Routing Skill
	 * 
	 * @param {String} skillId Skill ID
	 */},{key:"getRoutingSkill",value:function getRoutingSkill(skillId){// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling getRoutingSkill';}return this.apiClient.callApi('/api/v2/routing/skills/{skillId}','GET',{'skillId':skillId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get skill group
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 */},{key:"getRoutingSkillgroup",value:function getRoutingSkillgroup(skillGroupId){// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling getRoutingSkillgroup';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}','GET',{'skillGroupId':skillGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get skill group members
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.after The cursor that points to the next item
	 * @param {String} opts.before The cursor that points to the previous item
	 * @param {Object} opts.expand Expand the name on each user
	 */},{key:"getRoutingSkillgroupMembers",value:function getRoutingSkillgroupMembers(skillGroupId,opts){opts=opts||{};// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling getRoutingSkillgroupMembers';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}/members','GET',{'skillGroupId':skillGroupId},{'pageSize':opts['pageSize'],'after':opts['after'],'before':opts['before'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of member divisions for this skill group.
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand the name on each user
	 */},{key:"getRoutingSkillgroupMembersDivisions",value:function getRoutingSkillgroupMembersDivisions(skillGroupId,opts){opts=opts||{};// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling getRoutingSkillgroupMembersDivisions';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}/members/divisions','GET',{'skillGroupId':skillGroupId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get skill group listing
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.name Return only skill group names whose names start with this value (case-insensitive matching)
	 * @param {String} opts.after The cursor that points to the next item
	 * @param {String} opts.before The cursor that points to the previous item
	 */},{key:"getRoutingSkillgroups",value:function getRoutingSkillgroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/skillgroups','GET',{},{'pageSize':opts['pageSize'],'name':opts['name'],'after':opts['after'],'before':opts['before']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of routing skills.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Filter for results that start with this value
	 * @param {Array.<String>} opts.id id
	 */},{key:"getRoutingSkills",value:function getRoutingSkills(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/skills','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Address by Id for SMS
	 * 
	 * @param {String} addressId Address ID
	 */},{key:"getRoutingSmsAddress",value:function getRoutingSmsAddress(addressId){// verify the required parameter 'addressId' is set
if(addressId===undefined||addressId===null){throw'Missing the required parameter "addressId" when calling getRoutingSmsAddress';}return this.apiClient.callApi('/api/v2/routing/sms/addresses/{addressId}','GET',{'addressId':addressId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Addresses for SMS
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getRoutingSmsAddresses",value:function getRoutingSmsAddresses(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/sms/addresses','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of available phone numbers for SMS provisioning.
	 * This request will return up to 30 random phone numbers matching the criteria specified.  To get additional phone numbers repeat the request.
	 * @param {String} countryCode The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned
	 * @param {Object} phoneNumberType Type of available phone numbers searched
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.region Region/province/state that can be used to restrict the numbers returned
	 * @param {String} opts.city City that can be used to restrict the numbers returned
	 * @param {String} opts.areaCode Area code that can be used to restrict the numbers returned
	 * @param {String} opts.pattern A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit.
	 * @param {Object} opts.addressRequirement This indicates whether the phone number requires to have an Address registered.
	 */},{key:"getRoutingSmsAvailablephonenumbers",value:function getRoutingSmsAvailablephonenumbers(countryCode,phoneNumberType,opts){opts=opts||{};// verify the required parameter 'countryCode' is set
if(countryCode===undefined||countryCode===null){throw'Missing the required parameter "countryCode" when calling getRoutingSmsAvailablephonenumbers';}// verify the required parameter 'phoneNumberType' is set
if(phoneNumberType===undefined||phoneNumberType===null){throw'Missing the required parameter "phoneNumberType" when calling getRoutingSmsAvailablephonenumbers';}return this.apiClient.callApi('/api/v2/routing/sms/availablephonenumbers','GET',{},{'countryCode':countryCode,'region':opts['region'],'city':opts['city'],'areaCode':opts['areaCode'],'phoneNumberType':phoneNumberType,'pattern':opts['pattern'],'addressRequirement':opts['addressRequirement']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a phone number provisioned for SMS.
	 * 
	 * @param {String} addressId Address ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Expand response with additional information
	 */},{key:"getRoutingSmsPhonenumber",value:function getRoutingSmsPhonenumber(addressId,opts){opts=opts||{};// verify the required parameter 'addressId' is set
if(addressId===undefined||addressId===null){throw'Missing the required parameter "addressId" when calling getRoutingSmsPhonenumber';}return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers/{addressId}','GET',{'addressId':addressId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of provisioned phone numbers.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.phoneNumber Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used.
	 * @param {Array.<String>} opts.phoneNumberType Filter on phone number type
	 * @param {Array.<String>} opts.phoneNumberStatus Filter on phone number status
	 * @param {Array.<String>} opts.countryCode Filter on country code
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortBy Optional field to sort results
	 * @param {Object} opts.sortOrder Sort order
	 * @param {String} opts.language A language tag (which is sometimes referred to as a locale identifier) to use to localize country field and sort operations (default to en-US)
	 * @param {String} opts.integrationId Filter on the Genesys Cloud integration id to which the phone number belongs to
	 */},{key:"getRoutingSmsPhonenumbers",value:function getRoutingSmsPhonenumbers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers','GET',{},{'phoneNumber':opts['phoneNumber'],'phoneNumberType':this.apiClient.buildCollectionParam(opts['phoneNumberType'],'multi'),'phoneNumberStatus':this.apiClient.buildCollectionParam(opts['phoneNumberStatus'],'multi'),'countryCode':this.apiClient.buildCollectionParam(opts['countryCode'],'multi'),'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'language':opts['language'],'integration.id':opts['integrationId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the user's max utilization settings.  If not configured, the organization-wide default is returned.
	 * 
	 * @param {String} userId User ID
	 */},{key:"getRoutingUserUtilization",value:function getRoutingUserUtilization(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the organization-wide max utilization settings.
	 * 
	 */},{key:"getRoutingUtilization",value:function getRoutingUtilization(){return this.apiClient.callApi('/api/v2/routing/utilization','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about this utilization label
	 * 
	 * @param {String} labelId Utilization Label ID
	 * getRoutingUtilizationLabel is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationLabel",value:function getRoutingUtilizationLabel(labelId){// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling getRoutingUtilizationLabel';}return this.apiClient.callApi('/api/v2/routing/utilization/labels/{labelId}','GET',{'labelId':labelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of agent ids associated with a utilization label
	 * 
	 * @param {String} labelId Utilization Label ID
	 * getRoutingUtilizationLabelAgents is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationLabelAgents",value:function getRoutingUtilizationLabelAgents(labelId){// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling getRoutingUtilizationLabelAgents';}return this.apiClient.callApi('/api/v2/routing/utilization/labels/{labelId}/agents','GET',{'labelId':labelId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of utilization labels
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Sort order by name (default to ascending)
	 * @param {String} opts.name Utilization label's name (Wildcard is supported, e.g., 'label1*', '*label*'
	 * getRoutingUtilizationLabels is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationLabels",value:function getRoutingUtilizationLabels(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/utilization/labels','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about this utilization tag
	 * 
	 * @param {String} tagId Utilization Tag ID
	 * getRoutingUtilizationTag is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationTag",value:function getRoutingUtilizationTag(tagId){// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling getRoutingUtilizationTag';}return this.apiClient.callApi('/api/v2/routing/utilization/tags/{tagId}','GET',{'tagId':tagId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of agent ids associated with a utilization tag
	 * 
	 * @param {String} tagId Utilization Tag ID
	 * getRoutingUtilizationTagAgents is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationTagAgents",value:function getRoutingUtilizationTagAgents(tagId){// verify the required parameter 'tagId' is set
if(tagId===undefined||tagId===null){throw'Missing the required parameter "tagId" when calling getRoutingUtilizationTagAgents';}return this.apiClient.callApi('/api/v2/routing/utilization/tags/{tagId}/agents','GET',{'tagId':tagId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of utilization tags
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Sort order by name (default to ascending)
	 * @param {String} opts.name Utilization tag's name (Wildcard is supported, e.g., 'tag1*')
	 * getRoutingUtilizationTags is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getRoutingUtilizationTags",value:function getRoutingUtilizationTags(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/utilization/tags','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get details about this wrap-up code.
	 * 
	 * @param {String} codeId Wrapup Code ID
	 */},{key:"getRoutingWrapupcode",value:function getRoutingWrapupcode(codeId){// verify the required parameter 'codeId' is set
if(codeId===undefined||codeId===null){throw'Missing the required parameter "codeId" when calling getRoutingWrapupcode';}return this.apiClient.callApi('/api/v2/routing/wrapupcodes/{codeId}','GET',{'codeId':codeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of wrapup codes.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortBy Sort by (default to name)
	 * @param {Object} opts.sortOrder Sort order (default to ascending)
	 * @param {String} opts.name Wrapup code's name ('Sort by' param is ignored unless this field is provided)
	 * @param {Array.<String>} opts.id Filter by wrapup code ID(s)
	 * @param {Array.<String>} opts.divisionId Filter by division ID(s)
	 */},{key:"getRoutingWrapupcodes",value:function getRoutingWrapupcodes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/wrapupcodes','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get queues for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.joined Is joined to the queue (default to true)
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 */},{key:"getUserQueues",value:function getUserQueues(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserQueues';}return this.apiClient.callApi('/api/v2/users/{userId}/queues','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'joined':opts['joined'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List routing language for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 */},{key:"getUserRoutinglanguages",value:function getUserRoutinglanguages(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserRoutinglanguages';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List routing skills for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 */},{key:"getUserRoutingskills",value:function getUserRoutingskills(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserRoutingskills';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get skill groups for a user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.after The cursor that points to the next page
	 * @param {String} opts.before The cursor that points to the previous page
	 */},{key:"getUserSkillgroups",value:function getUserSkillgroups(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserSkillgroups';}return this.apiClient.callApi('/api/v2/users/{userId}/skillgroups','GET',{'userId':userId},{'pageSize':opts['pageSize'],'after':opts['after'],'before':opts['before']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update attributes of an in-queue conversation
	 * Returns an object indicating the updated values of all settable attributes. Supported attributes: skillIds, languageId, and priority.
	 * @param {String} conversationId Conversation ID
	 * @param {Object} body Conversation Attributes
	 */},{key:"patchRoutingConversation",value:function patchRoutingConversation(conversationId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchRoutingConversation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingConversation';}return this.apiClient.callApi('/api/v2/routing/conversations/{conversationId}','PATCH',{'conversationId':conversationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update domain settings
	 * 
	 * @param {String} domainId domain ID
	 * @param {Object} body Domain settings
	 */},{key:"patchRoutingEmailDomain",value:function patchRoutingEmailDomain(domainId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling patchRoutingEmailDomain';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingEmailDomain';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainId}','PATCH',{'domainId':domainId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validate domain settings
	 * 
	 * @param {String} domainId domain ID
	 * @param {Object} body Domain settings
	 */},{key:"patchRoutingEmailDomainValidate",value:function patchRoutingEmailDomainValidate(domainId,body){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling patchRoutingEmailDomainValidate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingEmailDomainValidate';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainId}/validate','PATCH',{'domainId':domainId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update single predictor.
	 * 
	 * @param {String} predictorId Predictor ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchRoutingPredictor",value:function patchRoutingPredictor(predictorId,opts){opts=opts||{};// verify the required parameter 'predictorId' is set
if(predictorId===undefined||predictorId===null){throw'Missing the required parameter "predictorId" when calling patchRoutingPredictor';}return this.apiClient.callApi('/api/v2/routing/predictors/{predictorId}','PATCH',{'predictorId':predictorId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the ring number OR joined status for a queue member.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} memberId Member ID
	 * @param {Object} body Queue Member
	 */},{key:"patchRoutingQueueMember",value:function patchRoutingQueueMember(queueId,memberId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchRoutingQueueMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling patchRoutingQueueMember';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingQueueMember';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/members/{memberId}','PATCH',{'queueId':queueId,'memberId':memberId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join or unjoin a set of users for a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Array.<Object>} body Queue Members
	 */},{key:"patchRoutingQueueMembers",value:function patchRoutingQueueMembers(queueId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchRoutingQueueMembers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingQueueMembers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/members','PATCH',{'queueId':queueId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * DEPRECATED: use PATCH /routing/queues/{queueId}/members/{memberId}.  Update the ring number OR joined status for a User in a Queue.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} memberId Member ID
	 * @param {Object} body Queue Member
	 * @deprecated
	 */},{key:"patchRoutingQueueUser",value:function patchRoutingQueueUser(queueId,memberId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchRoutingQueueUser';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling patchRoutingQueueUser';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingQueueUser';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/users/{memberId}','PATCH',{'queueId':queueId,'memberId':memberId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * DEPRECATED: use PATCH /routing/queues/{queueId}/members.  Join or unjoin a set of users for a queue.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Array.<Object>} body Queue Members
	 * @deprecated
	 */},{key:"patchRoutingQueueUsers",value:function patchRoutingQueueUsers(queueId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchRoutingQueueUsers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingQueueUsers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/users','PATCH',{'queueId':queueId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Contact Center Settings
	 * 
	 * @param {Object} body Contact Center Settings
	 */},{key:"patchRoutingSettingsContactcenter",value:function patchRoutingSettingsContactcenter(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingSettingsContactcenter';}return this.apiClient.callApi('/api/v2/routing/settings/contactcenter','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update skill group definition
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 * @param {Object} body Update skill groups
	 */},{key:"patchRoutingSkillgroup",value:function patchRoutingSkillgroup(skillGroupId,body){// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling patchRoutingSkillgroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchRoutingSkillgroup';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}','PATCH',{'skillGroupId':skillGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join or unjoin a queue for a user
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} userId User ID
	 * @param {Object} body Queue Member
	 */},{key:"patchUserQueue",value:function patchUserQueue(queueId,userId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchUserQueue';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserQueue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserQueue';}return this.apiClient.callApi('/api/v2/users/{userId}/queues/{queueId}','PATCH',{'queueId':queueId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join or unjoin a set of queues for a user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body User Queues
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 */},{key:"patchUserQueues",value:function patchUserQueues(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserQueues';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserQueues';}return this.apiClient.callApi('/api/v2/users/{userId}/queues','PATCH',{'userId':userId},{'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update routing language proficiency or state.
	 * 
	 * @param {String} userId User ID
	 * @param {String} languageId languageId
	 * @param {Object} body Language
	 */},{key:"patchUserRoutinglanguage",value:function patchUserRoutinglanguage(userId,languageId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutinglanguage';}// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling patchUserRoutinglanguage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutinglanguage';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/{languageId}','PATCH',{'userId':userId,'languageId':languageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add bulk routing language to user. Max limit 50 languages
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Language
	 */},{key:"patchUserRoutinglanguagesBulk",value:function patchUserRoutinglanguagesBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutinglanguagesBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutinglanguagesBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/bulk','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add routing skills to user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Skill
	 */},{key:"patchUserRoutingskillsBulk",value:function patchUserRoutingskillsBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutingskillsBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutingskillsBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/bulk','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for queue observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsQueuesObservationsQuery",value:function postAnalyticsQueuesObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsQueuesObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/queues/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsRoutingActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsRoutingActivityQuery",value:function postAnalyticsRoutingActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsRoutingActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/routing/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a benefit assessment.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postRoutingAssessments",value:function postRoutingAssessments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/assessments','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a benefit assessment job.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postRoutingAssessmentsJobs",value:function postRoutingAssessmentsJobs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/assessments/jobs','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a route
	 * 
	 * @param {String} domainName email domain
	 * @param {Object} body Route
	 */},{key:"postRoutingEmailDomainRoutes",value:function postRoutingEmailDomainRoutes(domainName,body){// verify the required parameter 'domainName' is set
if(domainName===undefined||domainName===null){throw'Missing the required parameter "domainName" when calling postRoutingEmailDomainRoutes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingEmailDomainRoutes';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainName}/routes','POST',{'domainName':domainName},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Tests the custom SMTP server integration connection set on this domain
	 * The request body is optional. If omitted, this endpoint will just test the connection of the Custom SMTP Server. If the body is specified, there will be an attempt to send an email message to the server.
	 * @param {String} domainId domain ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body TestMessage
	 */},{key:"postRoutingEmailDomainTestconnection",value:function postRoutingEmailDomainTestconnection(domainId,opts){opts=opts||{};// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling postRoutingEmailDomainTestconnection';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainId}/testconnection','POST',{'domainId':domainId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a domain
	 * 
	 * @param {Object} body Domain
	 */},{key:"postRoutingEmailDomains",value:function postRoutingEmailDomains(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingEmailDomains';}return this.apiClient.callApi('/api/v2/routing/email/domains','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a domain
	 * 
	 * @param {Object} body Domain
	 */},{key:"postRoutingEmailOutboundDomains",value:function postRoutingEmailOutboundDomains(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingEmailOutboundDomains';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a simulated domain
	 * 
	 * @param {Object} body Domain
	 */},{key:"postRoutingEmailOutboundDomainsSimulated",value:function postRoutingEmailOutboundDomainsSimulated(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingEmailOutboundDomainsSimulated';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/simulated','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Language
	 * 
	 * @param {Object} body Language
	 */},{key:"postRoutingLanguages",value:function postRoutingLanguages(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingLanguages';}return this.apiClient.callApi('/api/v2/routing/languages','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a predictor.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postRoutingPredictors",value:function postRoutingPredictors(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/routing/predictors','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add or delete up to 100 queue members
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Array.<Object>} body Queue Members
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts._delete True to delete queue members (default to false)
	 */},{key:"postRoutingQueueMembers",value:function postRoutingQueueMembers(queueId,body,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling postRoutingQueueMembers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingQueueMembers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/members','POST',{'queueId':queueId},{'delete':opts['_delete']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * DEPRECATED: use POST /routing/queues/{queueId}/members.  Bulk add or delete up to 100 queue members.
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Array.<Object>} body Queue Members
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts._delete True to delete queue members (default to false)
	 * @deprecated
	 */},{key:"postRoutingQueueUsers",value:function postRoutingQueueUsers(queueId,body,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling postRoutingQueueUsers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingQueueUsers';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/users','POST',{'queueId':queueId},{'delete':opts['_delete']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add up to 100 wrap-up codes to a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Array.<Object>} body List of wrapup codes
	 */},{key:"postRoutingQueueWrapupcodes",value:function postRoutingQueueWrapupcodes(queueId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling postRoutingQueueWrapupcodes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingQueueWrapupcodes';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}/wrapupcodes','POST',{'queueId':queueId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a queue
	 * 
	 * @param {Object} body Queue
	 */},{key:"postRoutingQueues",value:function postRoutingQueues(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingQueues';}return this.apiClient.callApi('/api/v2/routing/queues','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add or remove member divisions for this skill group.
	 * 
	 * @param {String} skillGroupId Skill Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postRoutingSkillgroupMembersDivisions",value:function postRoutingSkillgroupMembersDivisions(skillGroupId,opts){opts=opts||{};// verify the required parameter 'skillGroupId' is set
if(skillGroupId===undefined||skillGroupId===null){throw'Missing the required parameter "skillGroupId" when calling postRoutingSkillgroupMembersDivisions';}return this.apiClient.callApi('/api/v2/routing/skillgroups/{skillGroupId}/members/divisions','POST',{'skillGroupId':skillGroupId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a skill group
	 * 
	 * @param {Object} body Create skill group
	 */},{key:"postRoutingSkillgroups",value:function postRoutingSkillgroups(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingSkillgroups';}return this.apiClient.callApi('/api/v2/routing/skillgroups','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Skill
	 * 
	 * @param {Object} body Skill
	 */},{key:"postRoutingSkills",value:function postRoutingSkills(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingSkills';}return this.apiClient.callApi('/api/v2/routing/skills','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Provision an Address for SMS
	 * 
	 * @param {Object} body SmsAddress
	 */},{key:"postRoutingSmsAddresses",value:function postRoutingSmsAddresses(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingSmsAddresses';}return this.apiClient.callApi('/api/v2/routing/sms/addresses','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Provision a phone number for SMS
	 * 
	 * @param {Object} body SmsPhoneNumber
	 */},{key:"postRoutingSmsPhonenumbers",value:function postRoutingSmsPhonenumbers(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingSmsPhonenumbers';}return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Imports a phone number for SMS
	 * 
	 * @param {Object} body SmsPhoneNumber
	 * postRoutingSmsPhonenumbersImport is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postRoutingSmsPhonenumbersImport",value:function postRoutingSmsPhonenumbersImport(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingSmsPhonenumbersImport';}return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers/import','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a utilization label
	 * 
	 * @param {Object} body UtilizationLabel
	 * postRoutingUtilizationLabels is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postRoutingUtilizationLabels",value:function postRoutingUtilizationLabels(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingUtilizationLabels';}return this.apiClient.callApi('/api/v2/routing/utilization/labels','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an utilization tag
	 * 
	 * @param {Object} body UtilizationTag
	 * postRoutingUtilizationTags is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postRoutingUtilizationTags",value:function postRoutingUtilizationTags(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingUtilizationTags';}return this.apiClient.callApi('/api/v2/routing/utilization/tags','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a wrap-up code
	 * 
	 * @param {Object} body WrapupCode
	 */},{key:"postRoutingWrapupcodes",value:function postRoutingWrapupcodes(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postRoutingWrapupcodes';}return this.apiClient.callApi('/api/v2/routing/wrapupcodes','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add routing language to user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Language
	 */},{key:"postUserRoutinglanguages",value:function postUserRoutinglanguages(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserRoutinglanguages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserRoutinglanguages';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add routing skill to user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Skill
	 */},{key:"postUserRoutingskills",value:function postUserRoutingskills(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserRoutingskills';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserRoutingskills';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a route
	 * 
	 * @param {String} domainName email domain
	 * @param {String} routeId route ID
	 * @param {Object} body Route
	 */},{key:"putRoutingEmailDomainRoute",value:function putRoutingEmailDomainRoute(domainName,routeId,body){// verify the required parameter 'domainName' is set
if(domainName===undefined||domainName===null){throw'Missing the required parameter "domainName" when calling putRoutingEmailDomainRoute';}// verify the required parameter 'routeId' is set
if(routeId===undefined||routeId===null){throw'Missing the required parameter "routeId" when calling putRoutingEmailDomainRoute';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingEmailDomainRoute';}return this.apiClient.callApi('/api/v2/routing/email/domains/{domainName}/routes/{routeId}','PUT',{'domainName':domainName,'routeId':routeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request an activation status (cname + dkim) update of an outbound domain
	 * 
	 * @param {String} domainId domain ID
	 */},{key:"putRoutingEmailOutboundDomainActivation",value:function putRoutingEmailOutboundDomainActivation(domainId){// verify the required parameter 'domainId' is set
if(domainId===undefined||domainId===null){throw'Missing the required parameter "domainId" when calling putRoutingEmailOutboundDomainActivation';}return this.apiClient.callApi('/api/v2/routing/email/outbound/domains/{domainId}/activation','PUT',{'domainId':domainId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a recipient
	 * 
	 * @param {String} recipientId Recipient ID
	 * @param {Object} body Recipient
	 */},{key:"putRoutingMessageRecipient",value:function putRoutingMessageRecipient(recipientId,body){// verify the required parameter 'recipientId' is set
if(recipientId===undefined||recipientId===null){throw'Missing the required parameter "recipientId" when calling putRoutingMessageRecipient';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingMessageRecipient';}return this.apiClient.callApi('/api/v2/routing/message/recipients/{recipientId}','PUT',{'recipientId':recipientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a queue
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} body Queue
	 */},{key:"putRoutingQueue",value:function putRoutingQueue(queueId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling putRoutingQueue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingQueue';}return this.apiClient.callApi('/api/v2/routing/queues/{queueId}','PUT',{'queueId':queueId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an organization's routing settings
	 * 
	 * @param {Object} body Organization Settings
	 */},{key:"putRoutingSettings",value:function putRoutingSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingSettings';}return this.apiClient.callApi('/api/v2/routing/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Transcription Settings
	 * 
	 * @param {Object} body Organization Settings
	 */},{key:"putRoutingSettingsTranscription",value:function putRoutingSettingsTranscription(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingSettingsTranscription';}return this.apiClient.callApi('/api/v2/routing/settings/transcription','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a phone number provisioned for SMS.
	 * 
	 * @param {String} addressId Address ID
	 * @param {Object} body SmsPhoneNumber
	 */},{key:"putRoutingSmsPhonenumber",value:function putRoutingSmsPhonenumber(addressId,body){// verify the required parameter 'addressId' is set
if(addressId===undefined||addressId===null){throw'Missing the required parameter "addressId" when calling putRoutingSmsPhonenumber';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingSmsPhonenumber';}return this.apiClient.callApi('/api/v2/routing/sms/phonenumbers/{addressId}','PUT',{'addressId':addressId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the user's max utilization settings.  Include only those media types requiring custom configuration.
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body utilization
	 */},{key:"putRoutingUserUtilization",value:function putRoutingUserUtilization(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putRoutingUserUtilization';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the organization-wide max utilization settings.  Include only those media types requiring custom configuration.
	 * 
	 * @param {Object} body utilization
	 */},{key:"putRoutingUtilization",value:function putRoutingUtilization(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingUtilization';}return this.apiClient.callApi('/api/v2/routing/utilization','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a utilization label
	 * 
	 * @param {String} labelId Utilization Label ID
	 * @param {Object} body UtilizationLabel
	 * putRoutingUtilizationLabel is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"putRoutingUtilizationLabel",value:function putRoutingUtilizationLabel(labelId,body){// verify the required parameter 'labelId' is set
if(labelId===undefined||labelId===null){throw'Missing the required parameter "labelId" when calling putRoutingUtilizationLabel';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingUtilizationLabel';}return this.apiClient.callApi('/api/v2/routing/utilization/labels/{labelId}','PUT',{'labelId':labelId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update wrap-up code
	 * 
	 * @param {String} codeId Wrapup Code ID
	 * @param {Object} body WrapupCode
	 */},{key:"putRoutingWrapupcode",value:function putRoutingWrapupcode(codeId,body){// verify the required parameter 'codeId' is set
if(codeId===undefined||codeId===null){throw'Missing the required parameter "codeId" when calling putRoutingWrapupcode';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingWrapupcode';}return this.apiClient.callApi('/api/v2/routing/wrapupcodes/{codeId}','PUT',{'codeId':codeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update routing skill proficiency or state.
	 * 
	 * @param {String} userId User ID
	 * @param {String} skillId skillId
	 * @param {Object} body Skill
	 */},{key:"putUserRoutingskill",value:function putUserRoutingskill(userId,skillId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserRoutingskill';}// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling putUserRoutingskill';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoutingskill';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/{skillId}','PUT',{'userId':userId,'skillId':skillId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace all routing skills assigned to a user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Skill
	 */},{key:"putUserRoutingskillsBulk",value:function putUserRoutingskillsBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserRoutingskillsBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoutingskillsBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/bulk','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return RoutingApi;}();var SCIMApi=/*#__PURE__*/function(){/**
	 * SCIM service.
	 * @module purecloud-platform-client-v2/api/SCIMApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new SCIMApi. 
	 * @alias module:purecloud-platform-client-v2/api/SCIMApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function SCIMApi(apiClient){_classCallCheck(this,SCIMApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/users.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */_createClass(SCIMApi,[{key:"deleteScimUser",value:function deleteScimUser(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteScimUser';}return this.apiClient.callApi('/api/v2/scim/users/{userId}','DELETE',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Delete a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/v2/users.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"deleteScimV2User",value:function deleteScimV2User(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteScimV2User';}return this.apiClient.callApi('/api/v2/scim/v2/users/{userId}','DELETE',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/groups.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns id, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
	 */},{key:"getScimGroup",value:function getScimGroup(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getScimGroup';}return this.apiClient.callApi('/api/v2/scim/groups/{groupId}','GET',{'groupId':groupId},{'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi')},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of groups
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.startIndex The 1-based index of the first query result. (default to 1)
	 * @param {Number} opts.count The requested number of items per page. A value of 0 returns totalResults. A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the excludedAttributes or attributes query parameters to exclude or only include secondary lookup values such as externalId,  roles, urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages, or urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills. (default to 25)
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns id, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.filter Filters results. If nothing is specified, returns all groups. Examples of valid values: id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3, displayname eq Sales.
	 */},{key:"getScimGroups",value:function getScimGroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/groups','GET',{},{'startIndex':opts['startIndex'],'count':opts['count'],'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi'),'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a resource type
	 * 
	 * @param {Object} resourceType The type of resource. Returned with GET /api/v2/scim/resourcetypes.
	 */},{key:"getScimResourcetype",value:function getScimResourcetype(resourceType){// verify the required parameter 'resourceType' is set
if(resourceType===undefined||resourceType===null){throw'Missing the required parameter "resourceType" when calling getScimResourcetype';}return this.apiClient.callApi('/api/v2/scim/resourcetypes/{resourceType}','GET',{'resourceType':resourceType},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of resource types
	 * 
	 */},{key:"getScimResourcetypes",value:function getScimResourcetypes(){return this.apiClient.callApi('/api/v2/scim/resourcetypes','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a SCIM schema
	 * 
	 * @param {Object} schemaId The ID of a schema. Returned with GET /api/v2/scim/schemas.
	 */},{key:"getScimSchema",value:function getScimSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getScimSchema';}return this.apiClient.callApi('/api/v2/scim/schemas/{schemaId}','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of SCIM schemas
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.filter Filtered results are invalid and return 403 Unauthorized.
	 */},{key:"getScimSchemas",value:function getScimSchemas(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/schemas','GET',{},{'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a service provider's configuration
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/serviceproviderconfig. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. 
	 */},{key:"getScimServiceproviderconfig",value:function getScimServiceproviderconfig(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/serviceproviderconfig','GET',{},{},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/users.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, userName, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns the id, userName, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
	 */},{key:"getScimUser",value:function getScimUser(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getScimUser';}return this.apiClient.callApi('/api/v2/scim/users/{userId}','GET',{'userId':userId},{'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi')},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of users
	 * To return all active users, do not use the filter parameter. To return inactive users, set the filter parameter to "active eq false". By default, returns SCIM attributes "externalId", "enterprise-user:manager", and "roles". To exclude these attributes, set the attributes parameter to "id,active" or the excludeAttributes parameter to "externalId,roles,urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:division".
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.startIndex The 1-based index of the first query result. (default to 1)
	 * @param {Number} opts.count The requested number of items per page. A value of 0 returns totalResults. A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the excludedAttributes or attributes query parameters to exclude or only include secondary lookup values such as externalId,  roles, urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages, or urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills. (default to 25)
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, userName, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns the id, userName, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.filter Filters results. If nothing is specified, returns all active users. Examples of valid values: id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9, userName eq search@sample.org, manager eq 16e10e2f-1136-43fe-bb84-eac073168a49, email eq search@sample.org, division eq divisionName, externalId eq 167844, active eq false, employeeNumber eq 9876543210.
	 */},{key:"getScimUsers",value:function getScimUsers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/users','GET',{},{'startIndex':opts['startIndex'],'count':opts['count'],'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi'),'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/v2/groups.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns id, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
	 */},{key:"getScimV2Group",value:function getScimV2Group(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getScimV2Group';}return this.apiClient.callApi('/api/v2/scim/v2/groups/{groupId}','GET',{'groupId':groupId},{'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi')},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of groups
	 * 
	 * @param {String} filter Filters results. If nothing is specified, returns all groups. Examples of valid values: id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3, displayname eq Sales.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.startIndex The 1-based index of the first query result. (default to 1)
	 * @param {Number} opts.count The requested number of items per page. A value of 0 returns totalResults. A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the excludedAttributes or attributes query parameters to exclude or only include secondary lookup values such as externalId,  roles, urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages, or urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills. (default to 25)
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns id, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 */},{key:"getScimV2Groups",value:function getScimV2Groups(filter,opts){opts=opts||{};// verify the required parameter 'filter' is set
if(filter===undefined||filter===null){throw'Missing the required parameter "filter" when calling getScimV2Groups';}return this.apiClient.callApi('/api/v2/scim/v2/groups','GET',{},{'startIndex':opts['startIndex'],'count':opts['count'],'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi'),'filter':filter},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a resource type
	 * 
	 * @param {Object} resourceType The type of resource. Returned with GET /api/v2/scim/v2/resourcetypes.
	 */},{key:"getScimV2Resourcetype",value:function getScimV2Resourcetype(resourceType){// verify the required parameter 'resourceType' is set
if(resourceType===undefined||resourceType===null){throw'Missing the required parameter "resourceType" when calling getScimV2Resourcetype';}return this.apiClient.callApi('/api/v2/scim/v2/resourcetypes/{resourceType}','GET',{'resourceType':resourceType},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of resource types
	 * 
	 */},{key:"getScimV2Resourcetypes",value:function getScimV2Resourcetypes(){return this.apiClient.callApi('/api/v2/scim/v2/resourcetypes','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a SCIM schema
	 * 
	 * @param {Object} schemaId The ID of a schema. Returned with GET /api/v2/scim/v2/schemas.
	 */},{key:"getScimV2Schema",value:function getScimV2Schema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getScimV2Schema';}return this.apiClient.callApi('/api/v2/scim/v2/schemas/{schemaId}','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of SCIM schemas
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.filter Filtered results are invalid and return 403 Unauthorized.
	 */},{key:"getScimV2Schemas",value:function getScimV2Schemas(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/v2/schemas','GET',{},{'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a service provider's configuration
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/serviceproviderconfig. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. 
	 */},{key:"getScimV2Serviceproviderconfig",value:function getScimV2Serviceproviderconfig(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/v2/serviceproviderconfig','GET',{},{},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/v2/users.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, userName, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns the id, userName, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.ifNoneMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
	 */},{key:"getScimV2User",value:function getScimV2User(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getScimV2User';}return this.apiClient.callApi('/api/v2/scim/v2/users/{userId}','GET',{'userId':userId},{'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi')},{'If-None-Match':opts['ifNoneMatch']},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Get a list of users
	 * To return all active users, do not use the filter parameter. To return inactive users, set the filter parameter to "active eq false". By default, returns SCIM attributes "externalId", "enterprise-user:manager", and "roles". To exclude these attributes, set the attributes parameter to "id,active" or the excludeAttributes parameter to "externalId,roles,urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:division".
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.startIndex The 1-based index of the first query result. (default to 1)
	 * @param {Number} opts.count The requested number of items per page. A value of 0 returns totalResults. A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the excludedAttributes or attributes query parameters to exclude or only include secondary lookup values such as externalId,  roles, urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages, or urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills. (default to 25)
	 * @param {Array.<String>} opts.attributes Indicates which attributes to include. Returns these attributes and the id, userName, active, and meta attributes. Use attributes to avoid expensive secondary calls for the default attributes.
	 * @param {Array.<String>} opts.excludedAttributes Indicates which attributes to exclude. Returns the default attributes minus excludedAttributes. Always returns the id, userName, active, and meta attributes. Use excludedAttributes to avoid expensive secondary calls for the default attributes.
	 * @param {String} opts.filter Filters results. If nothing is specified, returns all active users. Examples of valid values: id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9, userName eq search@sample.org, manager eq 16e10e2f-1136-43fe-bb84-eac073168a49, email eq search@sample.org, division eq divisionName, externalId eq 167844, active eq false, employeeNumber eq 9876543210.
	 */},{key:"getScimV2Users",value:function getScimV2Users(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scim/v2/users','GET',{},{'startIndex':opts['startIndex'],'count':opts['count'],'attributes':this.apiClient.buildCollectionParam(opts['attributes'],'multi'),'excludedAttributes':this.apiClient.buildCollectionParam(opts['excludedAttributes'],'multi'),'filter':opts['filter']},{},{},null,['PureCloud OAuth'],['application/json'],['application/scim+json','application/json']);}/**
	 * Modify a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/groups.
	 * @param {Object} body The information used to modify a group.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"patchScimGroup",value:function patchScimGroup(groupId,body,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling patchScimGroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchScimGroup';}return this.apiClient.callApi('/api/v2/scim/groups/{groupId}','PATCH',{'groupId':groupId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Modify a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/users.
	 * @param {Object} body The information used to modify a user.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"patchScimUser",value:function patchScimUser(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchScimUser';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchScimUser';}return this.apiClient.callApi('/api/v2/scim/users/{userId}','PATCH',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Modify a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/v2/groups.
	 * @param {Object} body The information used to modify a group.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"patchScimV2Group",value:function patchScimV2Group(groupId,body,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling patchScimV2Group';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchScimV2Group';}return this.apiClient.callApi('/api/v2/scim/v2/groups/{groupId}','PATCH',{'groupId':groupId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Modify a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/v2/users.
	 * @param {Object} body The information used to modify a user.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"patchScimV2User",value:function patchScimV2User(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchScimV2User';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchScimV2User';}return this.apiClient.callApi('/api/v2/scim/v2/users/{userId}','PATCH',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Create a user
	 * 
	 * @param {Object} body The information used to create a user.
	 */},{key:"postScimUsers",value:function postScimUsers(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postScimUsers';}return this.apiClient.callApi('/api/v2/scim/users','POST',{},{},{},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Create a user
	 * 
	 * @param {Object} body The information used to create a user.
	 */},{key:"postScimV2Users",value:function postScimV2Users(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postScimV2Users';}return this.apiClient.callApi('/api/v2/scim/v2/users','POST',{},{},{},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Replace a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/groups.
	 * @param {Object} body The information used to replace a group.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"putScimGroup",value:function putScimGroup(groupId,body,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling putScimGroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putScimGroup';}return this.apiClient.callApi('/api/v2/scim/groups/{groupId}','PUT',{'groupId':groupId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Replace a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/users.
	 * @param {Object} body The information used to replace a user.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"putScimUser",value:function putScimUser(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putScimUser';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putScimUser';}return this.apiClient.callApi('/api/v2/scim/users/{userId}','PUT',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Replace a group
	 * 
	 * @param {String} groupId The ID of a group. Returned with GET /api/v2/scim/v2/groups.
	 * @param {Object} body The information used to replace a group.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"putScimV2Group",value:function putScimV2Group(groupId,body,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling putScimV2Group';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putScimV2Group';}return this.apiClient.callApi('/api/v2/scim/v2/groups/{groupId}','PUT',{'groupId':groupId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}/**
	 * Replace a user
	 * 
	 * @param {String} userId The ID of a user. Returned with GET /api/v2/scim/v2/users.
	 * @param {Object} body The information used to replace a user.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ifMatch The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: 42. If the ETag is different from the version on the server, returns 400 with a scimType of invalidVers.
	 */},{key:"putScimV2User",value:function putScimV2User(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putScimV2User';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putScimV2User';}return this.apiClient.callApi('/api/v2/scim/v2/users/{userId}','PUT',{'userId':userId},{},{'If-Match':opts['ifMatch']},{},body,['PureCloud OAuth'],['application/scim+json','application/json'],['application/scim+json','application/json']);}}]);return SCIMApi;}();var ScriptsApi=/*#__PURE__*/function(){/**
	 * Scripts service.
	 * @module purecloud-platform-client-v2/api/ScriptsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new ScriptsApi. 
	 * @alias module:purecloud-platform-client-v2/api/ScriptsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function ScriptsApi(apiClient){_classCallCheck(this,ScriptsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get a script
	 * 
	 * @param {String} scriptId Script ID
	 */_createClass(ScriptsApi,[{key:"getScript",value:function getScript(scriptId){// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScript';}return this.apiClient.callApi('/api/v2/scripts/{scriptId}','GET',{'scriptId':scriptId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a page
	 * 
	 * @param {String} scriptId Script ID
	 * @param {String} pageId Page ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptPage",value:function getScriptPage(scriptId,pageId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptPage';}// verify the required parameter 'pageId' is set
if(pageId===undefined||pageId===null){throw'Missing the required parameter "pageId" when calling getScriptPage';}return this.apiClient.callApi('/api/v2/scripts/{scriptId}/pages/{pageId}','GET',{'scriptId':scriptId,'pageId':pageId},{'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of pages
	 * 
	 * @param {String} scriptId Script ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptPages",value:function getScriptPages(scriptId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptPages';}return this.apiClient.callApi('/api/v2/scripts/{scriptId}/pages','GET',{'scriptId':scriptId},{'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of scripts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.expand Expand
	 * @param {String} opts.name Name filter
	 * @param {String} opts.feature Feature filter
	 * @param {String} opts.flowId Secure flow id filter
	 * @param {Object} opts.sortBy SortBy
	 * @param {Object} opts.sortOrder SortOrder
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 * @param {String} opts.divisionIds Filters scripts to requested divisionIds
	 */},{key:"getScripts",value:function getScripts(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scripts','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'name':opts['name'],'feature':opts['feature'],'flowId':opts['flowId'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'scriptDataVersion':opts['scriptDataVersion'],'divisionIds':opts['divisionIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the metadata for a list of scripts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.expand Expand
	 * @param {String} opts.name Name filter
	 * @param {String} opts.feature Feature filter
	 * @param {String} opts.flowId Secure flow id filter
	 * @param {Object} opts.sortBy SortBy
	 * @param {Object} opts.sortOrder SortOrder
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 * @param {String} opts.divisionIds Filters scripts to requested divisionIds
	 */},{key:"getScriptsDivisionviews",value:function getScriptsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scripts/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'name':opts['name'],'feature':opts['feature'],'flowId':opts['flowId'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'scriptDataVersion':opts['scriptDataVersion'],'divisionIds':opts['divisionIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published scripts.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.expand Expand
	 * @param {String} opts.name Name filter
	 * @param {String} opts.feature Feature filter
	 * @param {String} opts.flowId Secure flow id filter
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 * @param {String} opts.divisionIds Filters scripts to requested divisionIds
	 */},{key:"getScriptsPublished",value:function getScriptsPublished(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scripts/published','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'name':opts['name'],'feature':opts['feature'],'flowId':opts['flowId'],'scriptDataVersion':opts['scriptDataVersion'],'divisionIds':opts['divisionIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published scripts metadata.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.expand Expand
	 * @param {String} opts.name Name filter
	 * @param {String} opts.feature Feature filter
	 * @param {String} opts.flowId Secure flow id filter
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 * @param {String} opts.divisionIds Filters scripts to requested divisionIds
	 */},{key:"getScriptsPublishedDivisionviews",value:function getScriptsPublishedDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scripts/published/divisionviews','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'name':opts['name'],'feature':opts['feature'],'flowId':opts['flowId'],'scriptDataVersion':opts['scriptDataVersion'],'divisionIds':opts['divisionIds']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published script.
	 * 
	 * @param {String} scriptId Script ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptsPublishedScriptId",value:function getScriptsPublishedScriptId(scriptId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptsPublishedScriptId';}return this.apiClient.callApi('/api/v2/scripts/published/{scriptId}','GET',{'scriptId':scriptId},{'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published page.
	 * 
	 * @param {String} scriptId Script ID
	 * @param {String} pageId Page ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptsPublishedScriptIdPage",value:function getScriptsPublishedScriptIdPage(scriptId,pageId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptsPublishedScriptIdPage';}// verify the required parameter 'pageId' is set
if(pageId===undefined||pageId===null){throw'Missing the required parameter "pageId" when calling getScriptsPublishedScriptIdPage';}return this.apiClient.callApi('/api/v2/scripts/published/{scriptId}/pages/{pageId}','GET',{'scriptId':scriptId,'pageId':pageId},{'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of published pages
	 * 
	 * @param {String} scriptId Script ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptsPublishedScriptIdPages",value:function getScriptsPublishedScriptIdPages(scriptId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptsPublishedScriptIdPages';}return this.apiClient.callApi('/api/v2/scripts/published/{scriptId}/pages','GET',{'scriptId':scriptId},{'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the published variables
	 * 
	 * @param {String} scriptId Script ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.input input
	 * @param {Object} opts.output output
	 * @param {Object} opts.type type
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 */},{key:"getScriptsPublishedScriptIdVariables",value:function getScriptsPublishedScriptIdVariables(scriptId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling getScriptsPublishedScriptIdVariables';}return this.apiClient.callApi('/api/v2/scripts/published/{scriptId}/variables','GET',{'scriptId':scriptId},{'input':opts['input'],'output':opts['output'],'type':opts['type'],'scriptDataVersion':opts['scriptDataVersion']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the upload status of an imported script
	 * 
	 * @param {String} uploadId Upload ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.longPoll Enable longPolling endpoint (default to false)
	 */},{key:"getScriptsUploadStatus",value:function getScriptsUploadStatus(uploadId,opts){opts=opts||{};// verify the required parameter 'uploadId' is set
if(uploadId===undefined||uploadId===null){throw'Missing the required parameter "uploadId" when calling getScriptsUploadStatus';}return this.apiClient.callApi('/api/v2/scripts/uploads/{uploadId}/status','GET',{'uploadId':uploadId},{'longPoll':opts['longPoll']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Export a script via download service.
	 * 
	 * @param {String} scriptId Script ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postScriptExport",value:function postScriptExport(scriptId,opts){opts=opts||{};// verify the required parameter 'scriptId' is set
if(scriptId===undefined||scriptId===null){throw'Missing the required parameter "scriptId" when calling postScriptExport';}return this.apiClient.callApi('/api/v2/scripts/{scriptId}/export','POST',{'scriptId':scriptId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish a script.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.scriptDataVersion Advanced usage - controls the data version of the script
	 * @param {Object} opts.body body
	 */},{key:"postScriptsPublished",value:function postScriptsPublished(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/scripts/published','POST',{},{'scriptDataVersion':opts['scriptDataVersion']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return ScriptsApi;}();var SearchApi=/*#__PURE__*/function(){/**
	 * Search service.
	 * @module purecloud-platform-client-v2/api/SearchApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new SearchApi. 
	 * @alias module:purecloud-platform-client-v2/api/SearchApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function SearchApi(apiClient){_classCallCheck(this,SearchApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Search gkn documentation using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 */_createClass(SearchApi,[{key:"getDocumentationGknSearch",value:function getDocumentationGknSearch(q64){// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getDocumentationGknSearch';}return this.apiClient.callApi('/api/v2/documentation/gkn/search','GET',{},{'q64':q64},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search documentation using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 */},{key:"getDocumentationSearch",value:function getDocumentationSearch(q64){// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getDocumentationSearch';}return this.apiClient.callApi('/api/v2/documentation/search','GET',{},{'q64':q64},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search groups using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 */},{key:"getGroupsSearch",value:function getGroupsSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getGroupsSearch';}return this.apiClient.callApi('/api/v2/groups/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search locations using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Provides more details about a specified resource
	 */},{key:"getLocationsSearch",value:function getLocationsSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getLocationsSearch';}return this.apiClient.callApi('/api/v2/locations/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search using the q64 value returned from a previous search.
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"getSearch",value:function getSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getSearch';}return this.apiClient.callApi('/api/v2/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'profile':opts['profile']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Suggest resources using the q64 value returned from a previous suggest query.
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"getSearchSuggest",value:function getSearchSuggest(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getSearchSuggest';}return this.apiClient.callApi('/api/v2/search/suggest','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'profile':opts['profile']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 * @param {Object} opts.integrationPresenceSource integrationPresenceSource
	 */},{key:"getUsersSearch",value:function getUsersSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getUsersSearch';}return this.apiClient.callApi('/api/v2/users/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search voicemails using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 */},{key:"getVoicemailSearch",value:function getVoicemailSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getVoicemailSearch';}return this.apiClient.callApi('/api/v2/voicemail/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postAnalyticsConversationsTranscriptsQuery",value:function postAnalyticsConversationsTranscriptsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsConversationsTranscriptsQuery';}return this.apiClient.callApi('/api/v2/analytics/conversations/transcripts/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search conversations
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postConversationsParticipantsAttributesSearch",value:function postConversationsParticipantsAttributesSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postConversationsParticipantsAttributesSearch';}return this.apiClient.callApi('/api/v2/conversations/participants/attributes/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search all documents
	 * 
	 * @param {Object} body Search request options
	 * postDocumentationAllSearch is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postDocumentationAllSearch",value:function postDocumentationAllSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postDocumentationAllSearch';}return this.apiClient.callApi('/api/v2/documentation/all/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search gkn documentation
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postDocumentationGknSearch",value:function postDocumentationGknSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postDocumentationGknSearch';}return this.apiClient.callApi('/api/v2/documentation/gkn/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search documentation
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postDocumentationSearch",value:function postDocumentationSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postDocumentationSearch';}return this.apiClient.callApi('/api/v2/documentation/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search groups
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postGroupsSearch",value:function postGroupsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postGroupsSearch';}return this.apiClient.callApi('/api/v2/groups/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search Documents
	 * 
	 * @param {String} knowledgeBaseId Knowledge base ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 * @deprecated
	 */},{key:"postKnowledgeKnowledgebaseSearch",value:function postKnowledgeKnowledgebaseSearch(knowledgeBaseId,opts){opts=opts||{};// verify the required parameter 'knowledgeBaseId' is set
if(knowledgeBaseId===undefined||knowledgeBaseId===null){throw'Missing the required parameter "knowledgeBaseId" when calling postKnowledgeKnowledgebaseSearch';}return this.apiClient.callApi('/api/v2/knowledge/knowledgebases/{knowledgeBaseId}/search','POST',{'knowledgeBaseId':knowledgeBaseId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search locations
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postLocationsSearch",value:function postLocationsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLocationsSearch';}return this.apiClient.callApi('/api/v2/locations/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"postSearch",value:function postSearch(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSearch';}return this.apiClient.callApi('/api/v2/search','POST',{},{'profile':opts['profile']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Suggest resources.
	 * 
	 * @param {Object} body Search request options
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"postSearchSuggest",value:function postSearchSuggest(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSearchSuggest';}return this.apiClient.callApi('/api/v2/search/suggest','POST',{},{'profile':opts['profile']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postSpeechandtextanalyticsTranscriptsSearch",value:function postSpeechandtextanalyticsTranscriptsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsTranscriptsSearch';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/transcripts/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postTeamsSearch",value:function postTeamsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTeamsSearch';}return this.apiClient.callApi('/api/v2/teams/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postUsersSearch",value:function postUsersSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearch';}return this.apiClient.callApi('/api/v2/users/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users as conversation targets
	 * 
	 * @param {Object} body Search request options
	 * postUsersSearchConversationTarget is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postUsersSearchConversationTarget",value:function postUsersSearchConversationTarget(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchConversationTarget';}return this.apiClient.callApi('/api/v2/users/search/conversation/target','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search manage queue member
	 * 
	 * @param {Object} body Search request options
	 * postUsersSearchQueuemembersManage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postUsersSearchQueuemembersManage",value:function postUsersSearchQueuemembersManage(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchQueuemembersManage';}return this.apiClient.callApi('/api/v2/users/search/queuemembers/manage','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users assigned to teams
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postUsersSearchTeamsAssign",value:function postUsersSearchTeamsAssign(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchTeamsAssign';}return this.apiClient.callApi('/api/v2/users/search/teams/assign','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search voicemails
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postVoicemailSearch",value:function postVoicemailSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postVoicemailSearch';}return this.apiClient.callApi('/api/v2/voicemail/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return SearchApi;}();var SettingsApi=/*#__PURE__*/function(){/**
	 * Settings service.
	 * @module purecloud-platform-client-v2/api/SettingsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new SettingsApi. 
	 * @alias module:purecloud-platform-client-v2/api/SettingsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function SettingsApi(apiClient){_classCallCheck(this,SettingsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get email Contact Center settings
	 * 
	 */_createClass(SettingsApi,[{key:"getEmailsSettings",value:function getEmailsSettings(){return this.apiClient.callApi('/api/v2/emails/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch email Contact Center settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"patchEmailsSettings",value:function patchEmailsSettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/emails/settings','PATCH',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return SettingsApi;}();var SpeechTextAnalyticsApi=/*#__PURE__*/function(){/**
	 * SpeechTextAnalytics service.
	 * @module purecloud-platform-client-v2/api/SpeechTextAnalyticsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new SpeechTextAnalyticsApi. 
	 * @alias module:purecloud-platform-client-v2/api/SpeechTextAnalyticsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function SpeechTextAnalyticsApi(apiClient){_classCallCheck(this,SpeechTextAnalyticsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a Speech and Text Analytics DictionaryFeedback by Id
	 * 
	 * @param {String} dictionaryFeedbackId The Id of the Dictionary Feedback
	 */_createClass(SpeechTextAnalyticsApi,[{key:"deleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",value:function deleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId){// verify the required parameter 'dictionaryFeedbackId' is set
if(dictionaryFeedbackId===undefined||dictionaryFeedbackId===null){throw'Missing the required parameter "dictionaryFeedbackId" when calling deleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/dictionaryfeedback/{dictionaryFeedbackId}','DELETE',{'dictionaryFeedbackId':dictionaryFeedbackId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Speech and Text Analytics program by id
	 * 
	 * @param {String} programId The id of the program
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.forceDelete Indicates whether the program is forced to be deleted or not. Required when the program to delete is the default program. (default to false)
	 */},{key:"deleteSpeechandtextanalyticsProgram",value:function deleteSpeechandtextanalyticsProgram(programId,opts){opts=opts||{};// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling deleteSpeechandtextanalyticsProgram';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}','DELETE',{'programId':programId},{'forceDelete':opts['forceDelete']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete All Speech and Text Analytics SentimentFeedback
	 * 
	 */},{key:"deleteSpeechandtextanalyticsSentimentfeedback",value:function deleteSpeechandtextanalyticsSentimentfeedback(){return this.apiClient.callApi('/api/v2/speechandtextanalytics/sentimentfeedback','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Speech and Text Analytics SentimentFeedback by Id
	 * 
	 * @param {String} sentimentFeedbackId The Id of the SentimentFeedback
	 */},{key:"deleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId",value:function deleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId(sentimentFeedbackId){// verify the required parameter 'sentimentFeedbackId' is set
if(sentimentFeedbackId===undefined||sentimentFeedbackId===null){throw'Missing the required parameter "sentimentFeedbackId" when calling deleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/sentimentfeedback/{sentimentFeedbackId}','DELETE',{'sentimentFeedbackId':sentimentFeedbackId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Speech and Text Analytics topic by id
	 * 
	 * @param {String} topicId The id of the topic
	 */},{key:"deleteSpeechandtextanalyticsTopic",value:function deleteSpeechandtextanalyticsTopic(topicId){// verify the required parameter 'topicId' is set
if(topicId===undefined||topicId===null){throw'Missing the required parameter "topicId" when calling deleteSpeechandtextanalyticsTopic';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/{topicId}','DELETE',{'topicId':topicId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Speech and Text Analytics for a specific conversation
	 * 
	 * @param {String} conversationId Conversation Id
	 */},{key:"getSpeechandtextanalyticsConversation",value:function getSpeechandtextanalyticsConversation(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getSpeechandtextanalyticsConversation';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/conversations/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the pre-signed S3 URL for the transcript of a specific communication of a conversation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} communicationId Communication ID
	 */},{key:"getSpeechandtextanalyticsConversationCommunicationTranscripturl",value:function getSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId,communicationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getSpeechandtextanalyticsConversationCommunicationTranscripturl';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getSpeechandtextanalyticsConversationCommunicationTranscripturl';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl','GET',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of pre-signed S3 URL for the transcripts of a specific communication of a conversation
	 * 
	 * @param {String} conversationId Conversation ID
	 * @param {String} communicationId Communication ID
	 */},{key:"getSpeechandtextanalyticsConversationCommunicationTranscripturls",value:function getSpeechandtextanalyticsConversationCommunicationTranscripturls(conversationId,communicationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getSpeechandtextanalyticsConversationCommunicationTranscripturls';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getSpeechandtextanalyticsConversationCommunicationTranscripturls';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturls','GET',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics dictionary feedbacks
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.dialect The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard
	 * @param {String} opts.nextPage The key for listing the next page
	 * @param {Number} opts.pageSize The page size for the listing (default to 500)
	 */},{key:"getSpeechandtextanalyticsDictionaryfeedback",value:function getSpeechandtextanalyticsDictionaryfeedback(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/dictionaryfeedback','GET',{},{'dialect':opts['dialect'],'nextPage':opts['nextPage'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics dictionary feedback by id
	 * 
	 * @param {String} dictionaryFeedbackId The Id of the Dictionary Feedback
	 */},{key:"getSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",value:function getSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId){// verify the required parameter 'dictionaryFeedbackId' is set
if(dictionaryFeedbackId===undefined||dictionaryFeedbackId===null){throw'Missing the required parameter "dictionaryFeedbackId" when calling getSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/dictionaryfeedback/{dictionaryFeedbackId}','GET',{'dictionaryFeedbackId':dictionaryFeedbackId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics program by id
	 * 
	 * @param {String} programId The id of the program
	 */},{key:"getSpeechandtextanalyticsProgram",value:function getSpeechandtextanalyticsProgram(programId){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling getSpeechandtextanalyticsProgram';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}','GET',{'programId':programId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Speech and Text Analytics program mappings to queues and flows by id
	 * 
	 * @param {String} programId The id of the program
	 */},{key:"getSpeechandtextanalyticsProgramMappings",value:function getSpeechandtextanalyticsProgramMappings(programId){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling getSpeechandtextanalyticsProgramMappings';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}/mappings','GET',{'programId':programId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get transcription engine settings of a program
	 * 
	 * @param {String} programId The id of the program
	 */},{key:"getSpeechandtextanalyticsProgramTranscriptionengines",value:function getSpeechandtextanalyticsProgramTranscriptionengines(programId){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling getSpeechandtextanalyticsProgramTranscriptionengines';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines','GET',{'programId':programId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics programs
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.nextPage The key for listing the next page
	 * @param {Number} opts.pageSize The page size for the listing (default to 20)
	 * @param {Object} opts.state Program state. Defaults to Latest
	 */},{key:"getSpeechandtextanalyticsPrograms",value:function getSpeechandtextanalyticsPrograms(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs','GET',{},{'nextPage':opts['nextPage'],'pageSize':opts['pageSize'],'state':opts['state']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics general program job by id
	 * 
	 * @param {String} jobId The id of the publish programs job
	 */},{key:"getSpeechandtextanalyticsProgramsGeneralJob",value:function getSpeechandtextanalyticsProgramsGeneralJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getSpeechandtextanalyticsProgramsGeneralJob';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/general/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics programs mappings to queues and flows
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.nextPage The key for listing the next page
	 * @param {Number} opts.pageSize The page size for the listing (default to 20)
	 */},{key:"getSpeechandtextanalyticsProgramsMappings",value:function getSpeechandtextanalyticsProgramsMappings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/mappings','GET',{},{'nextPage':opts['nextPage'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics publish programs job by id
	 * 
	 * @param {String} jobId The id of the publish programs job
	 */},{key:"getSpeechandtextanalyticsProgramsPublishjob",value:function getSpeechandtextanalyticsProgramsPublishjob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getSpeechandtextanalyticsProgramsPublishjob';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/publishjobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get supported dialects for each transcription engine
	 * 
	 */},{key:"getSpeechandtextanalyticsProgramsTranscriptionenginesDialects",value:function getSpeechandtextanalyticsProgramsTranscriptionenginesDialects(){return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/transcriptionengines/dialects','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics unpublished programs
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.nextPage The key for listing the next page
	 * @param {Number} opts.pageSize The page size for the listing (default to 20)
	 */},{key:"getSpeechandtextanalyticsProgramsUnpublished",value:function getSpeechandtextanalyticsProgramsUnpublished(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/unpublished','GET',{},{'nextPage':opts['nextPage'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics sentiment supported dialects
	 * 
	 */},{key:"getSpeechandtextanalyticsSentimentDialects",value:function getSpeechandtextanalyticsSentimentDialects(){return this.apiClient.callApi('/api/v2/speechandtextanalytics/sentiment/dialects','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics SentimentFeedback
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.dialect The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard
	 */},{key:"getSpeechandtextanalyticsSentimentfeedback",value:function getSpeechandtextanalyticsSentimentfeedback(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/sentimentfeedback','GET',{},{'dialect':opts['dialect']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Speech And Text Analytics Settings
	 * 
	 */},{key:"getSpeechandtextanalyticsSettings",value:function getSpeechandtextanalyticsSettings(){return this.apiClient.callApi('/api/v2/speechandtextanalytics/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics topic by id
	 * 
	 * @param {String} topicId The id of the topic
	 */},{key:"getSpeechandtextanalyticsTopic",value:function getSpeechandtextanalyticsTopic(topicId){// verify the required parameter 'topicId' is set
if(topicId===undefined||topicId===null){throw'Missing the required parameter "topicId" when calling getSpeechandtextanalyticsTopic';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/{topicId}','GET',{'topicId':topicId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Speech and Text Analytics topics
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.nextPage The key for listing the next page
	 * @param {Number} opts.pageSize The page size for the listing (default to 20)
	 * @param {Object} opts.state Topic state. Defaults to latest
	 * @param {String} opts.name Case insensitive partial name to filter by
	 * @param {Array.<String>} opts.ids Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.
	 * @param {Object} opts.sortBy Sort results by. Defaults to name
	 * @param {Object} opts.sortOrder Sort order. Defaults to asc
	 */},{key:"getSpeechandtextanalyticsTopics",value:function getSpeechandtextanalyticsTopics(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics','GET',{},{'nextPage':opts['nextPage'],'pageSize':opts['pageSize'],'state':opts['state'],'name':opts['name'],'ids':this.apiClient.buildCollectionParam(opts['ids'],'multi'),'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of supported Speech and Text Analytics topics dialects
	 * 
	 */},{key:"getSpeechandtextanalyticsTopicsDialects",value:function getSpeechandtextanalyticsTopicsDialects(){return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/dialects','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the Speech and Text Analytics general topics for a given dialect
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.dialect The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard
	 */},{key:"getSpeechandtextanalyticsTopicsGeneral",value:function getSpeechandtextanalyticsTopicsGeneral(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/general','GET',{},{'dialect':opts['dialect']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of general topics from the org and the system with their current status
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.dialect The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard
	 */},{key:"getSpeechandtextanalyticsTopicsGeneralStatus",value:function getSpeechandtextanalyticsTopicsGeneralStatus(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/general/status','GET',{},{'dialect':opts['dialect']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Speech and Text Analytics publish topics job by id
	 * 
	 * @param {String} jobId The id of the publish topics job
	 */},{key:"getSpeechandtextanalyticsTopicsPublishjob",value:function getSpeechandtextanalyticsTopicsPublishjob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getSpeechandtextanalyticsTopicsPublishjob';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/publishjobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch Speech And Text Analytics Settings
	 * 
	 * @param {Object} body Speech And Text Analytics Settings
	 */},{key:"patchSpeechandtextanalyticsSettings",value:function patchSpeechandtextanalyticsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchSpeechandtextanalyticsSettings';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/settings','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Speech and Text Analytics DictionaryFeedback
	 * 
	 * @param {Object} body The DictionaryFeedback to create
	 */},{key:"postSpeechandtextanalyticsDictionaryfeedback",value:function postSpeechandtextanalyticsDictionaryfeedback(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsDictionaryfeedback';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/dictionaryfeedback','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new Speech and Text Analytics program
	 * 
	 * @param {Object} body The program to create
	 */},{key:"postSpeechandtextanalyticsPrograms",value:function postSpeechandtextanalyticsPrograms(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsPrograms';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new Speech and Text Analytics general program job
	 * 
	 * @param {Object} body The general programs job to create
	 */},{key:"postSpeechandtextanalyticsProgramsGeneralJobs",value:function postSpeechandtextanalyticsProgramsGeneralJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsProgramsGeneralJobs';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/general/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new Speech and Text Analytics publish programs job
	 * 
	 * @param {Object} body The publish programs job to create
	 */},{key:"postSpeechandtextanalyticsProgramsPublishjobs",value:function postSpeechandtextanalyticsProgramsPublishjobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsProgramsPublishjobs';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/publishjobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Speech and Text Analytics SentimentFeedback
	 * 
	 * @param {Object} body The SentimentFeedback to create
	 */},{key:"postSpeechandtextanalyticsSentimentfeedback",value:function postSpeechandtextanalyticsSentimentfeedback(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsSentimentfeedback';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/sentimentfeedback','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new Speech and Text Analytics topic
	 * 
	 * @param {Object} body The topic to create
	 */},{key:"postSpeechandtextanalyticsTopics",value:function postSpeechandtextanalyticsTopics(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsTopics';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create new Speech and Text Analytics publish topics job
	 * 
	 * @param {Object} body The publish topics job to create
	 */},{key:"postSpeechandtextanalyticsTopicsPublishjobs",value:function postSpeechandtextanalyticsTopicsPublishjobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsTopicsPublishjobs';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/publishjobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postSpeechandtextanalyticsTranscriptsSearch",value:function postSpeechandtextanalyticsTranscriptsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSpeechandtextanalyticsTranscriptsSearch';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/transcripts/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update existing Speech and Text Analytics dictionary feedback by id
	 * 
	 * @param {String} dictionaryFeedbackId The Id of the Dictionary Feedback
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"putSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",value:function putSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId,opts){opts=opts||{};// verify the required parameter 'dictionaryFeedbackId' is set
if(dictionaryFeedbackId===undefined||dictionaryFeedbackId===null){throw'Missing the required parameter "dictionaryFeedbackId" when calling putSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/dictionaryfeedback/{dictionaryFeedbackId}','PUT',{'dictionaryFeedbackId':dictionaryFeedbackId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update existing Speech and Text Analytics program
	 * 
	 * @param {String} programId The id of the program
	 * @param {Object} body The program to update
	 */},{key:"putSpeechandtextanalyticsProgram",value:function putSpeechandtextanalyticsProgram(programId,body){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling putSpeechandtextanalyticsProgram';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putSpeechandtextanalyticsProgram';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}','PUT',{'programId':programId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set Speech and Text Analytics program mappings to queues and flows
	 * 
	 * @param {String} programId The id of the program
	 * @param {Object} body The program to set mappings for
	 */},{key:"putSpeechandtextanalyticsProgramMappings",value:function putSpeechandtextanalyticsProgramMappings(programId,body){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling putSpeechandtextanalyticsProgramMappings';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putSpeechandtextanalyticsProgramMappings';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}/mappings','PUT',{'programId':programId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update transcription engine settings of a program
	 * 
	 * @param {String} programId The id of the program
	 * @param {Object} body Program transcription engine setting
	 */},{key:"putSpeechandtextanalyticsProgramTranscriptionengines",value:function putSpeechandtextanalyticsProgramTranscriptionengines(programId,body){// verify the required parameter 'programId' is set
if(programId===undefined||programId===null){throw'Missing the required parameter "programId" when calling putSpeechandtextanalyticsProgramTranscriptionengines';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putSpeechandtextanalyticsProgramTranscriptionengines';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/programs/{programId}/transcriptionengines','PUT',{'programId':programId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update Speech And Text Analytics Settings
	 * 
	 * @param {Object} body Speech And Text Analytics Settings
	 */},{key:"putSpeechandtextanalyticsSettings",value:function putSpeechandtextanalyticsSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putSpeechandtextanalyticsSettings';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update existing Speech and Text Analytics topic
	 * 
	 * @param {String} topicId The id of the topic
	 * @param {Object} body The topic to update
	 */},{key:"putSpeechandtextanalyticsTopic",value:function putSpeechandtextanalyticsTopic(topicId,body){// verify the required parameter 'topicId' is set
if(topicId===undefined||topicId===null){throw'Missing the required parameter "topicId" when calling putSpeechandtextanalyticsTopic';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putSpeechandtextanalyticsTopic';}return this.apiClient.callApi('/api/v2/speechandtextanalytics/topics/{topicId}','PUT',{'topicId':topicId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return SpeechTextAnalyticsApi;}();var StationsApi=/*#__PURE__*/function(){/**
	 * Stations service.
	 * @module purecloud-platform-client-v2/api/StationsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new StationsApi. 
	 * @alias module:purecloud-platform-client-v2/api/StationsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function StationsApi(apiClient){_classCallCheck(this,StationsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Unassigns the user assigned to this station
	 * 
	 * @param {String} stationId Station ID
	 */_createClass(StationsApi,[{key:"deleteStationAssociateduser",value:function deleteStationAssociateduser(stationId){// verify the required parameter 'stationId' is set
if(stationId===undefined||stationId===null){throw'Missing the required parameter "stationId" when calling deleteStationAssociateduser';}return this.apiClient.callApi('/api/v2/stations/{stationId}/associateduser','DELETE',{'stationId':stationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get station.
	 * 
	 * @param {String} stationId Station ID
	 */},{key:"getStation",value:function getStation(stationId){// verify the required parameter 'stationId' is set
if(stationId===undefined||stationId===null){throw'Missing the required parameter "stationId" when calling getStation';}return this.apiClient.callApi('/api/v2/stations/{stationId}','GET',{'stationId':stationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of available stations.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.name Name
	 * @param {String} opts.userSelectable True for stations that the user can select otherwise false
	 * @param {String} opts.webRtcUserId Filter for the webRtc station of the webRtcUserId
	 * @param {String} opts.id Comma separated list of stationIds
	 * @param {String} opts.lineAppearanceId lineAppearanceId
	 */},{key:"getStations",value:function getStations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/stations','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'name':opts['name'],'userSelectable':opts['userSelectable'],'webRtcUserId':opts['webRtcUserId'],'id':opts['id'],'lineAppearanceId':opts['lineAppearanceId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return StationsApi;}();var SuggestApi=/*#__PURE__*/function(){/**
	 * Suggest service.
	 * @module purecloud-platform-client-v2/api/SuggestApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new SuggestApi. 
	 * @alias module:purecloud-platform-client-v2/api/SuggestApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function SuggestApi(apiClient){_classCallCheck(this,SuggestApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Search using the q64 value returned from a previous search.
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.profile profile (default to true)
	 */_createClass(SuggestApi,[{key:"getSearch",value:function getSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getSearch';}return this.apiClient.callApi('/api/v2/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'profile':opts['profile']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Suggest resources using the q64 value returned from a previous suggest query.
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"getSearchSuggest",value:function getSearchSuggest(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getSearchSuggest';}return this.apiClient.callApi('/api/v2/search/suggest','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'profile':opts['profile']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"postSearch",value:function postSearch(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSearch';}return this.apiClient.callApi('/api/v2/search','POST',{},{'profile':opts['profile']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Suggest resources.
	 * 
	 * @param {Object} body Search request options
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.profile profile (default to true)
	 */},{key:"postSearchSuggest",value:function postSearchSuggest(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postSearchSuggest';}return this.apiClient.callApi('/api/v2/search/suggest','POST',{},{'profile':opts['profile']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return SuggestApi;}();var TaskManagementApi=/*#__PURE__*/function(){/**
	 * TaskManagement service.
	 * @module purecloud-platform-client-v2/api/TaskManagementApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TaskManagementApi. 
	 * @alias module:purecloud-platform-client-v2/api/TaskManagementApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TaskManagementApi(apiClient){_classCallCheck(this,TaskManagementApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a workbin
	 * 
	 * @param {String} workbinId Workbin ID
	 * deleteTaskmanagementWorkbin is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */_createClass(TaskManagementApi,[{key:"deleteTaskmanagementWorkbin",value:function deleteTaskmanagementWorkbin(workbinId){// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling deleteTaskmanagementWorkbin';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}','DELETE',{'workbinId':workbinId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * deleteTaskmanagementWorkitem is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteTaskmanagementWorkitem",value:function deleteTaskmanagementWorkitem(workitemId){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling deleteTaskmanagementWorkitem';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}','DELETE',{'workitemId':workitemId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * deleteTaskmanagementWorkitemsSchema is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteTaskmanagementWorkitemsSchema",value:function deleteTaskmanagementWorkitemsSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling deleteTaskmanagementWorkitemsSchema';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas/{schemaId}','DELETE',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * deleteTaskmanagementWorktype is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteTaskmanagementWorktype",value:function deleteTaskmanagementWorktype(worktypeId){// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling deleteTaskmanagementWorktype';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}','DELETE',{'worktypeId':worktypeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a status
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {String} statusId Status id
	 * deleteTaskmanagementWorktypeStatus is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"deleteTaskmanagementWorktypeStatus",value:function deleteTaskmanagementWorktypeStatus(worktypeId,statusId){// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling deleteTaskmanagementWorktypeStatus';}// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling deleteTaskmanagementWorktypeStatus';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/statuses/{statusId}','DELETE',{'worktypeId':worktypeId,'statusId':statusId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a workbin
	 * 
	 * @param {String} workbinId Workbin ID
	 * getTaskmanagementWorkbin is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkbin",value:function getTaskmanagementWorkbin(workbinId){// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling getTaskmanagementWorkbin';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}','GET',{'workbinId':workbinId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of a workbin's attribute change history
	 * 
	 * @param {String} workbinId Workbin ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkbinHistory is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkbinHistory",value:function getTaskmanagementWorkbinHistory(workbinId,opts){opts=opts||{};// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling getTaskmanagementWorkbinHistory';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}/history','GET',{'workbinId':workbinId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a version of a workbin
	 * 
	 * @param {String} workbinId Workbin ID
	 * @param {Number} entityVersion Workbin version
	 * getTaskmanagementWorkbinVersion is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkbinVersion",value:function getTaskmanagementWorkbinVersion(workbinId,entityVersion){// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling getTaskmanagementWorkbinVersion';}// verify the required parameter 'entityVersion' is set
if(entityVersion===undefined||entityVersion===null){throw'Missing the required parameter "entityVersion" when calling getTaskmanagementWorkbinVersion';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}/versions/{entityVersion}','GET',{'workbinId':workbinId,'entityVersion':entityVersion},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of a workbin
	 * 
	 * @param {String} workbinId Workbin ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkbinVersions is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkbinVersions",value:function getTaskmanagementWorkbinVersions(workbinId,opts){opts=opts||{};// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling getTaskmanagementWorkbinVersions';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}/versions','GET',{'workbinId':workbinId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expands Which fields to expand. Comma separated if more than one.
	 * getTaskmanagementWorkitem is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitem",value:function getTaskmanagementWorkitem(workitemId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitem';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}','GET',{'workitemId':workitemId},{'expands':opts['expands']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of a workitem's attribute change history
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkitemHistory is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemHistory",value:function getTaskmanagementWorkitemHistory(workitemId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitemHistory';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/history','GET',{'workitemId':workitemId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all wrapup codes added for the given user for a workitem.
	 * 
	 * @param {String} workitemId The ID of the Workitem.
	 * @param {String} userId The ID of the user
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expands Which fields, if any, to expand.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkitemUserWrapups is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemUserWrapups",value:function getTaskmanagementWorkitemUserWrapups(workitemId,userId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitemUserWrapups';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getTaskmanagementWorkitemUserWrapups';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/users/{userId}/wrapups','GET',{'workitemId':workitemId,'userId':userId},{'expands':opts['expands'],'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a version of a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Number} entityVersion Workitem version
	 * getTaskmanagementWorkitemVersion is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemVersion",value:function getTaskmanagementWorkitemVersion(workitemId,entityVersion){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitemVersion';}// verify the required parameter 'entityVersion' is set
if(entityVersion===undefined||entityVersion===null){throw'Missing the required parameter "entityVersion" when calling getTaskmanagementWorkitemVersion';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/versions/{entityVersion}','GET',{'workitemId':workitemId,'entityVersion':entityVersion},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkitemVersions is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemVersions",value:function getTaskmanagementWorkitemVersions(workitemId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitemVersions';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/versions','GET',{'workitemId':workitemId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all wrapup codes added for all users for a workitem.
	 * 
	 * @param {String} workitemId The ID of the Workitem.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expands Which fields, if any, to expand.
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorkitemWrapups is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemWrapups",value:function getTaskmanagementWorkitemWrapups(workitemId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling getTaskmanagementWorkitemWrapups';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/wrapups','GET',{'workitemId':workitemId},{'expands':opts['expands'],'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * getTaskmanagementWorkitemsSchema is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemsSchema",value:function getTaskmanagementWorkitemsSchema(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getTaskmanagementWorkitemsSchema';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas/{schemaId}','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a specific version of a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {String} versionId Schema version
	 * getTaskmanagementWorkitemsSchemaVersion is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemsSchemaVersion",value:function getTaskmanagementWorkitemsSchemaVersion(schemaId,versionId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getTaskmanagementWorkitemsSchemaVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getTaskmanagementWorkitemsSchemaVersion';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas/{schemaId}/versions/{versionId}','GET',{'schemaId':schemaId,'versionId':versionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * getTaskmanagementWorkitemsSchemaVersions is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemsSchemaVersions",value:function getTaskmanagementWorkitemsSchemaVersions(schemaId){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling getTaskmanagementWorkitemsSchemaVersions';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas/{schemaId}/versions','GET',{'schemaId':schemaId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of schemas.
	 * 
	 * getTaskmanagementWorkitemsSchemas is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorkitemsSchemas",value:function getTaskmanagementWorkitemsSchemas(){return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expands Which fields, if any, to expand.
	 * getTaskmanagementWorktype is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorktype",value:function getTaskmanagementWorktype(worktypeId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling getTaskmanagementWorktype';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}','GET',{'worktypeId':worktypeId},{'expands':this.apiClient.buildCollectionParam(opts['expands'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of a worktype's attribute change history
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorktypeHistory is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorktypeHistory",value:function getTaskmanagementWorktypeHistory(worktypeId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling getTaskmanagementWorktypeHistory';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/history','GET',{'worktypeId':worktypeId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a status
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {String} statusId Status id
	 * getTaskmanagementWorktypeStatus is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorktypeStatus",value:function getTaskmanagementWorktypeStatus(worktypeId,statusId){// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling getTaskmanagementWorktypeStatus';}// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling getTaskmanagementWorktypeStatus';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/statuses/{statusId}','GET',{'worktypeId':worktypeId,'statusId':statusId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a version of a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Number} entityVersion Worktype version
	 * getTaskmanagementWorktypeVersion is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorktypeVersion",value:function getTaskmanagementWorktypeVersion(worktypeId,entityVersion){// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling getTaskmanagementWorktypeVersion';}// verify the required parameter 'entityVersion' is set
if(entityVersion===undefined||entityVersion===null){throw'Missing the required parameter "entityVersion" when calling getTaskmanagementWorktypeVersion';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/versions/{entityVersion}','GET',{'worktypeId':worktypeId,'entityVersion':entityVersion},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all versions of a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after The cursor that points to the end of the set of entities that has been returned.
	 * @param {Number} opts.pageSize Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (default to 25)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to descending)
	 * getTaskmanagementWorktypeVersions is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTaskmanagementWorktypeVersions",value:function getTaskmanagementWorktypeVersions(worktypeId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling getTaskmanagementWorktypeVersions';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/versions','GET',{'worktypeId':worktypeId},{'after':opts['after'],'pageSize':opts['pageSize'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes of a workbin
	 * 
	 * @param {String} workbinId Workbin ID
	 * @param {Object} body Json with attributes and their new values: {description:new description, name:new name}.
	 * patchTaskmanagementWorkbin is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorkbin",value:function patchTaskmanagementWorkbin(workbinId,body){// verify the required parameter 'workbinId' is set
if(workbinId===undefined||workbinId===null){throw'Missing the required parameter "workbinId" when calling patchTaskmanagementWorkbin';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTaskmanagementWorkbin';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/{workbinId}','PATCH',{'workbinId':workbinId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes of a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} body Workitem
	 * patchTaskmanagementWorkitem is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorkitem",value:function patchTaskmanagementWorkitem(workitemId,body){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling patchTaskmanagementWorkitem';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTaskmanagementWorkitem';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}','PATCH',{'workitemId':workitemId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Attempts to manually assign a specified workitem to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} body Targeted user
	 * patchTaskmanagementWorkitemAssignment is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorkitemAssignment",value:function patchTaskmanagementWorkitemAssignment(workitemId,body){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling patchTaskmanagementWorkitemAssignment';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTaskmanagementWorkitemAssignment';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/assignment','PATCH',{'workitemId':workitemId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add/Remove a wrapup code for a given user in a workitem.
	 * 
	 * @param {String} workitemId The ID of the Workitem.
	 * @param {String} userId The ID of the user
	 * @param {Object} body Request body to add/remove a wrapup code for a workitem
	 * patchTaskmanagementWorkitemUserWrapups is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorkitemUserWrapups",value:function patchTaskmanagementWorkitemUserWrapups(workitemId,userId,body){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling patchTaskmanagementWorkitemUserWrapups';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchTaskmanagementWorkitemUserWrapups';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTaskmanagementWorkitemUserWrapups';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/users/{userId}/wrapups','PATCH',{'workitemId':workitemId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add/Remove a wrapup code for the current user in a workitem.
	 * 
	 * @param {String} workitemId The ID of the Workitem.
	 * @param {Object} body Request body to add/remove the wrapup code for workitem
	 * patchTaskmanagementWorkitemUsersMeWrapups is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorkitemUsersMeWrapups",value:function patchTaskmanagementWorkitemUsersMeWrapups(workitemId,body){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling patchTaskmanagementWorkitemUsersMeWrapups';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTaskmanagementWorkitemUsersMeWrapups';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/users/me/wrapups','PATCH',{'workitemId':workitemId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes of a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * patchTaskmanagementWorktype is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorktype",value:function patchTaskmanagementWorktype(worktypeId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling patchTaskmanagementWorktype';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}','PATCH',{'worktypeId':worktypeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the attributes of a status
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {String} statusId Status id
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * patchTaskmanagementWorktypeStatus is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"patchTaskmanagementWorktypeStatus",value:function patchTaskmanagementWorktypeStatus(worktypeId,statusId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling patchTaskmanagementWorktypeStatus';}// verify the required parameter 'statusId' is set
if(statusId===undefined||statusId===null){throw'Missing the required parameter "statusId" when calling patchTaskmanagementWorktypeStatus';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/statuses/{statusId}','PATCH',{'worktypeId':worktypeId,'statusId':statusId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a workbin
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * postTaskmanagementWorkbins is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkbins",value:function postTaskmanagementWorkbins(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/taskmanagement/workbins','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for workbins
	 * 
	 * @param {Object} body QueryPostRequest
	 * postTaskmanagementWorkbinsQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkbinsQuery",value:function postTaskmanagementWorkbinsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTaskmanagementWorkbinsQuery';}return this.apiClient.callApi('/api/v2/taskmanagement/workbins/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Cancel the assignment process for a workitem that is currently queued for assignment through ACD.
	 * 
	 * @param {String} workitemId Workitem ID
	 * postTaskmanagementWorkitemAcdCancel is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitemAcdCancel",value:function postTaskmanagementWorkitemAcdCancel(workitemId){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling postTaskmanagementWorkitemAcdCancel';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/acd/cancel','POST',{'workitemId':workitemId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Disconnect the assignee of the workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * postTaskmanagementWorkitemDisconnect is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitemDisconnect",value:function postTaskmanagementWorkitemDisconnect(workitemId){// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling postTaskmanagementWorkitemDisconnect';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/disconnect','POST',{'workitemId':workitemId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Terminate a workitem
	 * 
	 * @param {String} workitemId Workitem ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Terminated request
	 * postTaskmanagementWorkitemTerminate is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitemTerminate",value:function postTaskmanagementWorkitemTerminate(workitemId,opts){opts=opts||{};// verify the required parameter 'workitemId' is set
if(workitemId===undefined||workitemId===null){throw'Missing the required parameter "workitemId" when calling postTaskmanagementWorkitemTerminate';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/{workitemId}/terminate','POST',{'workitemId':workitemId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a workitem
	 * 
	 * @param {Object} body Workitem
	 * postTaskmanagementWorkitems is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitems",value:function postTaskmanagementWorkitems(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTaskmanagementWorkitems';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for workitems
	 * This query requires at least one EQ filter on the workbinId, assigneeId or typeId attributes.
	 * @param {Object} body WorkitemQueryPostRequest
	 * postTaskmanagementWorkitemsQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitemsQuery",value:function postTaskmanagementWorkitemsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTaskmanagementWorkitemsQuery';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a schema
	 * 
	 * @param {Object} body Schema
	 * postTaskmanagementWorkitemsSchemas is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorkitemsSchemas",value:function postTaskmanagementWorkitemsSchemas(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTaskmanagementWorkitemsSchemas';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a status to a worktype
	 * 
	 * @param {String} worktypeId Worktype id
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * postTaskmanagementWorktypeStatuses is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorktypeStatuses",value:function postTaskmanagementWorktypeStatuses(worktypeId,opts){opts=opts||{};// verify the required parameter 'worktypeId' is set
if(worktypeId===undefined||worktypeId===null){throw'Missing the required parameter "worktypeId" when calling postTaskmanagementWorktypeStatuses';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/{worktypeId}/statuses','POST',{'worktypeId':worktypeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a worktype
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * postTaskmanagementWorktypes is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorktypes",value:function postTaskmanagementWorktypes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/taskmanagement/worktypes','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for worktypes
	 * 
	 * @param {Object} body QueryPostRequest
	 * postTaskmanagementWorktypesQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postTaskmanagementWorktypesQuery",value:function postTaskmanagementWorktypesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTaskmanagementWorktypesQuery';}return this.apiClient.callApi('/api/v2/taskmanagement/worktypes/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a schema
	 * 
	 * @param {String} schemaId Schema ID
	 * @param {Object} body Data Schema
	 * putTaskmanagementWorkitemsSchema is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"putTaskmanagementWorkitemsSchema",value:function putTaskmanagementWorkitemsSchema(schemaId,body){// verify the required parameter 'schemaId' is set
if(schemaId===undefined||schemaId===null){throw'Missing the required parameter "schemaId" when calling putTaskmanagementWorkitemsSchema';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTaskmanagementWorkitemsSchema';}return this.apiClient.callApi('/api/v2/taskmanagement/workitems/schemas/{schemaId}','PUT',{'schemaId':schemaId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TaskManagementApi;}();var TeamsApi=/*#__PURE__*/function(){/**
	 * Teams service.
	 * @module purecloud-platform-client-v2/api/TeamsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TeamsApi. 
	 * @alias module:purecloud-platform-client-v2/api/TeamsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TeamsApi(apiClient){_classCallCheck(this,TeamsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete team
	 * 
	 * @param {String} teamId Team ID
	 */_createClass(TeamsApi,[{key:"deleteTeam",value:function deleteTeam(teamId){// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling deleteTeam';}return this.apiClient.callApi('/api/v2/teams/{teamId}','DELETE',{'teamId':teamId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete team members
	 * 
	 * @param {String} teamId Team ID
	 * @param {String} id Comma separated list of member ids to remove
	 */},{key:"deleteTeamMembers",value:function deleteTeamMembers(teamId,id){// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling deleteTeamMembers';}// verify the required parameter 'id' is set
if(id===undefined||id===null){throw'Missing the required parameter "id" when calling deleteTeamMembers';}return this.apiClient.callApi('/api/v2/teams/{teamId}/members','DELETE',{'teamId':teamId},{'id':id},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get team
	 * 
	 * @param {String} teamId Team ID
	 */},{key:"getTeam",value:function getTeam(teamId){// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling getTeam';}return this.apiClient.callApi('/api/v2/teams/{teamId}','GET',{'teamId':teamId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get team membership
	 * 
	 * @param {String} teamId Team ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.before The cursor that points to the previous item in the complete list of teams
	 * @param {String} opts.after The cursor that points to the next item in the complete list of teams
	 * @param {Object} opts.expand Expand the name on each user
	 */},{key:"getTeamMembers",value:function getTeamMembers(teamId,opts){opts=opts||{};// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling getTeamMembers';}return this.apiClient.callApi('/api/v2/teams/{teamId}/members','GET',{'teamId':teamId},{'pageSize':opts['pageSize'],'before':opts['before'],'after':opts['after'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Team listing
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.name Return only teams whose names start with this value (case-insensitive matching)
	 * @param {String} opts.after The cursor that points to the next item in the complete list of teams
	 * @param {String} opts.before The cursor that points to the previous item in the complete list of teams
	 * @param {Object} opts.expand Expand the name on each user
	 */},{key:"getTeams",value:function getTeams(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/teams','GET',{},{'pageSize':opts['pageSize'],'name':opts['name'],'after':opts['after'],'before':opts['before'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update team
	 * 
	 * @param {String} teamId Team ID
	 * @param {Object} body Team
	 */},{key:"patchTeam",value:function patchTeam(teamId,body){// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling patchTeam';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTeam';}return this.apiClient.callApi('/api/v2/teams/{teamId}','PATCH',{'teamId':teamId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for team activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsTeamsActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsTeamsActivityQuery",value:function postAnalyticsTeamsActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsTeamsActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/teams/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add team members
	 * 
	 * @param {String} teamId Team ID
	 * @param {Object} body TeamMembers
	 */},{key:"postTeamMembers",value:function postTeamMembers(teamId,body){// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling postTeamMembers';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTeamMembers';}return this.apiClient.callApi('/api/v2/teams/{teamId}/members','POST',{'teamId':teamId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a team
	 * 
	 * @param {Object} body Team
	 */},{key:"postTeams",value:function postTeams(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTeams';}return this.apiClient.callApi('/api/v2/teams','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search resources.
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postTeamsSearch",value:function postTeamsSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTeamsSearch';}return this.apiClient.callApi('/api/v2/teams/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TeamsApi;}();var TelephonyApi=/*#__PURE__*/function(){/**
	 * Telephony service.
	 * @module purecloud-platform-client-v2/api/TelephonyApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TelephonyApi. 
	 * @alias module:purecloud-platform-client-v2/api/TelephonyApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TelephonyApi(apiClient){_classCallCheck(this,TelephonyApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Retrieve the list of AWS regions media can stream through.
	 * 
	 */_createClass(TelephonyApi,[{key:"getTelephonyMediaregions",value:function getTelephonyMediaregions(){return this.apiClient.callApi('/api/v2/telephony/mediaregions','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a SIP message.
	 * Get the raw form of the SIP message
	 * @param {String} conversationId Conversation id
	 * getTelephonySipmessagesConversation is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTelephonySipmessagesConversation",value:function getTelephonySipmessagesConversation(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getTelephonySipmessagesConversation';}return this.apiClient.callApi('/api/v2/telephony/sipmessages/conversations/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get SIP headers.
	 * Get parsed SIP headers. Returns specific headers if key query parameters are added.
	 * @param {String} conversationId Conversation id
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.keys comma-separated list of header identifiers to query. e.g. ruri,to,from
	 * getTelephonySipmessagesConversationHeaders is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTelephonySipmessagesConversationHeaders",value:function getTelephonySipmessagesConversationHeaders(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getTelephonySipmessagesConversationHeaders';}return this.apiClient.callApi('/api/v2/telephony/sipmessages/conversations/{conversationId}/headers','GET',{'conversationId':conversationId},{'keys':this.apiClient.buildCollectionParam(opts['keys'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch SIP metadata
	 * Fetch SIP metadata that matches a given parameter. If exactMatch is passed as a parameter only sip records that have exactly that value will be returned. For example, some records contain conversationId but not all relevant records for that call may contain the conversationId so only a partial view of the call will be reflected
	 * @param {Date} dateStart Start date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Date} dateEnd End date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.callId unique identification of the placed call
	 * @param {String} opts.toUser User to who the call was placed
	 * @param {String} opts.fromUser user who placed the call
	 * @param {String} opts.conversationId Unique identification of the conversation
	 */},{key:"getTelephonySiptraces",value:function getTelephonySiptraces(dateStart,dateEnd,opts){opts=opts||{};// verify the required parameter 'dateStart' is set
if(dateStart===undefined||dateStart===null){throw'Missing the required parameter "dateStart" when calling getTelephonySiptraces';}// verify the required parameter 'dateEnd' is set
if(dateEnd===undefined||dateEnd===null){throw'Missing the required parameter "dateEnd" when calling getTelephonySiptraces';}return this.apiClient.callApi('/api/v2/telephony/siptraces','GET',{},{'callId':opts['callId'],'toUser':opts['toUser'],'fromUser':opts['fromUser'],'conversationId':opts['conversationId'],'dateStart':dateStart,'dateEnd':dateEnd},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get signed S3 URL for a pcap download
	 * 
	 * @param {String} downloadId unique id for the downloaded file in S3
	 */},{key:"getTelephonySiptracesDownloadDownloadId",value:function getTelephonySiptracesDownloadDownloadId(downloadId){// verify the required parameter 'downloadId' is set
if(downloadId===undefined||downloadId===null){throw'Missing the required parameter "downloadId" when calling getTelephonySiptracesDownloadDownloadId';}return this.apiClient.callApi('/api/v2/telephony/siptraces/download/{downloadId}','GET',{'downloadId':downloadId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a download of a pcap file to S3
	 * 
	 * @param {Object} sIPSearchPublicRequest 
	 */},{key:"postTelephonySiptracesDownload",value:function postTelephonySiptracesDownload(sIPSearchPublicRequest){// verify the required parameter 'sIPSearchPublicRequest' is set
if(sIPSearchPublicRequest===undefined||sIPSearchPublicRequest===null){throw'Missing the required parameter "sIPSearchPublicRequest" when calling postTelephonySiptracesDownload';}return this.apiClient.callApi('/api/v2/telephony/siptraces/download','POST',{},{},{},{},sIPSearchPublicRequest,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TelephonyApi;}();var TelephonyProvidersEdgeApi=/*#__PURE__*/function(){/**
	 * TelephonyProvidersEdge service.
	 * @module purecloud-platform-client-v2/api/TelephonyProvidersEdgeApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TelephonyProvidersEdgeApi. 
	 * @alias module:purecloud-platform-client-v2/api/TelephonyProvidersEdgeApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TelephonyProvidersEdgeApi(apiClient){_classCallCheck(this,TelephonyProvidersEdgeApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */_createClass(TelephonyProvidersEdgeApi,[{key:"deleteTelephonyProvidersEdge",value:function deleteTelephonyProvidersEdge(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling deleteTelephonyProvidersEdge';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}','DELETE',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an edge logical interface
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {String} interfaceId Interface ID
	 */},{key:"deleteTelephonyProvidersEdgeLogicalinterface",value:function deleteTelephonyProvidersEdgeLogicalinterface(edgeId,interfaceId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling deleteTelephonyProvidersEdgeLogicalinterface';}// verify the required parameter 'interfaceId' is set
if(interfaceId===undefined||interfaceId===null){throw'Missing the required parameter "interfaceId" when calling deleteTelephonyProvidersEdgeLogicalinterface';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}','DELETE',{'edgeId':edgeId,'interfaceId':interfaceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Cancels any in-progress update for this edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */},{key:"deleteTelephonyProvidersEdgeSoftwareupdate",value:function deleteTelephonyProvidersEdgeSoftwareupdate(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling deleteTelephonyProvidersEdgeSoftwareupdate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/softwareupdate','DELETE',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a certificate authority.
	 * 
	 * @param {String} certificateId Certificate ID
	 */},{key:"deleteTelephonyProvidersEdgesCertificateauthority",value:function deleteTelephonyProvidersEdgesCertificateauthority(certificateId){// verify the required parameter 'certificateId' is set
if(certificateId===undefined||certificateId===null){throw'Missing the required parameter "certificateId" when calling deleteTelephonyProvidersEdgesCertificateauthority';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}','DELETE',{'certificateId':certificateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a DID Pool by ID.
	 * 
	 * @param {String} didPoolId DID pool ID
	 */},{key:"deleteTelephonyProvidersEdgesDidpool",value:function deleteTelephonyProvidersEdgesDidpool(didPoolId){// verify the required parameter 'didPoolId' is set
if(didPoolId===undefined||didPoolId===null){throw'Missing the required parameter "didPoolId" when calling deleteTelephonyProvidersEdgesDidpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools/{didPoolId}','DELETE',{'didPoolId':didPoolId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an edge group.
	 * 
	 * @param {String} edgeGroupId Edge group ID
	 */},{key:"deleteTelephonyProvidersEdgesEdgegroup",value:function deleteTelephonyProvidersEdgesEdgegroup(edgeGroupId){// verify the required parameter 'edgeGroupId' is set
if(edgeGroupId===undefined||edgeGroupId===null){throw'Missing the required parameter "edgeGroupId" when calling deleteTelephonyProvidersEdgesEdgegroup';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}','DELETE',{'edgeGroupId':edgeGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete an extension pool by ID
	 * 
	 * @param {String} extensionPoolId Extension pool ID
	 */},{key:"deleteTelephonyProvidersEdgesExtensionpool",value:function deleteTelephonyProvidersEdgesExtensionpool(extensionPoolId){// verify the required parameter 'extensionPoolId' is set
if(extensionPoolId===undefined||extensionPoolId===null){throw'Missing the required parameter "extensionPoolId" when calling deleteTelephonyProvidersEdgesExtensionpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}','DELETE',{'extensionPoolId':extensionPoolId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Phone by ID
	 * 
	 * @param {String} phoneId Phone ID
	 */},{key:"deleteTelephonyProvidersEdgesPhone",value:function deleteTelephonyProvidersEdgesPhone(phoneId){// verify the required parameter 'phoneId' is set
if(phoneId===undefined||phoneId===null){throw'Missing the required parameter "phoneId" when calling deleteTelephonyProvidersEdgesPhone';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/{phoneId}','DELETE',{'phoneId':phoneId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Phone Base Settings by ID
	 * 
	 * @param {String} phoneBaseId Phone base ID
	 */},{key:"deleteTelephonyProvidersEdgesPhonebasesetting",value:function deleteTelephonyProvidersEdgesPhonebasesetting(phoneBaseId){// verify the required parameter 'phoneBaseId' is set
if(phoneBaseId===undefined||phoneBaseId===null){throw'Missing the required parameter "phoneBaseId" when calling deleteTelephonyProvidersEdgesPhonebasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}','DELETE',{'phoneBaseId':phoneBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Site by ID
	 * 
	 * @param {String} siteId Site ID
	 */},{key:"deleteTelephonyProvidersEdgesSite",value:function deleteTelephonyProvidersEdgesSite(siteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling deleteTelephonyProvidersEdgesSite';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}','DELETE',{'siteId':siteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete Outbound Route
	 * 
	 * @param {String} siteId Site ID
	 * @param {String} outboundRouteId Outbound route ID
	 */},{key:"deleteTelephonyProvidersEdgesSiteOutboundroute",value:function deleteTelephonyProvidersEdgesSiteOutboundroute(siteId,outboundRouteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling deleteTelephonyProvidersEdgesSiteOutboundroute';}// verify the required parameter 'outboundRouteId' is set
if(outboundRouteId===undefined||outboundRouteId===null){throw'Missing the required parameter "outboundRouteId" when calling deleteTelephonyProvidersEdgesSiteOutboundroute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/outboundroutes/{outboundRouteId}','DELETE',{'siteId':siteId,'outboundRouteId':outboundRouteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a Trunk Base Settings object by ID
	 * 
	 * @param {String} trunkBaseSettingsId Trunk Base ID
	 */},{key:"deleteTelephonyProvidersEdgesTrunkbasesetting",value:function deleteTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId){// verify the required parameter 'trunkBaseSettingsId' is set
if(trunkBaseSettingsId===undefined||trunkBaseSettingsId===null){throw'Missing the required parameter "trunkBaseSettingsId" when calling deleteTelephonyProvidersEdgesTrunkbasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}','DELETE',{'trunkBaseSettingsId':trunkBaseSettingsId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get edge.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated
	 */},{key:"getTelephonyProvidersEdge",value:function getTelephonyProvidersEdge(edgeId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdge';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}','GET',{'edgeId':edgeId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"getTelephonyProvidersEdgeDiagnosticNslookup",value:function getTelephonyProvidersEdgeDiagnosticNslookup(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeDiagnosticNslookup';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/nslookup','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"getTelephonyProvidersEdgeDiagnosticPing",value:function getTelephonyProvidersEdgeDiagnosticPing(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeDiagnosticPing';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/ping','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"getTelephonyProvidersEdgeDiagnosticRoute",value:function getTelephonyProvidersEdgeDiagnosticRoute(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeDiagnosticRoute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/route','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"getTelephonyProvidersEdgeDiagnosticTracepath",value:function getTelephonyProvidersEdgeDiagnosticTracepath(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeDiagnosticTracepath';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/tracepath','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an edge logical interface
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {String} interfaceId Interface ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Field to expand in the response
	 */},{key:"getTelephonyProvidersEdgeLogicalinterface",value:function getTelephonyProvidersEdgeLogicalinterface(edgeId,interfaceId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeLogicalinterface';}// verify the required parameter 'interfaceId' is set
if(interfaceId===undefined||interfaceId===null){throw'Missing the required parameter "interfaceId" when calling getTelephonyProvidersEdgeLogicalinterface';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}','GET',{'edgeId':edgeId,'interfaceId':interfaceId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get edge logical interfaces.
	 * Retrieve a list of all configured logical interfaces from a specific edge.
	 * @param {String} edgeId Edge ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Field to expand in the response
	 */},{key:"getTelephonyProvidersEdgeLogicalinterfaces",value:function getTelephonyProvidersEdgeLogicalinterfaces(edgeId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeLogicalinterfaces';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces','GET',{'edgeId':edgeId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an Edge logs job.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {String} jobId Job ID
	 */},{key:"getTelephonyProvidersEdgeLogsJob",value:function getTelephonyProvidersEdgeLogsJob(edgeId,jobId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeLogsJob';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getTelephonyProvidersEdgeLogsJob';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}','GET',{'edgeId':edgeId,'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the edge metrics.
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"getTelephonyProvidersEdgeMetrics",value:function getTelephonyProvidersEdgeMetrics(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeMetrics';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/metrics','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get edge physical interface.
	 * Retrieve a physical interface from a specific edge.
	 * @param {String} edgeId Edge ID
	 * @param {String} interfaceId Interface ID
	 */},{key:"getTelephonyProvidersEdgePhysicalinterface",value:function getTelephonyProvidersEdgePhysicalinterface(edgeId,interfaceId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgePhysicalinterface';}// verify the required parameter 'interfaceId' is set
if(interfaceId===undefined||interfaceId===null){throw'Missing the required parameter "interfaceId" when calling getTelephonyProvidersEdgePhysicalinterface';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces/{interfaceId}','GET',{'edgeId':edgeId,'interfaceId':interfaceId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve a list of all configured physical interfaces from a specific edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */},{key:"getTelephonyProvidersEdgePhysicalinterfaces",value:function getTelephonyProvidersEdgePhysicalinterfaces(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgePhysicalinterfaces';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the setup package for a locally deployed edge device. This is needed to complete the setup process for the virtual edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */},{key:"getTelephonyProvidersEdgeSetuppackage",value:function getTelephonyProvidersEdgeSetuppackage(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeSetuppackage';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/setuppackage','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets software update status information about any edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */},{key:"getTelephonyProvidersEdgeSoftwareupdate",value:function getTelephonyProvidersEdgeSoftwareupdate(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeSoftwareupdate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/softwareupdate','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the available software versions for this edge.
	 * 
	 * @param {String} edgeId Edge ID
	 */},{key:"getTelephonyProvidersEdgeSoftwareversions",value:function getTelephonyProvidersEdgeSoftwareversions(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeSoftwareversions';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/softwareversions','GET',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of available trunks for the given Edge.
	 * Trunks are created by assigning trunk base settings to an Edge or Edge Group.
	 * @param {String} edgeId Edge ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.trunkBaseId Filter by Trunk Base Ids
	 * @param {Object} opts.trunkType Filter by a Trunk type
	 */},{key:"getTelephonyProvidersEdgeTrunks",value:function getTelephonyProvidersEdgeTrunks(edgeId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling getTelephonyProvidersEdgeTrunks';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/trunks','GET',{'edgeId':edgeId},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'trunkBase.id':opts['trunkBaseId'],'trunkType':opts['trunkType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of edges.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {String} opts.siteId Filter by site.id
	 * @param {String} opts.edgeGroupId Filter by edgeGroup.id
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {Boolean} opts.managed Filter by managed
	 * @param {Boolean} opts.showCloudMedia True to show the cloud media devices in the result. (default to true)
	 */},{key:"getTelephonyProvidersEdges",value:function getTelephonyProvidersEdges(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'site.id':opts['siteId'],'edgeGroup.id':opts['edgeGroupId'],'sortBy':opts['sortBy'],'managed':opts['managed'],'showCloudMedia':opts['showCloudMedia']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of available languages. For never released keyword spotting feature. Deprecated, do not use.
	 * 
	 * @deprecated
	 */},{key:"getTelephonyProvidersEdgesAvailablelanguages",value:function getTelephonyProvidersEdgesAvailablelanguages(){return this.apiClient.callApi('/api/v2/telephony/providers/edges/availablelanguages','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of certificate authorities.
	 * 
	 */},{key:"getTelephonyProvidersEdgesCertificateauthorities",value:function getTelephonyProvidersEdgesCertificateauthorities(){return this.apiClient.callApi('/api/v2/telephony/providers/edges/certificateauthorities','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a certificate authority.
	 * 
	 * @param {String} certificateId Certificate ID
	 */},{key:"getTelephonyProvidersEdgesCertificateauthority",value:function getTelephonyProvidersEdgesCertificateauthority(certificateId){// verify the required parameter 'certificateId' is set
if(certificateId===undefined||certificateId===null){throw'Missing the required parameter "certificateId" when calling getTelephonyProvidersEdgesCertificateauthority';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}','GET',{'certificateId':certificateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a DID by ID.
	 * 
	 * @param {String} didId DID ID
	 */},{key:"getTelephonyProvidersEdgesDid",value:function getTelephonyProvidersEdgesDid(didId){// verify the required parameter 'didId' is set
if(didId===undefined||didId===null){throw'Missing the required parameter "didId" when calling getTelephonyProvidersEdgesDid';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/dids/{didId}','GET',{'didId':didId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a DID Pool by ID.
	 * 
	 * @param {String} didPoolId DID pool ID
	 */},{key:"getTelephonyProvidersEdgesDidpool",value:function getTelephonyProvidersEdgesDidpool(didPoolId){// verify the required parameter 'didPoolId' is set
if(didPoolId===undefined||didPoolId===null){throw'Missing the required parameter "didPoolId" when calling getTelephonyProvidersEdgesDidpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools/{didPoolId}','GET',{'didPoolId':didPoolId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of DID Pools
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to number)
	 * @param {Array.<String>} opts.id Filter by a specific list of ID's
	 */},{key:"getTelephonyProvidersEdgesDidpools",value:function getTelephonyProvidersEdgesDidpools(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of unassigned and/or assigned numbers in a set of DID Pools.
	 * 
	 * @param {Object} type The type of numbers to return.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.id Filter by a specific list of DID Pools.  If this is not provided, numbers from all DID Pools will be returned.
	 * @param {String} opts.numberMatch A number to filter the results by.
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortOrder Sort order (default to ascending)
	 */},{key:"getTelephonyProvidersEdgesDidpoolsDids",value:function getTelephonyProvidersEdgesDidpoolsDids(type,opts){opts=opts||{};// verify the required parameter 'type' is set
if(type===undefined||type===null){throw'Missing the required parameter "type" when calling getTelephonyProvidersEdgesDidpoolsDids';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools/dids','GET',{},{'type':type,'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'numberMatch':opts['numberMatch'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of DIDs
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to number)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.phoneNumber Filter by phoneNumber
	 * @param {String} opts.ownerId Filter by the owner of a phone number
	 * @param {String} opts.didPoolId Filter by the DID Pool assignment
	 * @param {Array.<String>} opts.id Filter by a specific list of ID's
	 */},{key:"getTelephonyProvidersEdgesDids",value:function getTelephonyProvidersEdgesDids(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/dids','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'phoneNumber':opts['phoneNumber'],'owner.id':opts['ownerId'],'didPool.id':opts['didPoolId'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get edge group.
	 * 
	 * @param {String} edgeGroupId Edge group ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Fields to expand in the response
	 */},{key:"getTelephonyProvidersEdgesEdgegroup",value:function getTelephonyProvidersEdgesEdgegroup(edgeGroupId,opts){opts=opts||{};// verify the required parameter 'edgeGroupId' is set
if(edgeGroupId===undefined||edgeGroupId===null){throw'Missing the required parameter "edgeGroupId" when calling getTelephonyProvidersEdgesEdgegroup';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}','GET',{'edgeGroupId':edgeGroupId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets the edge trunk base associated with the edge group
	 * 
	 * @param {String} edgegroupId Edge Group ID
	 * @param {String} edgetrunkbaseId Edge Trunk Base ID
	 */},{key:"getTelephonyProvidersEdgesEdgegroupEdgetrunkbase",value:function getTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId,edgetrunkbaseId){// verify the required parameter 'edgegroupId' is set
if(edgegroupId===undefined||edgegroupId===null){throw'Missing the required parameter "edgegroupId" when calling getTelephonyProvidersEdgesEdgegroupEdgetrunkbase';}// verify the required parameter 'edgetrunkbaseId' is set
if(edgetrunkbaseId===undefined||edgetrunkbaseId===null){throw'Missing the required parameter "edgetrunkbaseId" when calling getTelephonyProvidersEdgesEdgegroupEdgetrunkbase';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups/{edgegroupId}/edgetrunkbases/{edgetrunkbaseId}','GET',{'edgegroupId':edgegroupId,'edgetrunkbaseId':edgetrunkbaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of edge groups.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {Boolean} opts.managed Filter by managed
	 */},{key:"getTelephonyProvidersEdgesEdgegroups",value:function getTelephonyProvidersEdgesEdgegroups(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'sortBy':opts['sortBy'],'managed':opts['managed']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the edge version report.
	 * The report will not have consistent data about the edge version(s) until all edges have been reset.
	 */},{key:"getTelephonyProvidersEdgesEdgeversionreport",value:function getTelephonyProvidersEdgesEdgeversionreport(){return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgeversionreport','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List of edges more than 4 edge versions behind the latest software.
	 * 
	 */},{key:"getTelephonyProvidersEdgesExpired",value:function getTelephonyProvidersEdgesExpired(){return this.apiClient.callApi('/api/v2/telephony/providers/edges/expired','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an extension by ID.
	 * 
	 * @param {String} extensionId Extension ID
	 */},{key:"getTelephonyProvidersEdgesExtension",value:function getTelephonyProvidersEdgesExtension(extensionId){// verify the required parameter 'extensionId' is set
if(extensionId===undefined||extensionId===null){throw'Missing the required parameter "extensionId" when calling getTelephonyProvidersEdgesExtension';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensions/{extensionId}','GET',{'extensionId':extensionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an extension pool by ID
	 * 
	 * @param {String} extensionPoolId Extension pool ID
	 */},{key:"getTelephonyProvidersEdgesExtensionpool",value:function getTelephonyProvidersEdgesExtensionpool(extensionPoolId){// verify the required parameter 'extensionPoolId' is set
if(extensionPoolId===undefined||extensionPoolId===null){throw'Missing the required parameter "extensionPoolId" when calling getTelephonyProvidersEdgesExtensionpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}','GET',{'extensionPoolId':extensionPoolId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of extension pools
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by
	 * @param {String} opts._number Deprecated, filtering by number not supported
	 */},{key:"getTelephonyProvidersEdgesExtensionpools",value:function getTelephonyProvidersEdgesExtensionpools(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'number':opts['_number']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a pageable list of basic extension pool objects filterable by query parameters.
	 * This returns extension pools consisting of name and division. If one or more IDs are specified, the search will fetch flow outcomes that match the given ID(s) and not use any additional supplied query parameters in the search.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.id ID of the Extension Pools to filter by.
	 * @param {String} opts.name Name of the Extension Pools to filter by.
	 * @param {Array.<String>} opts.divisionId List of divisionIds on which to filter.
	 * getTelephonyProvidersEdgesExtensionpoolsDivisionviews is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTelephonyProvidersEdgesExtensionpoolsDivisionviews",value:function getTelephonyProvidersEdgesExtensionpoolsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools/divisionviews','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'name':opts['name'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of extensions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to number)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts._number Filter by number
	 */},{key:"getTelephonyProvidersEdgesExtensions",value:function getTelephonyProvidersEdgesExtensions(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensions','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'number':opts['_number']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Line by ID
	 * 
	 * @param {String} lineId Line ID
	 */},{key:"getTelephonyProvidersEdgesLine",value:function getTelephonyProvidersEdgesLine(lineId){// verify the required parameter 'lineId' is set
if(lineId===undefined||lineId===null){throw'Missing the required parameter "lineId" when calling getTelephonyProvidersEdgesLine';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/lines/{lineId}','GET',{'lineId':lineId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a line base settings object by ID
	 * 
	 * @param {String} lineBaseId Line base ID
	 */},{key:"getTelephonyProvidersEdgesLinebasesetting",value:function getTelephonyProvidersEdgesLinebasesetting(lineBaseId){// verify the required parameter 'lineBaseId' is set
if(lineBaseId===undefined||lineBaseId===null){throw'Missing the required parameter "lineBaseId" when calling getTelephonyProvidersEdgesLinebasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/linebasesettings/{lineBaseId}','GET',{'lineBaseId':lineBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a listing of line base settings objects
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated
	 */},{key:"getTelephonyProvidersEdgesLinebasesettings",value:function getTelephonyProvidersEdgesLinebasesettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/linebasesettings','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Lines
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated. The edgeGroup value is deprecated.
	 */},{key:"getTelephonyProvidersEdgesLines",value:function getTelephonyProvidersEdgesLines(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/lines','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'sortBy':opts['sortBy'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance
	 * 
	 * @param {String} lineBaseSettingsId The id of a Line Base Settings object upon which to base this Line
	 */},{key:"getTelephonyProvidersEdgesLinesTemplate",value:function getTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId){// verify the required parameter 'lineBaseSettingsId' is set
if(lineBaseSettingsId===undefined||lineBaseSettingsId===null){throw'Missing the required parameter "lineBaseSettingsId" when calling getTelephonyProvidersEdgesLinesTemplate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/lines/template','GET',{},{'lineBaseSettingsId':lineBaseSettingsId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get edge logical interfaces.
	 * Retrieve the configured logical interfaces for a list edges. Only 100 edges can be requested at a time.
	 * @param {String} edgeIds Comma separated list of Edge Id's
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Field to expand in the response
	 */},{key:"getTelephonyProvidersEdgesLogicalinterfaces",value:function getTelephonyProvidersEdgesLogicalinterfaces(edgeIds,opts){opts=opts||{};// verify the required parameter 'edgeIds' is set
if(edgeIds===undefined||edgeIds===null){throw'Missing the required parameter "edgeIds" when calling getTelephonyProvidersEdgesLogicalinterfaces';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/logicalinterfaces','GET',{},{'edgeIds':edgeIds,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get media endpoint statistics events.
	 * 
	 * @param {String} conversationId Identifier of the conversation
	 * getTelephonyProvidersEdgesMediastatisticsConversation is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTelephonyProvidersEdgesMediastatisticsConversation",value:function getTelephonyProvidersEdgesMediastatisticsConversation(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getTelephonyProvidersEdgesMediastatisticsConversation';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/mediastatistics/conversations/{conversationId}','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get media endpoint statistics event.
	 * 
	 * @param {String} conversationId Identifier of the conversation
	 * @param {String} communicationId Identifier of the media session
	 * getTelephonyProvidersEdgesMediastatisticsConversationCommunication is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTelephonyProvidersEdgesMediastatisticsConversationCommunication",value:function getTelephonyProvidersEdgesMediastatisticsConversationCommunication(conversationId,communicationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getTelephonyProvidersEdgesMediastatisticsConversationCommunication';}// verify the required parameter 'communicationId' is set
if(communicationId===undefined||communicationId===null){throw'Missing the required parameter "communicationId" when calling getTelephonyProvidersEdgesMediastatisticsConversationCommunication';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/mediastatistics/conversations/{conversationId}/communications/{communicationId}','GET',{'conversationId':conversationId,'communicationId':communicationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the metrics for a list of edges.
	 * 
	 * @param {String} edgeIds Comma separated list of Edge Id's. Maximum of 100 edge ids allowed.
	 */},{key:"getTelephonyProvidersEdgesMetrics",value:function getTelephonyProvidersEdgesMetrics(edgeIds){// verify the required parameter 'edgeIds' is set
if(edgeIds===undefined||edgeIds===null){throw'Missing the required parameter "edgeIds" when calling getTelephonyProvidersEdgesMetrics';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/metrics','GET',{},{'edgeIds':edgeIds},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get outbound route
	 * This route is deprecated, use /telephony/providers/edges/sites/{siteId}/outboundroutes/{outboundRouteId} instead.
	 * @param {String} outboundRouteId Outbound route ID
	 * @deprecated
	 */},{key:"getTelephonyProvidersEdgesOutboundroute",value:function getTelephonyProvidersEdgesOutboundroute(outboundRouteId){// verify the required parameter 'outboundRouteId' is set
if(outboundRouteId===undefined||outboundRouteId===null){throw'Missing the required parameter "outboundRouteId" when calling getTelephonyProvidersEdgesOutboundroute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}','GET',{'outboundRouteId':outboundRouteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get outbound routes
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {String} opts.siteId Filter by site.id
	 * @param {String} opts.externalTrunkBasesIds Filter by externalTrunkBases.ids
	 * @param {String} opts.sortBy Sort by (default to name)
	 */},{key:"getTelephonyProvidersEdgesOutboundroutes",value:function getTelephonyProvidersEdgesOutboundroutes(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/outboundroutes','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'site.id':opts['siteId'],'externalTrunkBases.ids':opts['externalTrunkBasesIds'],'sortBy':opts['sortBy']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Phone by ID
	 * 
	 * @param {String} phoneId Phone ID
	 */},{key:"getTelephonyProvidersEdgesPhone",value:function getTelephonyProvidersEdgesPhone(phoneId){// verify the required parameter 'phoneId' is set
if(phoneId===undefined||phoneId===null){throw'Missing the required parameter "phoneId" when calling getTelephonyProvidersEdgesPhone';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/{phoneId}','GET',{'phoneId':phoneId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Phone Base Settings object by ID
	 * 
	 * @param {String} phoneBaseId Phone base ID
	 */},{key:"getTelephonyProvidersEdgesPhonebasesetting",value:function getTelephonyProvidersEdgesPhonebasesetting(phoneBaseId){// verify the required parameter 'phoneBaseId' is set
if(phoneBaseId===undefined||phoneBaseId===null){throw'Missing the required parameter "phoneBaseId" when calling getTelephonyProvidersEdgesPhonebasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}','GET',{'phoneBaseId':phoneBaseId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Phone Base Settings objects
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated
	 * @param {String} opts.name Name
	 */},{key:"getTelephonyProvidersEdgesPhonebasesettings",value:function getTelephonyProvidersEdgesPhonebasesettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of available makes and models to create a new Phone Base Settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases",value:function getTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings/availablemetabases','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance
	 * 
	 * @param {String} phoneMetabaseId The id of a metabase object upon which to base this Phone Base Settings
	 */},{key:"getTelephonyProvidersEdgesPhonebasesettingsTemplate",value:function getTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId){// verify the required parameter 'phoneMetabaseId' is set
if(phoneMetabaseId===undefined||phoneMetabaseId===null){throw'Missing the required parameter "phoneMetabaseId" when calling getTelephonyProvidersEdgesPhonebasesettingsTemplate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings/template','GET',{},{'phoneMetabaseId':phoneMetabaseId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Phone Instances. A maximum of 10,000 results is returned when filtering the results or sorting by a field other than the ID. Sorting by only the ID has no result limit. Each filter supports a wildcard, *, as a value to search for partial values.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Object} opts.sortBy The field to sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.siteId Filter by site.id
	 * @param {String} opts.webRtcUserId Filter by webRtcUser.id
	 * @param {String} opts.phoneBaseSettingsId Filter by phoneBaseSettings.id
	 * @param {String} opts.linesLoggedInUserId Filter by lines.loggedInUser.id
	 * @param {String} opts.linesDefaultForUserId Filter by lines.defaultForUser.id
	 * @param {String} opts.phoneHardwareId Filter by phone_hardwareId
	 * @param {String} opts.linesId Filter by lines.id
	 * @param {String} opts.linesName Filter by lines.name
	 * @param {String} opts.name Name of the Phone to filter by, comma-separated
	 * @param {String} opts.statusOperationalStatus The primary status to filter by
	 * @param {String} opts.secondaryStatusOperationalStatus The secondary status to filter by
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated
	 * @param {Array.<String>} opts.fields Fields and properties to get, comma-separated
	 */},{key:"getTelephonyProvidersEdgesPhones",value:function getTelephonyProvidersEdgesPhones(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'site.id':opts['siteId'],'webRtcUser.id':opts['webRtcUserId'],'phoneBaseSettings.id':opts['phoneBaseSettingsId'],'lines.loggedInUser.id':opts['linesLoggedInUserId'],'lines.defaultForUser.id':opts['linesDefaultForUserId'],'phone_hardwareId':opts['phoneHardwareId'],'lines.id':opts['linesId'],'lines.name':opts['linesName'],'name':opts['name'],'status.operationalStatus':opts['statusOperationalStatus'],'secondaryStatus.operationalStatus':opts['secondaryStatusOperationalStatus'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'fields':this.apiClient.buildCollectionParam(opts['fields'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance
	 * 
	 * @param {String} phoneBaseSettingsId The id of a Phone Base Settings object upon which to base this Phone
	 */},{key:"getTelephonyProvidersEdgesPhonesTemplate",value:function getTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId){// verify the required parameter 'phoneBaseSettingsId' is set
if(phoneBaseSettingsId===undefined||phoneBaseSettingsId===null){throw'Missing the required parameter "phoneBaseSettingsId" when calling getTelephonyProvidersEdgesPhonesTemplate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/template','GET',{},{'phoneBaseSettingsId':phoneBaseSettingsId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get physical interfaces for edges.
	 * Retrieves a list of all configured physical interfaces for a list of edges. Only 100 edges can be requested at a time.
	 * @param {String} edgeIds Comma separated list of Edge Id's
	 */},{key:"getTelephonyProvidersEdgesPhysicalinterfaces",value:function getTelephonyProvidersEdgesPhysicalinterfaces(edgeIds){// verify the required parameter 'edgeIds' is set
if(edgeIds===undefined||edgeIds===null){throw'Missing the required parameter "edgeIds" when calling getTelephonyProvidersEdgesPhysicalinterfaces';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/physicalinterfaces','GET',{},{'edgeIds':edgeIds},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Site by ID.
	 * 
	 * @param {String} siteId Site ID
	 */},{key:"getTelephonyProvidersEdgesSite",value:function getTelephonyProvidersEdgesSite(siteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSite';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}','GET',{'siteId':siteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Number Plan by ID.
	 * 
	 * @param {String} siteId Site ID
	 * @param {String} numberPlanId Number Plan ID
	 */},{key:"getTelephonyProvidersEdgesSiteNumberplan",value:function getTelephonyProvidersEdgesSiteNumberplan(siteId,numberPlanId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteNumberplan';}// verify the required parameter 'numberPlanId' is set
if(numberPlanId===undefined||numberPlanId===null){throw'Missing the required parameter "numberPlanId" when calling getTelephonyProvidersEdgesSiteNumberplan';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/numberplans/{numberPlanId}','GET',{'siteId':siteId,'numberPlanId':numberPlanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Number Plans for this Site. Only fetches the first 200 records.
	 * 
	 * @param {String} siteId Site ID
	 */},{key:"getTelephonyProvidersEdgesSiteNumberplans",value:function getTelephonyProvidersEdgesSiteNumberplans(siteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteNumberplans';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/numberplans','GET',{'siteId':siteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Classifications for this Site
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.classification Classification
	 */},{key:"getTelephonyProvidersEdgesSiteNumberplansClassifications",value:function getTelephonyProvidersEdgesSiteNumberplansClassifications(siteId,opts){opts=opts||{};// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteNumberplansClassifications';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/numberplans/classifications','GET',{'siteId':siteId},{'classification':opts['classification']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an outbound route
	 * 
	 * @param {String} siteId Site ID
	 * @param {String} outboundRouteId Outbound route ID
	 */},{key:"getTelephonyProvidersEdgesSiteOutboundroute",value:function getTelephonyProvidersEdgesSiteOutboundroute(siteId,outboundRouteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteOutboundroute';}// verify the required parameter 'outboundRouteId' is set
if(outboundRouteId===undefined||outboundRouteId===null){throw'Missing the required parameter "outboundRouteId" when calling getTelephonyProvidersEdgesSiteOutboundroute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/outboundroutes/{outboundRouteId}','GET',{'siteId':siteId,'outboundRouteId':outboundRouteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get outbound routes
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.name Name
	 * @param {String} opts.externalTrunkBasesIds externalTrunkBases.ids
	 * @param {String} opts.sortBy Sort by (default to name)
	 */},{key:"getTelephonyProvidersEdgesSiteOutboundroutes",value:function getTelephonyProvidersEdgesSiteOutboundroutes(siteId,opts){opts=opts||{};// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteOutboundroutes';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/outboundroutes','GET',{'siteId':siteId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'name':opts['name'],'externalTrunkBases.ids':opts['externalTrunkBasesIds'],'sortBy':opts['sortBy']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get site connections for a site.
	 * 
	 * @param {String} siteId Site ID
	 */},{key:"getTelephonyProvidersEdgesSiteSiteconnections",value:function getTelephonyProvidersEdgesSiteSiteconnections(siteId){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling getTelephonyProvidersEdgesSiteSiteconnections';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/siteconnections','GET',{'siteId':siteId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of Sites.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortBy Sort by (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.name Name
	 * @param {String} opts.locationId Location Id
	 * @param {Boolean} opts.managed Filter by managed
	 */},{key:"getTelephonyProvidersEdgesSites",value:function getTelephonyProvidersEdgesSites(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'name':opts['name'],'location.id':opts['locationId'],'managed':opts['managed']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of Edge-compatible time zones
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 1000)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getTelephonyProvidersEdgesTimezones",value:function getTelephonyProvidersEdgesTimezones(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/timezones','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Trunk by ID
	 * 
	 * @param {String} trunkId Trunk ID
	 */},{key:"getTelephonyProvidersEdgesTrunk",value:function getTelephonyProvidersEdgesTrunk(trunkId){// verify the required parameter 'trunkId' is set
if(trunkId===undefined||trunkId===null){throw'Missing the required parameter "trunkId" when calling getTelephonyProvidersEdgesTrunk';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunks/{trunkId}','GET',{'trunkId':trunkId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the trunk metrics.
	 * 
	 * @param {String} trunkId Trunk Id
	 */},{key:"getTelephonyProvidersEdgesTrunkMetrics",value:function getTelephonyProvidersEdgesTrunkMetrics(trunkId){// verify the required parameter 'trunkId' is set
if(trunkId===undefined||trunkId===null){throw'Missing the required parameter "trunkId" when calling getTelephonyProvidersEdgesTrunkMetrics';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunks/{trunkId}/metrics','GET',{'trunkId':trunkId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Trunk Base Settings object by ID
	 * Managed properties will not be returned unless the user is assigned the internal:trunk:edit permission.
	 * @param {String} trunkBaseSettingsId Trunk Base ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.ignoreHidden Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only.
	 */},{key:"getTelephonyProvidersEdgesTrunkbasesetting",value:function getTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId,opts){opts=opts||{};// verify the required parameter 'trunkBaseSettingsId' is set
if(trunkBaseSettingsId===undefined||trunkBaseSettingsId===null){throw'Missing the required parameter "trunkBaseSettingsId" when calling getTelephonyProvidersEdgesTrunkbasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}','GET',{'trunkBaseSettingsId':trunkBaseSettingsId},{'ignoreHidden':opts['ignoreHidden']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Trunk Base Settings listing
	 * Managed properties will not be returned unless the user is assigned the internal:trunk:edit permission.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Boolean} opts.recordingEnabled Filter trunks by recording enabled
	 * @param {Boolean} opts.ignoreHidden Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only.
	 * @param {Boolean} opts.managed Filter by managed
	 * @param {Array.<String>} opts.expand Fields to expand in the response, comma-separated
	 * @param {String} opts.name Name of the TrunkBase to filter by
	 */},{key:"getTelephonyProvidersEdgesTrunkbasesettings",value:function getTelephonyProvidersEdgesTrunkbasesettings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'recordingEnabled':opts['recordingEnabled'],'ignoreHidden':opts['ignoreHidden'],'managed':opts['managed'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'name':opts['name']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of available makes and models to create a new Trunk Base Settings
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.type 
	 * @param {Number} opts.pageSize  (default to 25)
	 * @param {Number} opts.pageNumber  (default to 1)
	 */},{key:"getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases",value:function getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings/availablemetabases','GET',{},{'type':opts['type'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance
	 * 
	 * @param {String} trunkMetabaseId The id of a metabase object upon which to base this Trunk Base Settings
	 */},{key:"getTelephonyProvidersEdgesTrunkbasesettingsTemplate",value:function getTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId){// verify the required parameter 'trunkMetabaseId' is set
if(trunkMetabaseId===undefined||trunkMetabaseId===null){throw'Missing the required parameter "trunkMetabaseId" when calling getTelephonyProvidersEdgesTrunkbasesettingsTemplate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings/template','GET',{},{'trunkMetabaseId':trunkMetabaseId},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of available trunks.
	 * Trunks are created by assigning trunk base settings to an Edge or Edge Group.
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.sortBy Value by which to sort (default to name)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {String} opts.edgeId Filter by Edge Ids
	 * @param {String} opts.trunkBaseId Filter by Trunk Base Ids
	 * @param {Object} opts.trunkType Filter by a Trunk type
	 */},{key:"getTelephonyProvidersEdgesTrunks",value:function getTelephonyProvidersEdgesTrunks(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunks','GET',{},{'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize'],'sortBy':opts['sortBy'],'sortOrder':opts['sortOrder'],'edge.id':opts['edgeId'],'trunkBase.id':opts['trunkBaseId'],'trunkType':opts['trunkType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the metrics for a list of trunks.
	 * 
	 * @param {String} trunkIds Comma separated list of Trunk Id's
	 */},{key:"getTelephonyProvidersEdgesTrunksMetrics",value:function getTelephonyProvidersEdgesTrunksMetrics(trunkIds){// verify the required parameter 'trunkIds' is set
if(trunkIds===undefined||trunkIds===null){throw'Missing the required parameter "trunkIds" when calling getTelephonyProvidersEdgesTrunksMetrics';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunks/metrics','GET',{},{'trunkIds':trunkIds},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get Counts of trunks that have recording disabled or enabled
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.trunkType The type of this trunk base.
	 */},{key:"getTelephonyProvidersEdgesTrunkswithrecording",value:function getTelephonyProvidersEdgesTrunkswithrecording(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkswithrecording','GET',{},{'trunkType':opts['trunkType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Disable site connections for a site.
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} body Site
	 */},{key:"patchTelephonyProvidersEdgesSiteSiteconnections",value:function patchTelephonyProvidersEdgesSiteSiteconnections(siteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling patchTelephonyProvidersEdgesSiteSiteconnections';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchTelephonyProvidersEdgesSiteSiteconnections';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/siteconnections','PATCH',{'siteId':siteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Nslookup request command to collect networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 * @param {Object} body request payload to get network diagnostic
	 */},{key:"postTelephonyProvidersEdgeDiagnosticNslookup",value:function postTelephonyProvidersEdgeDiagnosticNslookup(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeDiagnosticNslookup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeDiagnosticNslookup';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/nslookup','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Ping Request command to collect networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 * @param {Object} body request payload to get network diagnostic
	 */},{key:"postTelephonyProvidersEdgeDiagnosticPing",value:function postTelephonyProvidersEdgeDiagnosticPing(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeDiagnosticPing';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeDiagnosticPing';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/ping','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Route request command to collect networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 * @param {Object} body request payload to get network diagnostic
	 */},{key:"postTelephonyProvidersEdgeDiagnosticRoute",value:function postTelephonyProvidersEdgeDiagnosticRoute(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeDiagnosticRoute';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeDiagnosticRoute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/route','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Tracepath request command to collect networking-related information from an Edge for a target IP or host.
	 * 
	 * @param {String} edgeId Edge Id
	 * @param {Object} body request payload to get network diagnostic
	 */},{key:"postTelephonyProvidersEdgeDiagnosticTracepath",value:function postTelephonyProvidersEdgeDiagnosticTracepath(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeDiagnosticTracepath';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeDiagnosticTracepath';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/diagnostic/tracepath','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an edge logical interface.
	 * Create
	 * @param {String} edgeId Edge ID
	 * @param {Object} body Logical interface
	 */},{key:"postTelephonyProvidersEdgeLogicalinterfaces",value:function postTelephonyProvidersEdgeLogicalinterfaces(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeLogicalinterfaces';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeLogicalinterfaces';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request that the specified fileIds be uploaded from the Edge.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {String} jobId Job ID
	 * @param {Object} body Log upload request
	 */},{key:"postTelephonyProvidersEdgeLogsJobUpload",value:function postTelephonyProvidersEdgeLogsJobUpload(edgeId,jobId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeLogsJobUpload';}// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling postTelephonyProvidersEdgeLogsJobUpload';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeLogsJobUpload';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}/upload','POST',{'edgeId':edgeId,'jobId':jobId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a job to upload a list of Edge logs.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} body EdgeLogsJobRequest
	 */},{key:"postTelephonyProvidersEdgeLogsJobs",value:function postTelephonyProvidersEdgeLogsJobs(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeLogsJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeLogsJobs';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logs/jobs','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reboot an Edge
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Parameters for the edge reboot
	 */},{key:"postTelephonyProvidersEdgeReboot",value:function postTelephonyProvidersEdgeReboot(edgeId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeReboot';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/reboot','POST',{'edgeId':edgeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Starts a software update for this edge.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} body Software update request
	 */},{key:"postTelephonyProvidersEdgeSoftwareupdate",value:function postTelephonyProvidersEdgeSoftwareupdate(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeSoftwareupdate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgeSoftwareupdate';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/softwareupdate','POST',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Take an Edge in or out of service
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body Edge Service State
	 */},{key:"postTelephonyProvidersEdgeStatuscode",value:function postTelephonyProvidersEdgeStatuscode(edgeId,opts){opts=opts||{};// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeStatuscode';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/statuscode','POST',{'edgeId':edgeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Unpair an Edge
	 * 
	 * @param {String} edgeId Edge Id
	 */},{key:"postTelephonyProvidersEdgeUnpair",value:function postTelephonyProvidersEdgeUnpair(edgeId){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling postTelephonyProvidersEdgeUnpair';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/unpair','POST',{'edgeId':edgeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an edge.
	 * 
	 * @param {Object} body Edge
	 */},{key:"postTelephonyProvidersEdges",value:function postTelephonyProvidersEdges(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdges';}return this.apiClient.callApi('/api/v2/telephony/providers/edges','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validates a street address
	 * 
	 * @param {Object} body Address
	 */},{key:"postTelephonyProvidersEdgesAddressvalidation",value:function postTelephonyProvidersEdgesAddressvalidation(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesAddressvalidation';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/addressvalidation','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a certificate authority.
	 * 
	 * @param {Object} body CertificateAuthority
	 */},{key:"postTelephonyProvidersEdgesCertificateauthorities",value:function postTelephonyProvidersEdgesCertificateauthorities(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesCertificateauthorities';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/certificateauthorities','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new DID pool
	 * 
	 * @param {Object} body DID pool
	 */},{key:"postTelephonyProvidersEdgesDidpools",value:function postTelephonyProvidersEdgesDidpools(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesDidpools';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an edge group.
	 * 
	 * @param {Object} body EdgeGroup
	 */},{key:"postTelephonyProvidersEdgesEdgegroups",value:function postTelephonyProvidersEdgesEdgegroups(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesEdgegroups';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new extension pool
	 * 
	 * @param {Object} body ExtensionPool
	 */},{key:"postTelephonyProvidersEdgesExtensionpools",value:function postTelephonyProvidersEdgesExtensionpools(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesExtensionpools';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reboot a Phone
	 * 
	 * @param {String} phoneId Phone Id
	 */},{key:"postTelephonyProvidersEdgesPhoneReboot",value:function postTelephonyProvidersEdgesPhoneReboot(phoneId){// verify the required parameter 'phoneId' is set
if(phoneId===undefined||phoneId===null){throw'Missing the required parameter "phoneId" when calling postTelephonyProvidersEdgesPhoneReboot';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/{phoneId}/reboot','POST',{'phoneId':phoneId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new Phone Base Settings object
	 * 
	 * @param {Object} body Phone base settings
	 */},{key:"postTelephonyProvidersEdgesPhonebasesettings",value:function postTelephonyProvidersEdgesPhonebasesettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesPhonebasesettings';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new Phone
	 * 
	 * @param {Object} body Phone
	 */},{key:"postTelephonyProvidersEdgesPhones",value:function postTelephonyProvidersEdgesPhones(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesPhones';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Reboot Multiple Phones
	 * 
	 * @param {Object} body Phones
	 */},{key:"postTelephonyProvidersEdgesPhonesReboot",value:function postTelephonyProvidersEdgesPhonesReboot(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesPhonesReboot';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/reboot','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create outbound route
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} body OutboundRoute
	 */},{key:"postTelephonyProvidersEdgesSiteOutboundroutes",value:function postTelephonyProvidersEdgesSiteOutboundroutes(siteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling postTelephonyProvidersEdgesSiteOutboundroutes';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesSiteOutboundroutes';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/outboundroutes','POST',{'siteId':siteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Site.
	 * 
	 * @param {Object} body Site
	 */},{key:"postTelephonyProvidersEdgesSites",value:function postTelephonyProvidersEdgesSites(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesSites';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a Trunk Base Settings object
	 * 
	 * @param {Object} body Trunk base settings
	 */},{key:"postTelephonyProvidersEdgesTrunkbasesettings",value:function postTelephonyProvidersEdgesTrunkbasesettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postTelephonyProvidersEdgesTrunkbasesettings';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a edge.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {Object} body Edge
	 */},{key:"putTelephonyProvidersEdge",value:function putTelephonyProvidersEdge(edgeId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling putTelephonyProvidersEdge';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdge';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}','PUT',{'edgeId':edgeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an edge logical interface.
	 * 
	 * @param {String} edgeId Edge ID
	 * @param {String} interfaceId Interface ID
	 * @param {Object} body Logical interface
	 */},{key:"putTelephonyProvidersEdgeLogicalinterface",value:function putTelephonyProvidersEdgeLogicalinterface(edgeId,interfaceId,body){// verify the required parameter 'edgeId' is set
if(edgeId===undefined||edgeId===null){throw'Missing the required parameter "edgeId" when calling putTelephonyProvidersEdgeLogicalinterface';}// verify the required parameter 'interfaceId' is set
if(interfaceId===undefined||interfaceId===null){throw'Missing the required parameter "interfaceId" when calling putTelephonyProvidersEdgeLogicalinterface';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgeLogicalinterface';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}','PUT',{'edgeId':edgeId,'interfaceId':interfaceId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a certificate authority.
	 * 
	 * @param {String} certificateId Certificate ID
	 * @param {Object} body Certificate authority
	 */},{key:"putTelephonyProvidersEdgesCertificateauthority",value:function putTelephonyProvidersEdgesCertificateauthority(certificateId,body){// verify the required parameter 'certificateId' is set
if(certificateId===undefined||certificateId===null){throw'Missing the required parameter "certificateId" when calling putTelephonyProvidersEdgesCertificateauthority';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesCertificateauthority';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}','PUT',{'certificateId':certificateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a DID Pool by ID.
	 * 
	 * @param {String} didPoolId DID pool ID
	 * @param {Object} body DID pool
	 */},{key:"putTelephonyProvidersEdgesDidpool",value:function putTelephonyProvidersEdgesDidpool(didPoolId,body){// verify the required parameter 'didPoolId' is set
if(didPoolId===undefined||didPoolId===null){throw'Missing the required parameter "didPoolId" when calling putTelephonyProvidersEdgesDidpool';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesDidpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/didpools/{didPoolId}','PUT',{'didPoolId':didPoolId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an edge group.
	 * 
	 * @param {String} edgeGroupId Edge group ID
	 * @param {Object} body EdgeGroup
	 */},{key:"putTelephonyProvidersEdgesEdgegroup",value:function putTelephonyProvidersEdgesEdgegroup(edgeGroupId,body){// verify the required parameter 'edgeGroupId' is set
if(edgeGroupId===undefined||edgeGroupId===null){throw'Missing the required parameter "edgeGroupId" when calling putTelephonyProvidersEdgesEdgegroup';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesEdgegroup';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}','PUT',{'edgeGroupId':edgeGroupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the edge trunk base associated with the edge group
	 * 
	 * @param {String} edgegroupId Edge Group ID
	 * @param {String} edgetrunkbaseId Edge Trunk Base ID
	 * @param {Object} body EdgeTrunkBase
	 */},{key:"putTelephonyProvidersEdgesEdgegroupEdgetrunkbase",value:function putTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId,edgetrunkbaseId,body){// verify the required parameter 'edgegroupId' is set
if(edgegroupId===undefined||edgegroupId===null){throw'Missing the required parameter "edgegroupId" when calling putTelephonyProvidersEdgesEdgegroupEdgetrunkbase';}// verify the required parameter 'edgetrunkbaseId' is set
if(edgetrunkbaseId===undefined||edgetrunkbaseId===null){throw'Missing the required parameter "edgetrunkbaseId" when calling putTelephonyProvidersEdgesEdgegroupEdgetrunkbase';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesEdgegroupEdgetrunkbase';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/edgegroups/{edgegroupId}/edgetrunkbases/{edgetrunkbaseId}','PUT',{'edgegroupId':edgegroupId,'edgetrunkbaseId':edgetrunkbaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an extension pool by ID
	 * 
	 * @param {String} extensionPoolId Extension pool ID
	 * @param {Object} body ExtensionPool
	 */},{key:"putTelephonyProvidersEdgesExtensionpool",value:function putTelephonyProvidersEdgesExtensionpool(extensionPoolId,body){// verify the required parameter 'extensionPoolId' is set
if(extensionPoolId===undefined||extensionPoolId===null){throw'Missing the required parameter "extensionPoolId" when calling putTelephonyProvidersEdgesExtensionpool';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesExtensionpool';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}','PUT',{'extensionPoolId':extensionPoolId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Phone by ID
	 * 
	 * @param {String} phoneId Phone ID
	 * @param {Object} body Phone
	 */},{key:"putTelephonyProvidersEdgesPhone",value:function putTelephonyProvidersEdgesPhone(phoneId,body){// verify the required parameter 'phoneId' is set
if(phoneId===undefined||phoneId===null){throw'Missing the required parameter "phoneId" when calling putTelephonyProvidersEdgesPhone';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesPhone';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phones/{phoneId}','PUT',{'phoneId':phoneId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Phone Base Settings by ID
	 * 
	 * @param {String} phoneBaseId Phone base ID
	 * @param {Object} body Phone base settings
	 */},{key:"putTelephonyProvidersEdgesPhonebasesetting",value:function putTelephonyProvidersEdgesPhonebasesetting(phoneBaseId,body){// verify the required parameter 'phoneBaseId' is set
if(phoneBaseId===undefined||phoneBaseId===null){throw'Missing the required parameter "phoneBaseId" when calling putTelephonyProvidersEdgesPhonebasesetting';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesPhonebasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}','PUT',{'phoneBaseId':phoneBaseId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Site by ID.
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} body Site
	 */},{key:"putTelephonyProvidersEdgesSite",value:function putTelephonyProvidersEdgesSite(siteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling putTelephonyProvidersEdgesSite';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesSite';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}','PUT',{'siteId':siteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the list of Number Plans. A user can update maximum 200 number plans at a time.
	 * 
	 * @param {String} siteId Site ID
	 * @param {Array.<Object>} body List of number plans
	 */},{key:"putTelephonyProvidersEdgesSiteNumberplans",value:function putTelephonyProvidersEdgesSiteNumberplans(siteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling putTelephonyProvidersEdgesSiteNumberplans';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesSiteNumberplans';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/numberplans','PUT',{'siteId':siteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update outbound route
	 * 
	 * @param {String} siteId Site ID
	 * @param {String} outboundRouteId Outbound route ID
	 * @param {Object} body OutboundRoute
	 */},{key:"putTelephonyProvidersEdgesSiteOutboundroute",value:function putTelephonyProvidersEdgesSiteOutboundroute(siteId,outboundRouteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling putTelephonyProvidersEdgesSiteOutboundroute';}// verify the required parameter 'outboundRouteId' is set
if(outboundRouteId===undefined||outboundRouteId===null){throw'Missing the required parameter "outboundRouteId" when calling putTelephonyProvidersEdgesSiteOutboundroute';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesSiteOutboundroute';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/outboundroutes/{outboundRouteId}','PUT',{'siteId':siteId,'outboundRouteId':outboundRouteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update site connections for a site.
	 * 
	 * @param {String} siteId Site ID
	 * @param {Object} body Site
	 */},{key:"putTelephonyProvidersEdgesSiteSiteconnections",value:function putTelephonyProvidersEdgesSiteSiteconnections(siteId,body){// verify the required parameter 'siteId' is set
if(siteId===undefined||siteId===null){throw'Missing the required parameter "siteId" when calling putTelephonyProvidersEdgesSiteSiteconnections';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesSiteSiteconnections';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/sites/{siteId}/siteconnections','PUT',{'siteId':siteId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Trunk Base Settings object by ID
	 * 
	 * @param {String} trunkBaseSettingsId Trunk Base ID
	 * @param {Object} body Trunk base settings
	 */},{key:"putTelephonyProvidersEdgesTrunkbasesetting",value:function putTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId,body){// verify the required parameter 'trunkBaseSettingsId' is set
if(trunkBaseSettingsId===undefined||trunkBaseSettingsId===null){throw'Missing the required parameter "trunkBaseSettingsId" when calling putTelephonyProvidersEdgesTrunkbasesetting';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putTelephonyProvidersEdgesTrunkbasesetting';}return this.apiClient.callApi('/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}','PUT',{'trunkBaseSettingsId':trunkBaseSettingsId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TelephonyProvidersEdgeApi;}();var TextbotsApi=/*#__PURE__*/function(){/**
	 * Textbots service.
	 * @module purecloud-platform-client-v2/api/TextbotsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TextbotsApi. 
	 * @alias module:purecloud-platform-client-v2/api/TextbotsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TextbotsApi(apiClient){_classCallCheck(this,TextbotsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Find bots using the currently configured friendly name or ID.
	 * The name does allow case-insensitive partial string matches or by IDs (up to 50), but not both at the same time. Optionally you can limit the scope of the search by providing one or more bot types.  You can specify the maximum results to return, up to a limit of 100
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.botType Bot types
	 * @param {String} opts.botName Bot name
	 * @param {Array.<String>} opts.botId Bot IDs
	 * @param {Number} opts.pageSize The maximum results to return (default to 25)
	 */_createClass(TextbotsApi,[{key:"getTextbotsBotsSearch",value:function getTextbotsBotsSearch(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/textbots/bots/search','GET',{},{'botType':this.apiClient.buildCollectionParam(opts['botType'],'multi'),'botName':opts['botName'],'botId':this.apiClient.buildCollectionParam(opts['botId'],'multi'),'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Issue a bot flow turn event
	 * Send a turn event to an executing bot flow and produce the next action to take.
	 * @param {String} sessionId The bot flow session ID, typically obtained from 'POST /api/v2/textbots/botflows/sessions'
	 * @param {Object} turnRequest 
	 */},{key:"postTextbotsBotflowsSessionTurns",value:function postTextbotsBotflowsSessionTurns(sessionId,turnRequest){// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling postTextbotsBotflowsSessionTurns';}// verify the required parameter 'turnRequest' is set
if(turnRequest===undefined||turnRequest===null){throw'Missing the required parameter "turnRequest" when calling postTextbotsBotflowsSessionTurns';}return this.apiClient.callApi('/api/v2/textbots/botflows/sessions/{sessionId}/turns','POST',{'sessionId':sessionId},{},{},{},turnRequest,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an execution instance of a bot flow definition.
	 * The launch is asynchronous; use the returned instance ID to post turns to it using POST /api/v2/textbots/botflows/sessions/{sessionId}/turns.
	 * @param {Object} launchRequest 
	 */},{key:"postTextbotsBotflowsSessions",value:function postTextbotsBotflowsSessions(launchRequest){// verify the required parameter 'launchRequest' is set
if(launchRequest===undefined||launchRequest===null){throw'Missing the required parameter "launchRequest" when calling postTextbotsBotflowsSessions';}return this.apiClient.callApi('/api/v2/textbots/botflows/sessions','POST',{},{},{},{},launchRequest,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an intent to a bot to start a dialog/interact with it via text
	 * This will either start a bot with the given id or relay a communication to an existing bot session.
	 * @param {Object} postTextRequest 
	 */},{key:"postTextbotsBotsExecute",value:function postTextbotsBotsExecute(postTextRequest){// verify the required parameter 'postTextRequest' is set
if(postTextRequest===undefined||postTextRequest===null){throw'Missing the required parameter "postTextRequest" when calling postTextbotsBotsExecute';}return this.apiClient.callApi('/api/v2/textbots/bots/execute','POST',{},{},{},{},postTextRequest,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TextbotsApi;}();var TokensApi=/*#__PURE__*/function(){/**
	 * Tokens service.
	 * @module purecloud-platform-client-v2/api/TokensApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new TokensApi. 
	 * @alias module:purecloud-platform-client-v2/api/TokensApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function TokensApi(apiClient){_classCallCheck(this,TokensApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete all auth tokens for the specified user.
	 * 
	 * @param {String} userId User ID
	 */_createClass(TokensApi,[{key:"deleteToken",value:function deleteToken(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteToken';}return this.apiClient.callApi('/api/v2/tokens/{userId}','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete auth token used to make the request.
	 * 
	 */},{key:"deleteTokensMe",value:function deleteTokensMe(){return this.apiClient.callApi('/api/v2/tokens/me','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch information about the current token
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.preserveIdleTTL preserveIdleTTL indicates whether the idle token timeout should be reset or preserved. If preserveIdleTTL is true, then TTL value is not reset. If unset or false, the value is reset.
	 */},{key:"getTokensMe",value:function getTokensMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/tokens/me','GET',{},{'preserveIdleTTL':opts['preserveIdleTTL']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the current Idle Token Timeout Value
	 * 
	 * getTokensTimeout is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getTokensTimeout",value:function getTokensTimeout(){return this.apiClient.callApi('/api/v2/tokens/timeout','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Verify user token
	 * 
	 */},{key:"headTokensMe",value:function headTokensMe(){return this.apiClient.callApi('/api/v2/tokens/me','HEAD',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update or Enable/Disable the Idle Token Timeout
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 * putTokensTimeout is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"putTokensTimeout",value:function putTokensTimeout(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/tokens/timeout','PUT',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return TokensApi;}();var UploadsApi=/*#__PURE__*/function(){/**
	 * Uploads service.
	 * @module purecloud-platform-client-v2/api/UploadsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new UploadsApi. 
	 * @alias module:purecloud-platform-client-v2/api/UploadsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function UploadsApi(apiClient){_classCallCheck(this,UploadsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Creates a presigned URL for uploading a knowledge import file with a set of documents
	 * 
	 * @param {Object} body query
	 */_createClass(UploadsApi,[{key:"postKnowledgeDocumentuploads",value:function postKnowledgeDocumentuploads(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postKnowledgeDocumentuploads';}return this.apiClient.callApi('/api/v2/knowledge/documentuploads','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a presigned URL for uploading a chat corpus which will be used for mining by intent miner
	 * 
	 * @param {String} minerId Miner ID
	 * @param {Object} body query
	 */},{key:"postLanguageunderstandingMinerUploads",value:function postLanguageunderstandingMinerUploads(minerId,body){// verify the required parameter 'minerId' is set
if(minerId===undefined||minerId===null){throw'Missing the required parameter "minerId" when calling postLanguageunderstandingMinerUploads';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postLanguageunderstandingMinerUploads';}return this.apiClient.callApi('/api/v2/languageunderstanding/miners/{minerId}/uploads','POST',{'minerId':minerId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generates pre-signed URL to upload cover art for learning modules
	 * 
	 * @param {Object} body query
	 */},{key:"postUploadsLearningCoverart",value:function postUploadsLearningCoverart(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUploadsLearningCoverart';}return this.apiClient.callApi('/api/v2/uploads/learning/coverart','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates presigned url for uploading a public asset image
	 * 
	 * @param {Object} body query
	 */},{key:"postUploadsPublicassetsImages",value:function postUploadsPublicassetsImages(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUploadsPublicassetsImages';}return this.apiClient.callApi('/api/v2/uploads/publicassets/images','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates presigned url for uploading a recording file
	 * 
	 * @param {Object} body query
	 */},{key:"postUploadsRecordings",value:function postUploadsRecordings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUploadsRecordings';}return this.apiClient.callApi('/api/v2/uploads/recordings','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates presigned url for uploading WFM historical data file. Requires data in csv format.
	 * 
	 * @param {Object} body query
	 */},{key:"postUploadsWorkforcemanagementHistoricaldataCsv",value:function postUploadsWorkforcemanagementHistoricaldataCsv(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUploadsWorkforcemanagementHistoricaldataCsv';}return this.apiClient.callApi('/api/v2/uploads/workforcemanagement/historicaldata/csv','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return UploadsApi;}();var UsageApi=/*#__PURE__*/function(){/**
	 * Usage service.
	 * @module purecloud-platform-client-v2/api/UsageApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new UsageApi. 
	 * @alias module:purecloud-platform-client-v2/api/UsageApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function UsageApi(apiClient){_classCallCheck(this,UsageApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get the results of a usage query
	 * 
	 * @param {String} executionId ID of the query execution
	 * @param {String} clientId Client ID
	 */_createClass(UsageApi,[{key:"getOauthClientUsageQueryResult",value:function getOauthClientUsageQueryResult(executionId,clientId){// verify the required parameter 'executionId' is set
if(executionId===undefined||executionId===null){throw'Missing the required parameter "executionId" when calling getOauthClientUsageQueryResult';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthClientUsageQueryResult';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}','GET',{'executionId':executionId,'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a summary of OAuth client API usage
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {String} clientId Client ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.days Previous number of days to query (default to 7)
	 */},{key:"getOauthClientUsageSummary",value:function getOauthClientUsageSummary(clientId,opts){opts=opts||{};// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getOauthClientUsageSummary';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/summary','GET',{'clientId':clientId},{'days':opts['days']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the results of a usage query
	 * 
	 * @param {String} executionId ID of the query execution
	 */},{key:"getUsageQueryExecutionIdResults",value:function getUsageQueryExecutionIdResults(executionId){// verify the required parameter 'executionId' is set
if(executionId===undefined||executionId===null){throw'Missing the required parameter "executionId" when calling getUsageQueryExecutionIdResults';}return this.apiClient.callApi('/api/v2/usage/query/{executionId}/results','GET',{'executionId':executionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the results of a usage search
	 * 
	 * @param {String} executionId ID of the search execution
	 */},{key:"getUsageSimplesearchExecutionIdResults",value:function getUsageSimplesearchExecutionIdResults(executionId){// verify the required parameter 'executionId' is set
if(executionId===undefined||executionId===null){throw'Missing the required parameter "executionId" when calling getUsageSimplesearchExecutionIdResults';}return this.apiClient.callApi('/api/v2/usage/simplesearch/{executionId}/results','GET',{'executionId':executionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for OAuth client API usage
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {String} clientId Client ID
	 * @param {Object} body Query
	 */},{key:"postOauthClientUsageQuery",value:function postOauthClientUsageQuery(clientId,body){// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling postOauthClientUsageQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postOauthClientUsageQuery';}return this.apiClient.callApi('/api/v2/oauth/clients/{clientId}/usage/query','POST',{'clientId':clientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query organization API Usage - 
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {Object} body Query
	 */},{key:"postUsageQuery",value:function postUsageQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsageQuery';}return this.apiClient.callApi('/api/v2/usage/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search organization API Usage - 
	 * After calling this method, you will then need to poll for the query results based on the returned execution Id
	 * @param {Object} body SimpleSearch
	 */},{key:"postUsageSimplesearch",value:function postUsageSimplesearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsageSimplesearch';}return this.apiClient.callApi('/api/v2/usage/simplesearch','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return UsageApi;}();var UserRecordingsApi=/*#__PURE__*/function(){/**
	 * UserRecordings service.
	 * @module purecloud-platform-client-v2/api/UserRecordingsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new UserRecordingsApi. 
	 * @alias module:purecloud-platform-client-v2/api/UserRecordingsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function UserRecordingsApi(apiClient){_classCallCheck(this,UserRecordingsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a user recording.
	 * 
	 * @param {String} recordingId User Recording ID
	 */_createClass(UserRecordingsApi,[{key:"deleteUserrecording",value:function deleteUserrecording(recordingId){// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling deleteUserrecording';}return this.apiClient.callApi('/api/v2/userrecordings/{recordingId}','DELETE',{'recordingId':recordingId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user recording.
	 * 
	 * @param {String} recordingId User Recording ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getUserrecording",value:function getUserrecording(recordingId,opts){opts=opts||{};// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getUserrecording';}return this.apiClient.callApi('/api/v2/userrecordings/{recordingId}','GET',{'recordingId':recordingId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Download a user recording.
	 * 
	 * @param {String} recordingId User Recording ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.formatId The desired media format. (default to WEBM)
	 * @param {Boolean} opts.async When set to true, api will return 202 response until the recording is ready for download
	 */},{key:"getUserrecordingMedia",value:function getUserrecordingMedia(recordingId,opts){opts=opts||{};// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling getUserrecordingMedia';}return this.apiClient.callApi('/api/v2/userrecordings/{recordingId}/media','GET',{'recordingId':recordingId},{'formatId':opts['formatId'],'async':opts['async']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of user recordings.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"getUserrecordings",value:function getUserrecordings(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/userrecordings','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get user recording summary
	 * 
	 */},{key:"getUserrecordingsSummary",value:function getUserrecordingsSummary(){return this.apiClient.callApi('/api/v2/userrecordings/summary','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a user recording.
	 * 
	 * @param {String} recordingId User Recording ID
	 * @param {Object} body UserRecording
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 */},{key:"putUserrecording",value:function putUserrecording(recordingId,body,opts){opts=opts||{};// verify the required parameter 'recordingId' is set
if(recordingId===undefined||recordingId===null){throw'Missing the required parameter "recordingId" when calling putUserrecording';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserrecording';}return this.apiClient.callApi('/api/v2/userrecordings/{recordingId}','PUT',{'recordingId':recordingId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return UserRecordingsApi;}();var UsersApi=/*#__PURE__*/function(){/**
	 * Users service.
	 * @module purecloud-platform-client-v2/api/UsersApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new UsersApi. 
	 * @alias module:purecloud-platform-client-v2/api/UsersApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function UsersApi(apiClient){_classCallCheck(this,UsersApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete/cancel an async request
	 * 
	 * @param {String} jobId jobId
	 */_createClass(UsersApi,[{key:"deleteAnalyticsUsersDetailsJob",value:function deleteAnalyticsUsersDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling deleteAnalyticsUsersDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}','DELETE',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a grant of a role in a division
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} divisionId the id of the division of the grant
	 * @param {String} roleId the id of the role of the grant
	 */},{key:"deleteAuthorizationSubjectDivisionRole",value:function deleteAuthorizationSubjectDivisionRole(subjectId,divisionId,roleId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling deleteAuthorizationSubjectDivisionRole';}// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling deleteAuthorizationSubjectDivisionRole';}// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling deleteAuthorizationSubjectDivisionRole';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}','DELETE',{'subjectId':subjectId,'divisionId':divisionId,'roleId':roleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the user's max utilization settings and revert to the organization-wide default.
	 * 
	 * @param {String} userId User ID
	 */},{key:"deleteRoutingUserUtilization",value:function deleteRoutingUserUtilization(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete user
	 * 
	 * @param {String} userId User ID
	 */},{key:"deleteUser",value:function deleteUser(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUser';}return this.apiClient.callApi('/api/v2/users/{userId}','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove routing language from user
	 * 
	 * @param {String} userId User ID
	 * @param {String} languageId languageId
	 */},{key:"deleteUserRoutinglanguage",value:function deleteUserRoutinglanguage(userId,languageId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserRoutinglanguage';}// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling deleteUserRoutinglanguage';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/{languageId}','DELETE',{'userId':userId,'languageId':languageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove routing skill from user
	 * 
	 * @param {String} userId User ID
	 * @param {String} skillId skillId
	 */},{key:"deleteUserRoutingskill",value:function deleteUserRoutingskill(userId,skillId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserRoutingskill';}// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling deleteUserRoutingskill';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/{skillId}','DELETE',{'userId':userId,'skillId':skillId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Clear associated station
	 * 
	 * @param {String} userId User ID
	 */},{key:"deleteUserStationAssociatedstation",value:function deleteUserStationAssociatedstation(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserStationAssociatedstation';}return this.apiClient.callApi('/api/v2/users/{userId}/station/associatedstation','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Clear default station
	 * 
	 * @param {String} userId User ID
	 */},{key:"deleteUserStationDefaultstation",value:function deleteUserStationDefaultstation(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserStationDefaultstation';}return this.apiClient.callApi('/api/v2/users/{userId}/station/defaultstation','DELETE',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a verifier
	 * 
	 * @param {String} userId User ID
	 * @param {String} verifierId Verifier ID
	 */},{key:"deleteUserVerifier",value:function deleteUserVerifier(userId,verifierId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling deleteUserVerifier';}// verify the required parameter 'verifierId' is set
if(verifierId===undefined||verifierId===null){throw'Missing the required parameter "verifierId" when calling deleteUserVerifier';}return this.apiClient.callApi('/api/v2/users/{userId}/verifiers/{verifierId}','DELETE',{'userId':userId,'verifierId':verifierId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for user aggregates
	 * 
	 * @param {String} jobId jobId
	 * getAnalyticsUsersAggregatesJob is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsUsersAggregatesJob",value:function getAnalyticsUsersAggregatesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersAggregatesJob';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async aggregates query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Cursor token to retrieve next page
	 * getAnalyticsUsersAggregatesJobResults is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"getAnalyticsUsersAggregatesJobResults",value:function getAnalyticsUsersAggregatesJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersAggregatesJobResults';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status for async query for user details
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getAnalyticsUsersDetailsJob",value:function getAnalyticsUsersDetailsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersDetailsJob';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch a page of results for an async query
	 * 
	 * @param {String} jobId jobId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.cursor Indicates where to resume query results (not required for first page)
	 * @param {Number} opts.pageSize The desired maximum number of results
	 */},{key:"getAnalyticsUsersDetailsJobResults",value:function getAnalyticsUsersDetailsJobResults(jobId,opts){opts=opts||{};// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getAnalyticsUsersDetailsJobResults';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/{jobId}/results','GET',{'jobId':jobId},{'cursor':opts['cursor'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Lookup the datalake availability date and time
	 * 
	 */},{key:"getAnalyticsUsersDetailsJobsAvailability",value:function getAnalyticsUsersDetailsJobsAvailability(){return this.apiClient.callApi('/api/v2/analytics/users/details/jobs/availability','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the current user has the given permission in.
	 * This route is deprecated, use authorization/divisionspermitted/paged/me instead.
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.name Search term to filter by division name
	 * @deprecated
	 */},{key:"getAuthorizationDivisionspermittedMe",value:function getAuthorizationDivisionspermittedMe(permission,opts){opts=opts||{};// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedMe';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/me','GET',{},{'name':opts['name'],'permission':permission},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the current user has the given permission in.
	 * 
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 */},{key:"getAuthorizationDivisionspermittedPagedMe",value:function getAuthorizationDivisionspermittedPagedMe(permission,opts){opts=opts||{};// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedPagedMe';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/paged/me','GET',{},{'permission':permission,'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns which divisions the specified user has the given permission in.
	 * This route is deprecated, use authorization/divisionspermitted/paged/me instead.
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} permission The permission string, including the object to access, e.g. routing:queue:view
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @deprecated
	 */},{key:"getAuthorizationDivisionspermittedPagedSubjectId",value:function getAuthorizationDivisionspermittedPagedSubjectId(subjectId,permission,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getAuthorizationDivisionspermittedPagedSubjectId';}// verify the required parameter 'permission' is set
if(permission===undefined||permission===null){throw'Missing the required parameter "permission" when calling getAuthorizationDivisionspermittedPagedSubjectId';}return this.apiClient.callApi('/api/v2/authorization/divisionspermitted/paged/{subjectId}','GET',{'subjectId':subjectId},{'permission':permission,'pageNumber':opts['pageNumber'],'pageSize':opts['pageSize']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for a user.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 */},{key:"getAuthorizationSubject",value:function getAuthorizationSubject(subjectId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getAuthorizationSubject';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}','GET',{'subjectId':subjectId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for the currently authenticated user.
	 * 
	 */},{key:"getAuthorizationSubjectsMe",value:function getAuthorizationSubjectsMe(){return this.apiClient.callApi('/api/v2/authorization/subjects/me','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch field config for an entity type
	 * 
	 * @param {Object} type Field type
	 * @deprecated
	 */},{key:"getFieldconfig",value:function getFieldconfig(type){// verify the required parameter 'type' is set
if(type===undefined||type===null){throw'Missing the required parameter "type" when calling getFieldconfig';}return this.apiClient.callApi('/api/v2/fieldconfig','GET',{},{'type':type},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user profile listing
	 * This api is deprecated. User /api/v2/users
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id id
	 * @param {Array.<String>} opts.jid jid
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Object} opts.integrationPresenceSource Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an expand.
	 * @deprecated
	 */},{key:"getProfilesUsers",value:function getProfilesUsers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/profiles/users','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'jid':this.apiClient.buildCollectionParam(opts['jid'],'multi'),'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the user's max utilization settings.  If not configured, the organization-wide default is returned.
	 * 
	 * @param {String} userId User ID
	 */},{key:"getRoutingUserUtilization",value:function getRoutingUserUtilization(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get user.
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Object} opts.integrationPresenceSource Gets an integration presence for a user instead of their default.
	 * @param {Object} opts.state Search for a user with this state (default to active)
	 */},{key:"getUser",value:function getUser(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUser';}return this.apiClient.callApi('/api/v2/users/{userId}','GET',{'userId':userId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource'],'state':opts['state']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get adjacents
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getUserAdjacents",value:function getUserAdjacents(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserAdjacents';}return this.apiClient.callApi('/api/v2/users/{userId}/adjacents','GET',{'userId':userId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's CallForwarding
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserCallforwarding",value:function getUserCallforwarding(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserCallforwarding';}return this.apiClient.callApi('/api/v2/users/{userId}/callforwarding','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get direct reports
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getUserDirectreports",value:function getUserDirectreports(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserDirectreports';}return this.apiClient.callApi('/api/v2/users/{userId}/directreports','GET',{'userId':userId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated; will be revived with new contract
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {String} opts.sortOrder Sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @deprecated
	 */},{key:"getUserFavorites",value:function getUserFavorites(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserFavorites';}return this.apiClient.callApi('/api/v2/users/{userId}/favorites','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's Geolocation
	 * 
	 * @param {String} userId user Id
	 * @param {String} clientId client Id
	 */},{key:"getUserGeolocation",value:function getUserGeolocation(userId,clientId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserGeolocation';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling getUserGeolocation';}return this.apiClient.callApi('/api/v2/users/{userId}/geolocations/{clientId}','GET',{'userId':userId,'clientId':clientId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a OutOfOffice
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserOutofoffice",value:function getUserOutofoffice(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserOutofoffice';}return this.apiClient.callApi('/api/v2/users/{userId}/outofoffice','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get user profile
	 * This api has been deprecated. Use api/v2/users instead
	 * @param {String} userId userId
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Object} opts.integrationPresenceSource Gets an integration presence for a user instead of their default.
	 * @deprecated
	 */},{key:"getUserProfile",value:function getUserProfile(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserProfile';}return this.apiClient.callApi('/api/v2/users/{userId}/profile','GET',{'userId':userId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List profile skills for a user
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserProfileskills",value:function getUserProfileskills(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserProfileskills';}return this.apiClient.callApi('/api/v2/users/{userId}/profileskills','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get queues for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Boolean} opts.joined Is joined to the queue (default to true)
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 */},{key:"getUserQueues",value:function getUserQueues(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserQueues';}return this.apiClient.callApi('/api/v2/users/{userId}/queues','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'joined':opts['joined'],'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns a listing of roles and permissions for a user.
	 * 
	 * @param {String} subjectId User ID
	 */},{key:"getUserRoles",value:function getUserRoles(subjectId){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling getUserRoles';}return this.apiClient.callApi('/api/v2/users/{subjectId}/roles','GET',{'subjectId':subjectId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List routing language for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 */},{key:"getUserRoutinglanguages",value:function getUserRoutinglanguages(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserRoutinglanguages';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List routing skills for user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 */},{key:"getUserRoutingskills",value:function getUserRoutingskills(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserRoutingskills';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetch the routing status of a user
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserRoutingstatus",value:function getUserRoutingstatus(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserRoutingstatus';}return this.apiClient.callApi('/api/v2/users/{userId}/routingstatus','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get skill groups for a user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {String} opts.after The cursor that points to the next page
	 * @param {String} opts.before The cursor that points to the previous page
	 */},{key:"getUserSkillgroups",value:function getUserSkillgroups(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserSkillgroups';}return this.apiClient.callApi('/api/v2/users/{userId}/skillgroups','GET',{'userId':userId},{'pageSize':opts['pageSize'],'after':opts['after'],'before':opts['before']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get user state information.
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserState",value:function getUserState(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserState';}return this.apiClient.callApi('/api/v2/users/{userId}/state','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get station information for user
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserStation",value:function getUserStation(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserStation';}return this.apiClient.callApi('/api/v2/users/{userId}/station','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get superiors
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 */},{key:"getUserSuperiors",value:function getUserSuperiors(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserSuperiors';}return this.apiClient.callApi('/api/v2/users/{userId}/superiors','GET',{'userId':userId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List the organizations that have authorized/trusted the user.
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getUserTrustors",value:function getUserTrustors(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserTrustors';}return this.apiClient.callApi('/api/v2/users/{userId}/trustors','GET',{'userId':userId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of verifiers
	 * 
	 * @param {String} userId User ID
	 */},{key:"getUserVerifiers",value:function getUserVerifiers(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getUserVerifiers';}return this.apiClient.callApi('/api/v2/users/{userId}/verifiers','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of available users.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Array.<String>} opts.id A list of user IDs to fetch by bulk
	 * @param {Array.<String>} opts.jabberId A list of jabberIds to fetch by bulk (cannot be used with the id parameter)
	 * @param {Object} opts.sortOrder Ascending or descending sort order (default to ASC)
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand
	 * @param {Object} opts.integrationPresenceSource Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an expand. When using this parameter the maximum number of users that can be returned is 100.
	 * @param {Object} opts.state Only list users of this state (default to active)
	 */},{key:"getUsers",value:function getUsers(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/users','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'id':this.apiClient.buildCollectionParam(opts['id'],'multi'),'jabberId':this.apiClient.buildCollectionParam(opts['jabberId'],'multi'),'sortOrder':opts['sortOrder'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource'],'state':opts['state']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of Development Activities
	 * Either moduleId or userId is required. Results are filtered based on the applicable permissions.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.userId Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId.
	 * @param {String} opts.moduleId Specifies the ID of the learning module.
	 * @param {String} opts.interval Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {String} opts.completionInterval Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (default to Any)
	 * @param {Object} opts.pass Specifies if only the failed (pass is False) or passed (pass is True) activities are returned. If pass is Any or if the pass parameter is not supplied, all activities are returned (default to Any)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (default to Desc)
	 * @param {Array.<String>} opts.types Specifies the activity types.
	 * @param {Array.<String>} opts.statuses Specifies the activity statuses to filter by
	 * @param {Array.<String>} opts.relationship Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.
	 */},{key:"getUsersDevelopmentActivities",value:function getUsersDevelopmentActivities(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/users/development/activities','GET',{},{'userId':this.apiClient.buildCollectionParam(opts['userId'],'multi'),'moduleId':opts['moduleId'],'interval':opts['interval'],'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'pass':opts['pass'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'types':this.apiClient.buildCollectionParam(opts['types'],'multi'),'statuses':this.apiClient.buildCollectionParam(opts['statuses'],'multi'),'relationship':this.apiClient.buildCollectionParam(opts['relationship'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of Development Activities for current user
	 * Results are filtered based on the applicable permissions.
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.moduleId Specifies the ID of the learning module.
	 * @param {String} opts.interval Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {String} opts.completionInterval Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
	 * @param {Object} opts.overdue Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (default to Any)
	 * @param {Object} opts.pass Specifies if only the failed (pass is False) or passed (pass is True) activities are returned. If pass is Any or if the pass parameter is not supplied, all activities are returned (default to Any)
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 * @param {Object} opts.sortOrder Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (default to Desc)
	 * @param {Array.<String>} opts.types Specifies the activity types.
	 * @param {Array.<String>} opts.statuses Specifies the activity statuses to filter by
	 * @param {Array.<String>} opts.relationship Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.
	 */},{key:"getUsersDevelopmentActivitiesMe",value:function getUsersDevelopmentActivitiesMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/users/development/activities/me','GET',{},{'moduleId':opts['moduleId'],'interval':opts['interval'],'completionInterval':opts['completionInterval'],'overdue':opts['overdue'],'pass':opts['pass'],'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'sortOrder':opts['sortOrder'],'types':this.apiClient.buildCollectionParam(opts['types'],'multi'),'statuses':this.apiClient.buildCollectionParam(opts['statuses'],'multi'),'relationship':this.apiClient.buildCollectionParam(opts['relationship'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Development Activity
	 * Permission not required if you are the attendee, creator or facilitator of the coaching appointment or you are the assigned user of the learning assignment.
	 * @param {String} activityId Specifies the activity ID, maps to either assignment or appointment ID
	 * @param {Object} type Specifies the activity type.
	 */},{key:"getUsersDevelopmentActivity",value:function getUsersDevelopmentActivity(activityId,type){// verify the required parameter 'activityId' is set
if(activityId===undefined||activityId===null){throw'Missing the required parameter "activityId" when calling getUsersDevelopmentActivity';}// verify the required parameter 'type' is set
if(type===undefined||type===null){throw'Missing the required parameter "type" when calling getUsersDevelopmentActivity';}return this.apiClient.callApi('/api/v2/users/development/activities/{activityId}','GET',{'activityId':activityId},{'type':type},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get current user details.
	 * This request is not valid when using the Client Credentials OAuth grant.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Which fields, if any, to expand.
	 * @param {Object} opts.integrationPresenceSource Get your presence for a given integration. This parameter will only be used when presence is provided as an expand.
	 */},{key:"getUsersMe",value:function getUsersMe(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/users/me','GET',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 * @param {Object} opts.integrationPresenceSource integrationPresenceSource
	 */},{key:"getUsersSearch",value:function getUsersSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getUsersSearch';}return this.apiClient.callApi('/api/v2/users/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi'),'integrationPresenceSource':opts['integrationPresenceSource']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body User
	 */},{key:"patchUser",value:function patchUser(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUser';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUser';}return this.apiClient.callApi('/api/v2/users/{userId}','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a user's CallForwarding
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Call forwarding
	 */},{key:"patchUserCallforwarding",value:function patchUserCallforwarding(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserCallforwarding';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserCallforwarding';}return this.apiClient.callApi('/api/v2/users/{userId}/callforwarding','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Patch a user's Geolocation
	 * The geolocation object can be patched one of three ways. Option 1: Set the primary property to true. This will set the client as the users primary geolocation source.  Option 2: Provide the latitude and longitude values.  This will enqueue an asynchronous update of the city, region, and country, generating a notification. A subsequent GET operation will include the new values for city, region and country.  Option 3:  Provide the city, region, country values.  Option 1 can be combined with Option 2 or Option 3.  For example, update the client as primary and provide latitude and longitude values.
	 * @param {String} userId user Id
	 * @param {String} clientId client Id
	 * @param {Object} body Geolocation
	 */},{key:"patchUserGeolocation",value:function patchUserGeolocation(userId,clientId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserGeolocation';}// verify the required parameter 'clientId' is set
if(clientId===undefined||clientId===null){throw'Missing the required parameter "clientId" when calling patchUserGeolocation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserGeolocation';}return this.apiClient.callApi('/api/v2/users/{userId}/geolocations/{clientId}','PATCH',{'userId':userId,'clientId':clientId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join or unjoin a queue for a user
	 * 
	 * @param {String} queueId Queue ID
	 * @param {String} userId User ID
	 * @param {Object} body Queue Member
	 */},{key:"patchUserQueue",value:function patchUserQueue(queueId,userId,body){// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling patchUserQueue';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserQueue';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserQueue';}return this.apiClient.callApi('/api/v2/users/{userId}/queues/{queueId}','PATCH',{'queueId':queueId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Join or unjoin a set of queues for a user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body User Queues
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.divisionId Division ID(s)
	 */},{key:"patchUserQueues",value:function patchUserQueues(userId,body,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserQueues';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserQueues';}return this.apiClient.callApi('/api/v2/users/{userId}/queues','PATCH',{'userId':userId},{'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update routing language proficiency or state.
	 * 
	 * @param {String} userId User ID
	 * @param {String} languageId languageId
	 * @param {Object} body Language
	 */},{key:"patchUserRoutinglanguage",value:function patchUserRoutinglanguage(userId,languageId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutinglanguage';}// verify the required parameter 'languageId' is set
if(languageId===undefined||languageId===null){throw'Missing the required parameter "languageId" when calling patchUserRoutinglanguage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutinglanguage';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/{languageId}','PATCH',{'userId':userId,'languageId':languageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add bulk routing language to user. Max limit 50 languages
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Language
	 */},{key:"patchUserRoutinglanguagesBulk",value:function patchUserRoutinglanguagesBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutinglanguagesBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutinglanguagesBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages/bulk','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk add routing skills to user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Skill
	 */},{key:"patchUserRoutingskillsBulk",value:function patchUserRoutingskillsBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchUserRoutingskillsBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUserRoutingskillsBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/bulk','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update bulk acd autoanswer on users. Max 50 users can be updated at a time.
	 * 
	 * @param {Array.<Object>} body Users
	 */},{key:"patchUsersBulk",value:function patchUsersBulk(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchUsersBulk';}return this.apiClient.callApi('/api/v2/users/bulk','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user activity observations
	 * 
	 * @param {Object} body query
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The desired page size
	 * @param {Number} opts.pageNumber The desired page number
	 * postAnalyticsUsersActivityQuery is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsUsersActivityQuery",value:function postAnalyticsUsersActivityQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersActivityQuery';}return this.apiClient.callApi('/api/v2/analytics/users/activity/query','POST',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user aggregates asynchronously
	 * 
	 * @param {Object} body query
	 * postAnalyticsUsersAggregatesJobs is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postAnalyticsUsersAggregatesJobs",value:function postAnalyticsUsersAggregatesJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersAggregatesJobs';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user aggregates
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersAggregatesQuery",value:function postAnalyticsUsersAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersAggregatesQuery';}return this.apiClient.callApi('/api/v2/analytics/users/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user details asynchronously
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersDetailsJobs",value:function postAnalyticsUsersDetailsJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersDetailsJobs';}return this.apiClient.callApi('/api/v2/analytics/users/details/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user details
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersDetailsQuery",value:function postAnalyticsUsersDetailsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersDetailsQuery';}return this.apiClient.callApi('/api/v2/analytics/users/details/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query for user observations
	 * 
	 * @param {Object} body query
	 */},{key:"postAnalyticsUsersObservationsQuery",value:function postAnalyticsUsersObservationsQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAnalyticsUsersObservationsQuery';}return this.apiClient.callApi('/api/v2/analytics/users/observations/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk-grant roles and divisions to a subject.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectBulkadd",value:function postAuthorizationSubjectBulkadd(subjectId,body,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkadd';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkadd';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkadd','POST',{'subjectId':subjectId},{'subjectType':opts['subjectType']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Bulk-remove grants from a subject.
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 */},{key:"postAuthorizationSubjectBulkremove",value:function postAuthorizationSubjectBulkremove(subjectId,body){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkremove';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkremove';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkremove','POST',{'subjectId':subjectId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace subject's roles and divisions with the exact list supplied in the request.
	 * This operation will not remove grants that are inherited from group membership. It will only set the grants directly applied to the subject.
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {Object} body Pairs of role and division IDs
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectBulkreplace",value:function postAuthorizationSubjectBulkreplace(subjectId,body,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectBulkreplace';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postAuthorizationSubjectBulkreplace';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/bulkreplace','POST',{'subjectId':subjectId},{'subjectType':opts['subjectType']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Make a grant of a role in a division
	 * 
	 * @param {String} subjectId Subject ID (user or group)
	 * @param {String} divisionId the id of the division to which to make the grant
	 * @param {String} roleId the id of the role to grant
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.subjectType what the type of the subject is: PC_GROUP, PC_USER or PC_OAUTH_CLIENT (note: for cross-org authorization, please use the Organization Authorization endpoints) (default to PC_USER)
	 */},{key:"postAuthorizationSubjectDivisionRole",value:function postAuthorizationSubjectDivisionRole(subjectId,divisionId,roleId,opts){opts=opts||{};// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling postAuthorizationSubjectDivisionRole';}// verify the required parameter 'divisionId' is set
if(divisionId===undefined||divisionId===null){throw'Missing the required parameter "divisionId" when calling postAuthorizationSubjectDivisionRole';}// verify the required parameter 'roleId' is set
if(roleId===undefined||roleId===null){throw'Missing the required parameter "roleId" when calling postAuthorizationSubjectDivisionRole';}return this.apiClient.callApi('/api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}','POST',{'subjectId':subjectId,'divisionId':divisionId,'roleId':roleId},{'subjectType':opts['subjectType']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create mapping between external identifier and user. Limit 100 per entity.
	 * Authority Name and External key are case sensitive.
	 * @param {String} userId User ID
	 * @param {Object} body 
	 */},{key:"postUserExternalid",value:function postUserExternalid(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserExternalid';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserExternalid';}return this.apiClient.callApi('/api/v2/users/{userId}/externalid','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send an activation email to the user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.force Resend the invitation even if one is already outstanding (default to false)
	 */},{key:"postUserInvite",value:function postUserInvite(userId,opts){opts=opts||{};// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserInvite';}return this.apiClient.callApi('/api/v2/users/{userId}/invite','POST',{'userId':userId},{'force':opts['force']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Change a users password
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Password
	 */},{key:"postUserPassword",value:function postUserPassword(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserPassword';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserPassword';}return this.apiClient.callApi('/api/v2/users/{userId}/password','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add routing language to user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Language
	 */},{key:"postUserRoutinglanguages",value:function postUserRoutinglanguages(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserRoutinglanguages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserRoutinglanguages';}return this.apiClient.callApi('/api/v2/users/{userId}/routinglanguages','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add routing skill to user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Skill
	 */},{key:"postUserRoutingskills",value:function postUserRoutingskills(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postUserRoutingskills';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUserRoutingskills';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills','POST',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create user
	 * If user creation is successful but the provided password is invalid or configuration fails, POST api/v2/users/{userId}/password can be used to re-attempt password configuration.
	 * @param {Object} body User
	 */},{key:"postUsers",value:function postUsers(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsers';}return this.apiClient.callApi('/api/v2/users','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieve aggregated development activity data
	 * Results are filtered based on the applicable permissions.
	 * @param {Object} body Aggregate Request
	 */},{key:"postUsersDevelopmentActivitiesAggregatesQuery",value:function postUsersDevelopmentActivitiesAggregatesQuery(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersDevelopmentActivitiesAggregatesQuery';}return this.apiClient.callApi('/api/v2/users/development/activities/aggregates/query','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Change your password
	 * 
	 * @param {Object} body Password
	 */},{key:"postUsersMePassword",value:function postUsersMePassword(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersMePassword';}return this.apiClient.callApi('/api/v2/users/me/password','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postUsersSearch",value:function postUsersSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearch';}return this.apiClient.callApi('/api/v2/users/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users as conversation targets
	 * 
	 * @param {Object} body Search request options
	 * postUsersSearchConversationTarget is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postUsersSearchConversationTarget",value:function postUsersSearchConversationTarget(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchConversationTarget';}return this.apiClient.callApi('/api/v2/users/search/conversation/target','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search manage queue member
	 * 
	 * @param {Object} body Search request options
	 * postUsersSearchQueuemembersManage is a preview method and is subject to both breaking and non-breaking changes at any time without notice
	 */},{key:"postUsersSearchQueuemembersManage",value:function postUsersSearchQueuemembersManage(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchQueuemembersManage';}return this.apiClient.callApi('/api/v2/users/search/queuemembers/manage','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search users assigned to teams
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postUsersSearchTeamsAssign",value:function postUsersSearchTeamsAssign(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postUsersSearchTeamsAssign';}return this.apiClient.callApi('/api/v2/users/search/teams/assign','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the user's max utilization settings.  Include only those media types requiring custom configuration.
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body utilization
	 */},{key:"putRoutingUserUtilization",value:function putRoutingUserUtilization(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putRoutingUserUtilization';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putRoutingUserUtilization';}return this.apiClient.callApi('/api/v2/routing/users/{userId}/utilization','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a user's CallForwarding
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Call forwarding
	 */},{key:"putUserCallforwarding",value:function putUserCallforwarding(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserCallforwarding';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserCallforwarding';}return this.apiClient.callApi('/api/v2/users/{userId}/callforwarding','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an OutOfOffice
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body The updated OutOffOffice
	 */},{key:"putUserOutofoffice",value:function putUserOutofoffice(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserOutofoffice';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserOutofoffice';}return this.apiClient.callApi('/api/v2/users/{userId}/outofoffice','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update profile skills for a user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<String>} body Skills
	 */},{key:"putUserProfileskills",value:function putUserProfileskills(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserProfileskills';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserProfileskills';}return this.apiClient.callApi('/api/v2/users/{userId}/profileskills','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sets the user's roles
	 * 
	 * @param {String} subjectId User ID
	 * @param {Array.<String>} body List of roles
	 */},{key:"putUserRoles",value:function putUserRoles(subjectId,body){// verify the required parameter 'subjectId' is set
if(subjectId===undefined||subjectId===null){throw'Missing the required parameter "subjectId" when calling putUserRoles';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoles';}return this.apiClient.callApi('/api/v2/users/{subjectId}/roles','PUT',{'subjectId':subjectId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update routing skill proficiency or state.
	 * 
	 * @param {String} userId User ID
	 * @param {String} skillId skillId
	 * @param {Object} body Skill
	 */},{key:"putUserRoutingskill",value:function putUserRoutingskill(userId,skillId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserRoutingskill';}// verify the required parameter 'skillId' is set
if(skillId===undefined||skillId===null){throw'Missing the required parameter "skillId" when calling putUserRoutingskill';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoutingskill';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/{skillId}','PUT',{'userId':userId,'skillId':skillId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Replace all routing skills assigned to a user
	 * 
	 * @param {String} userId User ID
	 * @param {Array.<Object>} body Skill
	 */},{key:"putUserRoutingskillsBulk",value:function putUserRoutingskillsBulk(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserRoutingskillsBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoutingskillsBulk';}return this.apiClient.callApi('/api/v2/users/{userId}/routingskills/bulk','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the routing status of a user
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body Routing Status
	 */},{key:"putUserRoutingstatus",value:function putUserRoutingstatus(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserRoutingstatus';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserRoutingstatus';}return this.apiClient.callApi('/api/v2/users/{userId}/routingstatus','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update user state information.
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body User
	 */},{key:"putUserState",value:function putUserState(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserState';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserState';}return this.apiClient.callApi('/api/v2/users/{userId}/state','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set associated station
	 * 
	 * @param {String} userId User ID
	 * @param {String} stationId stationId
	 */},{key:"putUserStationAssociatedstationStationId",value:function putUserStationAssociatedstationStationId(userId,stationId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserStationAssociatedstationStationId';}// verify the required parameter 'stationId' is set
if(stationId===undefined||stationId===null){throw'Missing the required parameter "stationId" when calling putUserStationAssociatedstationStationId';}return this.apiClient.callApi('/api/v2/users/{userId}/station/associatedstation/{stationId}','PUT',{'userId':userId,'stationId':stationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set default station
	 * 
	 * @param {String} userId User ID
	 * @param {String} stationId stationId
	 */},{key:"putUserStationDefaultstationStationId",value:function putUserStationDefaultstationStationId(userId,stationId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserStationDefaultstationStationId';}// verify the required parameter 'stationId' is set
if(stationId===undefined||stationId===null){throw'Missing the required parameter "stationId" when calling putUserStationDefaultstationStationId';}return this.apiClient.callApi('/api/v2/users/{userId}/station/defaultstation/{stationId}','PUT',{'userId':userId,'stationId':stationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a verifier
	 * 
	 * @param {String} userId User ID
	 * @param {String} verifierId Verifier ID
	 * @param {Object} body Verifier Update
	 */},{key:"putUserVerifier",value:function putUserVerifier(userId,verifierId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putUserVerifier';}// verify the required parameter 'verifierId' is set
if(verifierId===undefined||verifierId===null){throw'Missing the required parameter "verifierId" when calling putUserVerifier';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putUserVerifier';}return this.apiClient.callApi('/api/v2/users/{userId}/verifiers/{verifierId}','PUT',{'userId':userId,'verifierId':verifierId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return UsersApi;}();var UtilitiesApi=/*#__PURE__*/function(){/**
	 * Utilities service.
	 * @module purecloud-platform-client-v2/api/UtilitiesApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new UtilitiesApi. 
	 * @alias module:purecloud-platform-client-v2/api/UtilitiesApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function UtilitiesApi(apiClient){_classCallCheck(this,UtilitiesApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get the current system date/time
	 * 
	 */_createClass(UtilitiesApi,[{key:"getDate",value:function getDate(){return this.apiClient.callApi('/api/v2/date','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get public ip address ranges for Genesys Cloud
	 * 
	 */},{key:"getIpranges",value:function getIpranges(){return this.apiClient.callApi('/api/v2/ipranges','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get time zones list
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getTimezones",value:function getTimezones(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/timezones','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Returns the information about an X509 PEM encoded certificate or certificate chain.
	 * 
	 * @param {Object} body Certificate
	 */},{key:"postCertificateDetails",value:function postCertificateDetails(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postCertificateDetails';}return this.apiClient.callApi('/api/v2/certificate/details','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return UtilitiesApi;}();var VoicemailApi=/*#__PURE__*/function(){/**
	 * Voicemail service.
	 * @module purecloud-platform-client-v2/api/VoicemailApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new VoicemailApi. 
	 * @alias module:purecloud-platform-client-v2/api/VoicemailApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function VoicemailApi(apiClient){_classCallCheck(this,VoicemailApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a voicemail message.
	 * A user voicemail can only be deleted by its associated user. A group voicemail can only be deleted by a user that is a member of the group. A queue voicemail can only be deleted by a user with the acd voicemail delete permission.
	 * @param {String} messageId Message ID
	 */_createClass(VoicemailApi,[{key:"deleteVoicemailMessage",value:function deleteVoicemailMessage(messageId){// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling deleteVoicemailMessage';}return this.apiClient.callApi('/api/v2/voicemail/messages/{messageId}','DELETE',{'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete all voicemail messages
	 * 
	 */},{key:"deleteVoicemailMessages",value:function deleteVoicemailMessages(){return this.apiClient.callApi('/api/v2/voicemail/messages','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the group's mailbox information
	 * 
	 * @param {String} groupId groupId
	 */},{key:"getVoicemailGroupMailbox",value:function getVoicemailGroupMailbox(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getVoicemailGroupMailbox';}return this.apiClient.callApi('/api/v2/voicemail/groups/{groupId}/mailbox','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List voicemail messages
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getVoicemailGroupMessages",value:function getVoicemailGroupMessages(groupId,opts){opts=opts||{};// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getVoicemailGroupMessages';}return this.apiClient.callApi('/api/v2/voicemail/groups/{groupId}/messages','GET',{'groupId':groupId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a group's voicemail policy
	 * 
	 * @param {String} groupId Group ID
	 */},{key:"getVoicemailGroupPolicy",value:function getVoicemailGroupPolicy(groupId){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling getVoicemailGroupPolicy';}return this.apiClient.callApi('/api/v2/voicemail/groups/{groupId}/policy','GET',{'groupId':groupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the current user's mailbox information
	 * 
	 */},{key:"getVoicemailMailbox",value:function getVoicemailMailbox(){return this.apiClient.callApi('/api/v2/voicemail/mailbox','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the current user's mailbox information
	 * 
	 */},{key:"getVoicemailMeMailbox",value:function getVoicemailMeMailbox(){return this.apiClient.callApi('/api/v2/voicemail/me/mailbox','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List voicemail messages
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getVoicemailMeMessages",value:function getVoicemailMeMessages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/voicemail/me/messages','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the current user's voicemail policy
	 * 
	 */},{key:"getVoicemailMePolicy",value:function getVoicemailMePolicy(){return this.apiClient.callApi('/api/v2/voicemail/me/policy','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a voicemail message
	 * 
	 * @param {String} messageId Message ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand If the caller is a known user, which fields, if any, to expand
	 */},{key:"getVoicemailMessage",value:function getVoicemailMessage(messageId,opts){opts=opts||{};// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getVoicemailMessage';}return this.apiClient.callApi('/api/v2/voicemail/messages/{messageId}','GET',{'messageId':messageId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get media playback URI for this voicemail message
	 * 
	 * @param {String} messageId Message ID
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.formatId The desired media format. (default to WEBM)
	 */},{key:"getVoicemailMessageMedia",value:function getVoicemailMessageMedia(messageId,opts){opts=opts||{};// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getVoicemailMessageMedia';}return this.apiClient.callApi('/api/v2/voicemail/messages/{messageId}/media','GET',{'messageId':messageId},{'formatId':opts['formatId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List voicemail messages
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.ids An optional comma separated list of VoicemailMessage ids
	 * @param {Array.<String>} opts.expand If the caller is a known user, which fields, if any, to expand
	 */},{key:"getVoicemailMessages",value:function getVoicemailMessages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/voicemail/messages','GET',{},{'ids':opts['ids'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a policy
	 * 
	 */},{key:"getVoicemailPolicy",value:function getVoicemailPolicy(){return this.apiClient.callApi('/api/v2/voicemail/policy','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List voicemail messages
	 * 
	 * @param {String} queueId Queue ID
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */},{key:"getVoicemailQueueMessages",value:function getVoicemailQueueMessages(queueId,opts){opts=opts||{};// verify the required parameter 'queueId' is set
if(queueId===undefined||queueId===null){throw'Missing the required parameter "queueId" when calling getVoicemailQueueMessages';}return this.apiClient.callApi('/api/v2/voicemail/queues/{queueId}/messages','GET',{'queueId':queueId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search voicemails using the q64 value returned from a previous search
	 * 
	 * @param {String} q64 q64
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand expand
	 */},{key:"getVoicemailSearch",value:function getVoicemailSearch(q64,opts){opts=opts||{};// verify the required parameter 'q64' is set
if(q64===undefined||q64===null){throw'Missing the required parameter "q64" when calling getVoicemailSearch';}return this.apiClient.callApi('/api/v2/voicemail/search','GET',{},{'q64':q64,'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a user's voicemail policy
	 * 
	 * @param {String} userId User ID
	 */},{key:"getVoicemailUserpolicy",value:function getVoicemailUserpolicy(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getVoicemailUserpolicy';}return this.apiClient.callApi('/api/v2/voicemail/userpolicies/{userId}','GET',{'userId':userId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a group's voicemail policy
	 * 
	 * @param {String} groupId Group ID
	 * @param {Object} body The group's voicemail policy
	 */},{key:"patchVoicemailGroupPolicy",value:function patchVoicemailGroupPolicy(groupId,body){// verify the required parameter 'groupId' is set
if(groupId===undefined||groupId===null){throw'Missing the required parameter "groupId" when calling patchVoicemailGroupPolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchVoicemailGroupPolicy';}return this.apiClient.callApi('/api/v2/voicemail/groups/{groupId}/policy','PATCH',{'groupId':groupId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the current user's voicemail policy
	 * 
	 * @param {Object} body The user's voicemail policy
	 */},{key:"patchVoicemailMePolicy",value:function patchVoicemailMePolicy(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchVoicemailMePolicy';}return this.apiClient.callApi('/api/v2/voicemail/me/policy','PATCH',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a voicemail message
	 * A user voicemail can only be modified by its associated user. A group voicemail can only be modified by a user that is a member of the group. A queue voicemail can only be modified by a participant of the conversation the voicemail is associated with.
	 * @param {String} messageId Message ID
	 * @param {Object} body VoicemailMessage
	 */},{key:"patchVoicemailMessage",value:function patchVoicemailMessage(messageId,body){// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling patchVoicemailMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchVoicemailMessage';}return this.apiClient.callApi('/api/v2/voicemail/messages/{messageId}','PATCH',{'messageId':messageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a user's voicemail policy
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body The user's voicemail policy
	 */},{key:"patchVoicemailUserpolicy",value:function patchVoicemailUserpolicy(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchVoicemailUserpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchVoicemailUserpolicy';}return this.apiClient.callApi('/api/v2/voicemail/userpolicies/{userId}','PATCH',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Copy a voicemail message to a user or group
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postVoicemailMessages",value:function postVoicemailMessages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/voicemail/messages','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search voicemails
	 * 
	 * @param {Object} body Search request options
	 */},{key:"postVoicemailSearch",value:function postVoicemailSearch(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postVoicemailSearch';}return this.apiClient.callApi('/api/v2/voicemail/search','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a voicemail message
	 * A user voicemail can only be modified by its associated user. A group voicemail can only be modified by a user that is a member of the group. A queue voicemail can only be modified by a participant of the conversation the voicemail is associated with.
	 * @param {String} messageId Message ID
	 * @param {Object} body VoicemailMessage
	 */},{key:"putVoicemailMessage",value:function putVoicemailMessage(messageId,body){// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling putVoicemailMessage';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putVoicemailMessage';}return this.apiClient.callApi('/api/v2/voicemail/messages/{messageId}','PUT',{'messageId':messageId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a policy
	 * 
	 * @param {Object} body Policy
	 */},{key:"putVoicemailPolicy",value:function putVoicemailPolicy(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putVoicemailPolicy';}return this.apiClient.callApi('/api/v2/voicemail/policy','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a user's voicemail policy
	 * 
	 * @param {String} userId User ID
	 * @param {Object} body The user's voicemail policy
	 */},{key:"putVoicemailUserpolicy",value:function putVoicemailUserpolicy(userId,body){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling putVoicemailUserpolicy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putVoicemailUserpolicy';}return this.apiClient.callApi('/api/v2/voicemail/userpolicies/{userId}','PUT',{'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return VoicemailApi;}();var WebChatApi=/*#__PURE__*/function(){/**
	 * WebChat service.
	 * @module purecloud-platform-client-v2/api/WebChatApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new WebChatApi. 
	 * @alias module:purecloud-platform-client-v2/api/WebChatApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function WebChatApi(apiClient){_classCallCheck(this,WebChatApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a WebChat deployment
	 * 
	 * @param {String} deploymentId Deployment Id
	 * @deprecated
	 */_createClass(WebChatApi,[{key:"deleteWebchatDeployment",value:function deleteWebchatDeployment(deploymentId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling deleteWebchatDeployment';}return this.apiClient.callApi('/api/v2/webchat/deployments/{deploymentId}','DELETE',{'deploymentId':deploymentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove a member from a chat conversation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} memberId memberId
	 */},{key:"deleteWebchatGuestConversationMember",value:function deleteWebchatGuestConversationMember(conversationId,memberId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling deleteWebchatGuestConversationMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling deleteWebchatGuestConversationMember';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}','DELETE',{'conversationId':conversationId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Remove WebChat deployment settings
	 * 
	 */},{key:"deleteWebchatSettings",value:function deleteWebchatSettings(){return this.apiClient.callApi('/api/v2/webchat/settings','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a WebChat deployment
	 * 
	 * @param {String} deploymentId Deployment Id
	 * @deprecated
	 */},{key:"getWebchatDeployment",value:function getWebchatDeployment(deploymentId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getWebchatDeployment';}return this.apiClient.callApi('/api/v2/webchat/deployments/{deploymentId}','GET',{'deploymentId':deploymentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List WebChat deployments
	 * 
	 * @deprecated
	 */},{key:"getWebchatDeployments",value:function getWebchatDeployments(){return this.apiClient.callApi('/api/v2/webchat/deployments','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a media request in the conversation
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} mediaRequestId mediaRequestId
	 */},{key:"getWebchatGuestConversationMediarequest",value:function getWebchatGuestConversationMediarequest(conversationId,mediaRequestId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMediarequest';}// verify the required parameter 'mediaRequestId' is set
if(mediaRequestId===undefined||mediaRequestId===null){throw'Missing the required parameter "mediaRequestId" when calling getWebchatGuestConversationMediarequest';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/mediarequests/{mediaRequestId}','GET',{'conversationId':conversationId,'mediaRequestId':mediaRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all media requests to the guest in the conversation
	 * 
	 * @param {String} conversationId conversationId
	 */},{key:"getWebchatGuestConversationMediarequests",value:function getWebchatGuestConversationMediarequests(conversationId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMediarequests';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/mediarequests','GET',{'conversationId':conversationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a web chat conversation member
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} memberId memberId
	 */},{key:"getWebchatGuestConversationMember",value:function getWebchatGuestConversationMember(conversationId,memberId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMember';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling getWebchatGuestConversationMember';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}','GET',{'conversationId':conversationId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the members of a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize The number of entries to return per page, or omitted for the default. (default to 25)
	 * @param {Number} opts.pageNumber The page number to return, or omitted for the first page. (default to 1)
	 * @param {Boolean} opts.excludeDisconnectedMembers If true, the results will not contain members who have a DISCONNECTED state. (default to false)
	 */},{key:"getWebchatGuestConversationMembers",value:function getWebchatGuestConversationMembers(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMembers';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/members','GET',{'conversationId':conversationId},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'excludeDisconnectedMembers':opts['excludeDisconnectedMembers']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a web chat conversation message
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} messageId messageId
	 */},{key:"getWebchatGuestConversationMessage",value:function getWebchatGuestConversationMessage(conversationId,messageId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMessage';}// verify the required parameter 'messageId' is set
if(messageId===undefined||messageId===null){throw'Missing the required parameter "messageId" when calling getWebchatGuestConversationMessage';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/messages/{messageId}','GET',{'conversationId':conversationId,'messageId':messageId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the messages of a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.after If available, get the messages chronologically after the id of this message
	 * @param {String} opts.before If available, get the messages chronologically before the id of this message
	 * @param {Object} opts.sortOrder Sort order (default to ascending)
	 * @param {Number} opts.maxResults Limit the returned number of messages, up to a maximum of 100 (default to 100)
	 */},{key:"getWebchatGuestConversationMessages",value:function getWebchatGuestConversationMessages(conversationId,opts){opts=opts||{};// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMessages';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/messages','GET',{'conversationId':conversationId},{'after':opts['after'],'before':opts['before'],'sortOrder':opts['sortOrder'],'maxResults':opts['maxResults']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get WebChat deployment settings
	 * 
	 */},{key:"getWebchatSettings",value:function getWebchatSettings(){return this.apiClient.callApi('/api/v2/webchat/settings','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a media request in the conversation, setting the state to ACCEPTED/DECLINED/ERRORED
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} mediaRequestId mediaRequestId
	 * @param {Object} body Request
	 */},{key:"patchWebchatGuestConversationMediarequest",value:function patchWebchatGuestConversationMediarequest(conversationId,mediaRequestId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling patchWebchatGuestConversationMediarequest';}// verify the required parameter 'mediaRequestId' is set
if(mediaRequestId===undefined||mediaRequestId===null){throw'Missing the required parameter "mediaRequestId" when calling patchWebchatGuestConversationMediarequest';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchWebchatGuestConversationMediarequest';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/mediarequests/{mediaRequestId}','PATCH',{'conversationId':conversationId,'mediaRequestId':mediaRequestId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create WebChat deployment
	 * 
	 * @param {Object} body Deployment
	 * @deprecated
	 */},{key:"postWebchatDeployments",value:function postWebchatDeployments(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWebchatDeployments';}return this.apiClient.callApi('/api/v2/webchat/deployments','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a message in a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} memberId memberId
	 * @param {Object} body Message
	 */},{key:"postWebchatGuestConversationMemberMessages",value:function postWebchatGuestConversationMemberMessages(conversationId,memberId,body){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postWebchatGuestConversationMemberMessages';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling postWebchatGuestConversationMemberMessages';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWebchatGuestConversationMemberMessages';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}/messages','POST',{'conversationId':conversationId,'memberId':memberId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Send a typing-indicator in a chat conversation.
	 * 
	 * @param {String} conversationId conversationId
	 * @param {String} memberId memberId
	 */},{key:"postWebchatGuestConversationMemberTyping",value:function postWebchatGuestConversationMemberTyping(conversationId,memberId){// verify the required parameter 'conversationId' is set
if(conversationId===undefined||conversationId===null){throw'Missing the required parameter "conversationId" when calling postWebchatGuestConversationMemberTyping';}// verify the required parameter 'memberId' is set
if(memberId===undefined||memberId===null){throw'Missing the required parameter "memberId" when calling postWebchatGuestConversationMemberTyping';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}/typing','POST',{'conversationId':conversationId,'memberId':memberId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create an ACD chat conversation from an external customer.
	 * This endpoint will create a new ACD Chat conversation under the specified Chat Deployment.  The conversation will begin with a guest member in it (with a role=CUSTOMER) according to the customer information that is supplied. If the guest member is authenticated, the memberAuthToken field should include his JWT as generated by the POST /api/v2/signeddata resource; if the guest member is anonymous (and the Deployment permits it) this field can be omitted.  The returned data includes the IDs of the conversation created, along with a newly-create JWT token that you can supply to all future endpoints as authentication to perform operations against that conversation. After successfully creating a conversation, you should connect a websocket to the event stream named in the eventStreamUri field of the response; the conversation is not routed until the event stream is attached.
	 * @param {Object} body CreateConversationRequest
	 */},{key:"postWebchatGuestConversations",value:function postWebchatGuestConversations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWebchatGuestConversations';}return this.apiClient.callApi('/api/v2/webchat/guest/conversations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a WebChat deployment
	 * 
	 * @param {String} deploymentId Deployment Id
	 * @param {Object} body Deployment
	 * @deprecated
	 */},{key:"putWebchatDeployment",value:function putWebchatDeployment(deploymentId,body){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling putWebchatDeployment';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putWebchatDeployment';}return this.apiClient.callApi('/api/v2/webchat/deployments/{deploymentId}','PUT',{'deploymentId':deploymentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update WebChat deployment settings
	 * 
	 * @param {Object} body webChatSettings
	 */},{key:"putWebchatSettings",value:function putWebchatSettings(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putWebchatSettings';}return this.apiClient.callApi('/api/v2/webchat/settings','PUT',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return WebChatApi;}();var WebDeploymentsApi=/*#__PURE__*/function(){/**
	 * WebDeployments service.
	 * @module purecloud-platform-client-v2/api/WebDeploymentsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new WebDeploymentsApi. 
	 * @alias module:purecloud-platform-client-v2/api/WebDeploymentsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function WebDeploymentsApi(apiClient){_classCallCheck(this,WebDeploymentsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete all versions of a configuration
	 * 
	 * @param {String} configurationId The configuration version ID
	 */_createClass(WebDeploymentsApi,[{key:"deleteWebdeploymentsConfiguration",value:function deleteWebdeploymentsConfiguration(configurationId){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling deleteWebdeploymentsConfiguration';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}','DELETE',{'configurationId':configurationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a deployment
	 * 
	 * @param {String} deploymentId The deployment ID
	 */},{key:"deleteWebdeploymentsDeployment",value:function deleteWebdeploymentsDeployment(deploymentId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling deleteWebdeploymentsDeployment';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}','DELETE',{'deploymentId':deploymentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes a cobrowse session
	 * 
	 * @param {String} deploymentId WebMessaging deployment ID
	 * @param {String} sessionId Cobrowse session id or join code
	 */},{key:"deleteWebdeploymentsDeploymentCobrowseSessionId",value:function deleteWebdeploymentsDeploymentCobrowseSessionId(deploymentId,sessionId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling deleteWebdeploymentsDeploymentCobrowseSessionId';}// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling deleteWebdeploymentsDeploymentCobrowseSessionId';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}','DELETE',{'deploymentId':deploymentId,'sessionId':sessionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Invalidate JWT
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.xJourneySessionId The Customer's journey sessionId.
	 * @param {String} opts.xJourneySessionType The Customer's journey session type.
	 */},{key:"deleteWebdeploymentsTokenRevoke",value:function deleteWebdeploymentsTokenRevoke(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/webdeployments/token/revoke','DELETE',{},{},{'X-Journey-Session-Id':opts['xJourneySessionId'],'X-Journey-Session-Type':opts['xJourneySessionType']},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a configuration version
	 * 
	 * @param {String} configurationId The configuration version ID
	 * @param {String} versionId The version of the configuration to get
	 */},{key:"getWebdeploymentsConfigurationVersion",value:function getWebdeploymentsConfigurationVersion(configurationId,versionId){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling getWebdeploymentsConfigurationVersion';}// verify the required parameter 'versionId' is set
if(versionId===undefined||versionId===null){throw'Missing the required parameter "versionId" when calling getWebdeploymentsConfigurationVersion';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}/versions/{versionId}','GET',{'configurationId':configurationId,'versionId':versionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the versions of a configuration
	 * This returns the 50 most recent versions for this configuration
	 * @param {String} configurationId The configuration version ID
	 */},{key:"getWebdeploymentsConfigurationVersions",value:function getWebdeploymentsConfigurationVersions(configurationId){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling getWebdeploymentsConfigurationVersions';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}/versions','GET',{'configurationId':configurationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the configuration draft
	 * 
	 * @param {String} configurationId The configuration version ID
	 */},{key:"getWebdeploymentsConfigurationVersionsDraft",value:function getWebdeploymentsConfigurationVersionsDraft(configurationId){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling getWebdeploymentsConfigurationVersionsDraft';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}/versions/draft','GET',{'configurationId':configurationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * View configuration drafts
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.showOnlyPublished Get only configuration drafts with published versions (default to false)
	 */},{key:"getWebdeploymentsConfigurations",value:function getWebdeploymentsConfigurations(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/webdeployments/configurations','GET',{},{'showOnlyPublished':opts['showOnlyPublished']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a deployment
	 * 
	 * @param {String} deploymentId The deployment ID
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected. 
	 */},{key:"getWebdeploymentsDeployment",value:function getWebdeploymentsDeployment(deploymentId,opts){opts=opts||{};// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getWebdeploymentsDeployment';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}','GET',{'deploymentId':deploymentId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves a cobrowse session
	 * 
	 * @param {String} deploymentId WebMessaging deployment ID
	 * @param {String} sessionId Cobrowse session id or join code
	 */},{key:"getWebdeploymentsDeploymentCobrowseSessionId",value:function getWebdeploymentsDeploymentCobrowseSessionId(deploymentId,sessionId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getWebdeploymentsDeploymentCobrowseSessionId';}// verify the required parameter 'sessionId' is set
if(sessionId===undefined||sessionId===null){throw'Missing the required parameter "sessionId" when calling getWebdeploymentsDeploymentCobrowseSessionId';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}/cobrowse/{sessionId}','GET',{'deploymentId':deploymentId,'sessionId':sessionId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get active configuration for a given deployment
	 * 
	 * @param {String} deploymentId The deployment ID
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.type Get active configuration on a deployment
	 * @param {Array.<String>} opts.expand Expand instructions for the return value
	 */},{key:"getWebdeploymentsDeploymentConfigurations",value:function getWebdeploymentsDeploymentConfigurations(deploymentId,opts){opts=opts||{};// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getWebdeploymentsDeploymentConfigurations';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}/configurations','GET',{'deploymentId':deploymentId},{'type':opts['type'],'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get deployments
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand The specified entity attributes will be filled. Comma separated values expected.
	 */},{key:"getWebdeploymentsDeployments",value:function getWebdeploymentsDeployments(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/webdeployments/deployments','GET',{},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Publish the configuration draft and create a new version
	 * 
	 * @param {String} configurationId The configuration version ID
	 */},{key:"postWebdeploymentsConfigurationVersionsDraftPublish",value:function postWebdeploymentsConfigurationVersionsDraftPublish(configurationId){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling postWebdeploymentsConfigurationVersionsDraftPublish';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}/versions/draft/publish','POST',{'configurationId':configurationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a configuration draft
	 * 
	 * @param {Object} configurationVersion 
	 */},{key:"postWebdeploymentsConfigurations",value:function postWebdeploymentsConfigurations(configurationVersion){// verify the required parameter 'configurationVersion' is set
if(configurationVersion===undefined||configurationVersion===null){throw'Missing the required parameter "configurationVersion" when calling postWebdeploymentsConfigurations';}return this.apiClient.callApi('/api/v2/webdeployments/configurations','POST',{},{},{},{},configurationVersion,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a deployment
	 * 
	 * @param {Object} deployment 
	 */},{key:"postWebdeploymentsDeployments",value:function postWebdeploymentsDeployments(deployment){// verify the required parameter 'deployment' is set
if(deployment===undefined||deployment===null){throw'Missing the required parameter "deployment" when calling postWebdeploymentsDeployments';}return this.apiClient.callApi('/api/v2/webdeployments/deployments','POST',{},{},{},{},deployment,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Exchange an oAuth code (obtained using the Authorization Code Flow) for a JWT that can be used by webdeployments.
	 * 
	 * @param {Object} body webDeploymentsOAuthExchangeRequest
	 */},{key:"postWebdeploymentsTokenOauthcodegrantjwtexchange",value:function postWebdeploymentsTokenOauthcodegrantjwtexchange(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWebdeploymentsTokenOauthcodegrantjwtexchange';}return this.apiClient.callApi('/api/v2/webdeployments/token/oauthcodegrantjwtexchange','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Refresh a JWT.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body 
	 */},{key:"postWebdeploymentsTokenRefresh",value:function postWebdeploymentsTokenRefresh(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/webdeployments/token/refresh','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the configuration draft
	 * 
	 * @param {String} configurationId The configuration version ID
	 * @param {Object} configurationVersion 
	 */},{key:"putWebdeploymentsConfigurationVersionsDraft",value:function putWebdeploymentsConfigurationVersionsDraft(configurationId,configurationVersion){// verify the required parameter 'configurationId' is set
if(configurationId===undefined||configurationId===null){throw'Missing the required parameter "configurationId" when calling putWebdeploymentsConfigurationVersionsDraft';}// verify the required parameter 'configurationVersion' is set
if(configurationVersion===undefined||configurationVersion===null){throw'Missing the required parameter "configurationVersion" when calling putWebdeploymentsConfigurationVersionsDraft';}return this.apiClient.callApi('/api/v2/webdeployments/configurations/{configurationId}/versions/draft','PUT',{'configurationId':configurationId},{},{},{},configurationVersion,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a deployment
	 * 
	 * @param {String} deploymentId The deployment ID
	 * @param {Object} deployment 
	 */},{key:"putWebdeploymentsDeployment",value:function putWebdeploymentsDeployment(deploymentId,deployment){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling putWebdeploymentsDeployment';}// verify the required parameter 'deployment' is set
if(deployment===undefined||deployment===null){throw'Missing the required parameter "deployment" when calling putWebdeploymentsDeployment';}return this.apiClient.callApi('/api/v2/webdeployments/deployments/{deploymentId}','PUT',{'deploymentId':deploymentId},{},{},{},deployment,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return WebDeploymentsApi;}();var WebMessagingApi=/*#__PURE__*/function(){/**
	 * WebMessaging service.
	 * @module purecloud-platform-client-v2/api/WebMessagingApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new WebMessagingApi. 
	 * @alias module:purecloud-platform-client-v2/api/WebMessagingApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function WebMessagingApi(apiClient){_classCallCheck(this,WebMessagingApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Get the messages for a web messaging session.
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Page size (default to 25)
	 * @param {Number} opts.pageNumber Page number (default to 1)
	 */_createClass(WebMessagingApi,[{key:"getWebmessagingMessages",value:function getWebmessagingMessages(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/webmessaging/messages','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return WebMessagingApi;}();var WidgetsApi=/*#__PURE__*/function(){/**
	 * Widgets service.
	 * @module purecloud-platform-client-v2/api/WidgetsApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new WidgetsApi. 
	 * @alias module:purecloud-platform-client-v2/api/WidgetsApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function WidgetsApi(apiClient){_classCallCheck(this,WidgetsApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete a Widget deployment
	 * 
	 * @param {String} deploymentId Widget Config Id
	 */_createClass(WidgetsApi,[{key:"deleteWidgetsDeployment",value:function deleteWidgetsDeployment(deploymentId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling deleteWidgetsDeployment';}return this.apiClient.callApi('/api/v2/widgets/deployments/{deploymentId}','DELETE',{'deploymentId':deploymentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a Widget deployment
	 * 
	 * @param {String} deploymentId Widget Config Id
	 */},{key:"getWidgetsDeployment",value:function getWidgetsDeployment(deploymentId){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling getWidgetsDeployment';}return this.apiClient.callApi('/api/v2/widgets/deployments/{deploymentId}','GET',{'deploymentId':deploymentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * List Widget deployments
	 * 
	 */},{key:"getWidgetsDeployments",value:function getWidgetsDeployments(){return this.apiClient.callApi('/api/v2/widgets/deployments','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create Widget deployment
	 * 
	 * @param {Object} body Deployment
	 */},{key:"postWidgetsDeployments",value:function postWidgetsDeployments(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWidgetsDeployments';}return this.apiClient.callApi('/api/v2/widgets/deployments','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a Widget deployment
	 * 
	 * @param {String} deploymentId Widget Config Id
	 * @param {Object} body Deployment
	 */},{key:"putWidgetsDeployment",value:function putWidgetsDeployment(deploymentId,body){// verify the required parameter 'deploymentId' is set
if(deploymentId===undefined||deploymentId===null){throw'Missing the required parameter "deploymentId" when calling putWidgetsDeployment';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putWidgetsDeployment';}return this.apiClient.callApi('/api/v2/widgets/deployments/{deploymentId}','PUT',{'deploymentId':deploymentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}}]);return WidgetsApi;}();var WorkforceManagementApi=/*#__PURE__*/function(){/**
	 * WorkforceManagement service.
	 * @module purecloud-platform-client-v2/api/WorkforceManagementApi
	 * @version 185.0.0
	 */ /**
	 * Constructs a new WorkforceManagementApi. 
	 * @alias module:purecloud-platform-client-v2/api/WorkforceManagementApi
	 * @class
	 * @param {module:purecloud-platform-client-v2/ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:purecloud-platform-client-v2/ApiClient#instance} if unspecified.
	 */function WorkforceManagementApi(apiClient){_classCallCheck(this,WorkforceManagementApi);this.apiClient=apiClient||ApiClient.instance;}/**
	 * Delete business unit
	 * A business unit cannot be deleted if it contains one or more management units
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 */_createClass(WorkforceManagementApi,[{key:"deleteWorkforcemanagementBusinessunit",value:function deleteWorkforcemanagementBusinessunit(businessUnitId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}','DELETE',{'businessUnitId':businessUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes an activity code
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {String} activityCodeId The ID of the activity code to delete
	 */},{key:"deleteWorkforcemanagementBusinessunitActivitycode",value:function deleteWorkforcemanagementBusinessunitActivitycode(businessUnitId,activityCodeId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitActivitycode';}// verify the required parameter 'activityCodeId' is set
if(activityCodeId===undefined||activityCodeId===null){throw'Missing the required parameter "activityCodeId" when calling deleteWorkforcemanagementBusinessunitActivitycode';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}','DELETE',{'businessUnitId':businessUnitId,'activityCodeId':activityCodeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes the planning group
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} planningGroupId The ID of a planning group to delete
	 */},{key:"deleteWorkforcemanagementBusinessunitPlanninggroup",value:function deleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId,planningGroupId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitPlanninggroup';}// verify the required parameter 'planningGroupId' is set
if(planningGroupId===undefined||planningGroupId===null){throw'Missing the required parameter "planningGroupId" when calling deleteWorkforcemanagementBusinessunitPlanninggroup';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}','DELETE',{'businessUnitId':businessUnitId,'planningGroupId':planningGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Cancel a scheduling run
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} runId The ID of the schedule run
	 */},{key:"deleteWorkforcemanagementBusinessunitSchedulingRun",value:function deleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId,runId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitSchedulingRun';}// verify the required parameter 'runId' is set
if(runId===undefined||runId===null){throw'Missing the required parameter "runId" when calling deleteWorkforcemanagementBusinessunitSchedulingRun';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}','DELETE',{'businessUnitId':businessUnitId,'runId':runId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a service goal template
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} serviceGoalTemplateId The ID of the service goal template to delete
	 */},{key:"deleteWorkforcemanagementBusinessunitServicegoaltemplate",value:function deleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId,serviceGoalTemplateId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitServicegoaltemplate';}// verify the required parameter 'serviceGoalTemplateId' is set
if(serviceGoalTemplateId===undefined||serviceGoalTemplateId===null){throw'Missing the required parameter "serviceGoalTemplateId" when calling deleteWorkforcemanagementBusinessunitServicegoaltemplate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}','DELETE',{'businessUnitId':businessUnitId,'serviceGoalTemplateId':serviceGoalTemplateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 */},{key:"deleteWorkforcemanagementBusinessunitWeekSchedule",value:function deleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId,weekId,scheduleId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitWeekSchedule';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling deleteWorkforcemanagementBusinessunitWeekSchedule';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling deleteWorkforcemanagementBusinessunitWeekSchedule';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}','DELETE',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a short term forecast
	 * Must not be tied to any schedules
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 */},{key:"deleteWorkforcemanagementBusinessunitWeekShorttermforecast",value:function deleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId,weekDateId,forecastId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling deleteWorkforcemanagementBusinessunitWeekShorttermforecast';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling deleteWorkforcemanagementBusinessunitWeekShorttermforecast';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling deleteWorkforcemanagementBusinessunitWeekShorttermforecast';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}','DELETE',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Disable generated calendar link for the current user
	 * 
	 */},{key:"deleteWorkforcemanagementCalendarUrlIcs",value:function deleteWorkforcemanagementCalendarUrlIcs(){return this.apiClient.callApi('/api/v2/workforcemanagement/calendar/url/ics','DELETE',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 */},{key:"deleteWorkforcemanagementManagementunit",value:function deleteWorkforcemanagementManagementunit(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling deleteWorkforcemanagementManagementunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}','DELETE',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes a time off limit object
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} timeOffLimitId The ID of the time off limit object to delete
	 */},{key:"deleteWorkforcemanagementManagementunitTimeofflimit",value:function deleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId,timeOffLimitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling deleteWorkforcemanagementManagementunitTimeofflimit';}// verify the required parameter 'timeOffLimitId' is set
if(timeOffLimitId===undefined||timeOffLimitId===null){throw'Missing the required parameter "timeOffLimitId" when calling deleteWorkforcemanagementManagementunitTimeofflimit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}','DELETE',{'managementUnitId':managementUnitId,'timeOffLimitId':timeOffLimitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deletes a time off plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {String} timeOffPlanId The ID of the time off plan to delete
	 */},{key:"deleteWorkforcemanagementManagementunitTimeoffplan",value:function deleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId,timeOffPlanId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling deleteWorkforcemanagementManagementunitTimeoffplan';}// verify the required parameter 'timeOffPlanId' is set
if(timeOffPlanId===undefined||timeOffPlanId===null){throw'Missing the required parameter "timeOffPlanId" when calling deleteWorkforcemanagementManagementunitTimeoffplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}','DELETE',{'managementUnitId':managementUnitId,'timeOffPlanId':timeOffPlanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a work plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanId The ID of the work plan to delete
	 */},{key:"deleteWorkforcemanagementManagementunitWorkplan",value:function deleteWorkforcemanagementManagementunitWorkplan(managementUnitId,workPlanId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling deleteWorkforcemanagementManagementunitWorkplan';}// verify the required parameter 'workPlanId' is set
if(workPlanId===undefined||workPlanId===null){throw'Missing the required parameter "workPlanId" when calling deleteWorkforcemanagementManagementunitWorkplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}','DELETE',{'managementUnitId':managementUnitId,'workPlanId':workPlanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete a work plan rotation
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanRotationId The ID of the work plan rotation to be deleted
	 */},{key:"deleteWorkforcemanagementManagementunitWorkplanrotation",value:function deleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId,workPlanRotationId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling deleteWorkforcemanagementManagementunitWorkplanrotation';}// verify the required parameter 'workPlanRotationId' is set
if(workPlanRotationId===undefined||workPlanRotationId===null){throw'Missing the required parameter "workPlanRotationId" when calling deleteWorkforcemanagementManagementunitWorkplanrotation';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}','DELETE',{'managementUnitId':managementUnitId,'workPlanRotationId':workPlanRotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of UserScheduleAdherence records for the requested users
	 * 
	 * @param {Array.<String>} userId User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request
	 */},{key:"getWorkforcemanagementAdherence",value:function getWorkforcemanagementAdherence(userId){// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getWorkforcemanagementAdherence';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence','GET',{},{'userId':this.apiClient.buildCollectionParam(userId,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an adherence explanation for the current user
	 * 
	 * @param {String} explanationId The ID of the explanation to update
	 */},{key:"getWorkforcemanagementAdherenceExplanation",value:function getWorkforcemanagementAdherenceExplanation(explanationId){// verify the required parameter 'explanationId' is set
if(explanationId===undefined||explanationId===null){throw'Missing the required parameter "explanationId" when calling getWorkforcemanagementAdherenceExplanation';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/explanations/{explanationId}','GET',{'explanationId':explanationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the status of an adherence explanation operation. Only the user who started the operation can query the status
	 * Job details are only retained if the initial request returned a 202 ACCEPTED response
	 * @param {String} jobId The ID of the job
	 */},{key:"getWorkforcemanagementAdherenceExplanationsJob",value:function getWorkforcemanagementAdherenceExplanationsJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementAdherenceExplanationsJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/explanations/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request to fetch the status of the historical adherence bulk job. Only the user who started the operation can query the status
	 * Job details are only retained if the initial request returned a 202 ACCEPTED response
	 * @param {String} jobId ID of the job to get
	 */},{key:"getWorkforcemanagementAdherenceHistoricalBulkJob",value:function getWorkforcemanagementAdherenceHistoricalBulkJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementAdherenceHistoricalBulkJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/historical/bulk/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the status of a historical adherence request operation. Only the user who started the operation can query the status
	 * Job details are only retained if the initial request returned a 202 ACCEPTED response
	 * @param {String} jobId jobId
	 */},{key:"getWorkforcemanagementAdherenceHistoricalJob",value:function getWorkforcemanagementAdherenceHistoricalJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementAdherenceHistoricalJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/historical/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status of the modeling job
	 * 
	 * @param {String} jobId The id of the modeling job
	 */},{key:"getWorkforcemanagementAdhocmodelingjob",value:function getWorkforcemanagementAdhocmodelingjob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementAdhocmodelingjob';}return this.apiClient.callApi('/api/v2/workforcemanagement/adhocmodelingjobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an adherence explanation
	 * 
	 * @param {String} agentId The ID of the agent to query
	 * @param {String} explanationId The ID of the explanation to update
	 */},{key:"getWorkforcemanagementAgentAdherenceExplanation",value:function getWorkforcemanagementAgentAdherenceExplanation(agentId,explanationId){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getWorkforcemanagementAgentAdherenceExplanation';}// verify the required parameter 'explanationId' is set
if(explanationId===undefined||explanationId===null){throw'Missing the required parameter "explanationId" when calling getWorkforcemanagementAgentAdherenceExplanation';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}','GET',{'agentId':agentId,'explanationId':explanationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the management unit to which the agent belongs
	 * 
	 * @param {String} agentId The ID of the agent to look up
	 */},{key:"getWorkforcemanagementAgentManagementunit",value:function getWorkforcemanagementAgentManagementunit(agentId){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getWorkforcemanagementAgentManagementunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/managementunit','GET',{'agentId':agentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the management unit to which the currently logged in agent belongs
	 * 
	 */},{key:"getWorkforcemanagementAgentsMeManagementunit",value:function getWorkforcemanagementAgentsMeManagementunit(){return this.apiClient.callApi('/api/v2/workforcemanagement/agents/me/managementunit','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get business unit
	 * Expanding "settings" will retrieve all settings.  All other expands will retrieve only the requested settings field(s).
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Include to access additional data on the business unit
	 */},{key:"getWorkforcemanagementBusinessunit",value:function getWorkforcemanagementBusinessunit(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}','GET',{'businessUnitId':businessUnitId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get an activity code
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {String} activityCodeId The ID of the activity code to fetch
	 */},{key:"getWorkforcemanagementBusinessunitActivitycode",value:function getWorkforcemanagementBusinessunitActivitycode(businessUnitId,activityCodeId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitActivitycode';}// verify the required parameter 'activityCodeId' is set
if(activityCodeId===undefined||activityCodeId===null){throw'Missing the required parameter "activityCodeId" when calling getWorkforcemanagementBusinessunitActivitycode';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}','GET',{'businessUnitId':businessUnitId,'activityCodeId':activityCodeId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get activity codes
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"getWorkforcemanagementBusinessunitActivitycodes",value:function getWorkforcemanagementBusinessunitActivitycodes(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitActivitycodes';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes','GET',{'businessUnitId':businessUnitId},{'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get intraday planning groups for the given date
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} _date yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 */},{key:"getWorkforcemanagementBusinessunitIntradayPlanninggroups",value:function getWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId,_date){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitIntradayPlanninggroups';}// verify the required parameter '_date' is set
if(_date===undefined||_date===null){throw'Missing the required parameter "_date" when calling getWorkforcemanagementBusinessunitIntradayPlanninggroups';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday/planninggroups','GET',{'businessUnitId':businessUnitId},{'date':_date},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get all authorized management units in the business unit
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.feature If specified, the list of management units for which the user is authorized to use the requested feature will be returned
	 * @param {String} opts.divisionId If specified, the list of management units belonging to the specified division will be returned
	 */},{key:"getWorkforcemanagementBusinessunitManagementunits",value:function getWorkforcemanagementBusinessunitManagementunits(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitManagementunits';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/managementunits','GET',{'businessUnitId':businessUnitId},{'feature':opts['feature'],'divisionId':opts['divisionId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a planning group
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} planningGroupId The ID of a planning group to fetch
	 */},{key:"getWorkforcemanagementBusinessunitPlanninggroup",value:function getWorkforcemanagementBusinessunitPlanninggroup(businessUnitId,planningGroupId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitPlanninggroup';}// verify the required parameter 'planningGroupId' is set
if(planningGroupId===undefined||planningGroupId===null){throw'Missing the required parameter "planningGroupId" when calling getWorkforcemanagementBusinessunitPlanninggroup';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}','GET',{'businessUnitId':businessUnitId,'planningGroupId':planningGroupId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets list of planning groups
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 */},{key:"getWorkforcemanagementBusinessunitPlanninggroups",value:function getWorkforcemanagementBusinessunitPlanninggroups(businessUnitId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitPlanninggroups';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups','GET',{'businessUnitId':businessUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a scheduling run
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} runId The ID of the schedule run
	 */},{key:"getWorkforcemanagementBusinessunitSchedulingRun",value:function getWorkforcemanagementBusinessunitSchedulingRun(businessUnitId,runId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitSchedulingRun';}// verify the required parameter 'runId' is set
if(runId===undefined||runId===null){throw'Missing the required parameter "runId" when calling getWorkforcemanagementBusinessunitSchedulingRun';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}','GET',{'businessUnitId':businessUnitId,'runId':runId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the result of a rescheduling operation
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} runId The ID of the schedule run
	 * @param {Array.<String>} managementUnitIds The IDs of the management units for which to fetch the reschedule results
	 * @param {Array.<String>} expand The fields to expand. Omitting will return an empty response
	 */},{key:"getWorkforcemanagementBusinessunitSchedulingRunResult",value:function getWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId,runId,managementUnitIds,expand){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitSchedulingRunResult';}// verify the required parameter 'runId' is set
if(runId===undefined||runId===null){throw'Missing the required parameter "runId" when calling getWorkforcemanagementBusinessunitSchedulingRunResult';}// verify the required parameter 'managementUnitIds' is set
if(managementUnitIds===undefined||managementUnitIds===null){throw'Missing the required parameter "managementUnitIds" when calling getWorkforcemanagementBusinessunitSchedulingRunResult';}// verify the required parameter 'expand' is set
if(expand===undefined||expand===null){throw'Missing the required parameter "expand" when calling getWorkforcemanagementBusinessunitSchedulingRunResult';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}/result','GET',{'businessUnitId':businessUnitId,'runId':runId},{'managementUnitIds':this.apiClient.buildCollectionParam(managementUnitIds,'multi'),'expand':this.apiClient.buildCollectionParam(expand,'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of scheduling runs
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 */},{key:"getWorkforcemanagementBusinessunitSchedulingRuns",value:function getWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitSchedulingRuns';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs','GET',{'businessUnitId':businessUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a service goal template
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} serviceGoalTemplateId The ID of a service goal template to fetch
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Include to access additional data on the service goal template
	 */},{key:"getWorkforcemanagementBusinessunitServicegoaltemplate",value:function getWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId,serviceGoalTemplateId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitServicegoaltemplate';}// verify the required parameter 'serviceGoalTemplateId' is set
if(serviceGoalTemplateId===undefined||serviceGoalTemplateId===null){throw'Missing the required parameter "serviceGoalTemplateId" when calling getWorkforcemanagementBusinessunitServicegoaltemplate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}','GET',{'businessUnitId':businessUnitId,'serviceGoalTemplateId':serviceGoalTemplateId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets list of service goal templates
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Include to access additional data on the service goal template
	 */},{key:"getWorkforcemanagementBusinessunitServicegoaltemplates",value:function getWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitServicegoaltemplates';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates','GET',{'businessUnitId':businessUnitId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand expand
	 */},{key:"getWorkforcemanagementBusinessunitWeekSchedule",value:function getWorkforcemanagementBusinessunitWeekSchedule(businessUnitId,weekId,scheduleId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekSchedule';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekSchedule';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekSchedule';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the generation results for a generated schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 */},{key:"getWorkforcemanagementBusinessunitWeekScheduleGenerationresults",value:function getWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId,weekId,scheduleId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekScheduleGenerationresults';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekScheduleGenerationresults';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekScheduleGenerationresults';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/generationresults','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the headcount forecast by planning group for the schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownload Whether to force the result to come via download url.  For testing purposes only
	 */},{key:"getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast",value:function getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId,weekId,scheduleId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/headcountforecast','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{'forceDownload':opts['forceDownload']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Loads agent's schedule history.
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {String} agentId THe ID of the agent
	 */},{key:"getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent",value:function getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId,weekId,scheduleId,agentId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent';}// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getWorkforcemanagementBusinessunitWeekScheduleHistoryAgent';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/history/agents/{agentId}','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId,'agentId':agentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the performance prediction for the associated schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the performance prediction belongs
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format
	 * @param {String} scheduleId The ID of the schedule the performance prediction belongs to
	 */},{key:"getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions",value:function getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions(businessUnitId,weekId,scheduleId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictions';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get recalculated performance prediction result
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the performance prediction belongs
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format
	 * @param {String} scheduleId The ID of the schedule the recalculation belongs to
	 * @param {String} recalculationId The ID of the recalculation request
	 */},{key:"getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation",value:function getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation(businessUnitId,weekId,scheduleId,recalculationId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation';}// verify the required parameter 'recalculationId' is set
if(recalculationId===undefined||recalculationId===null){throw'Missing the required parameter "recalculationId" when calling getWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculation';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/{recalculationId}','GET',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId,'recalculationId':recalculationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the list of week schedules for the specified week
	 * Use "recent" (without quotes) for the `weekId` path parameter to fetch all forecasts for +/- 26 weeks from the current date. Response will include any schedule which spans the specified week
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format, or 'recent' (without quotes) to get recent schedules
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeOnlyPublished includeOnlyPublished
	 * @param {Object} opts.expand expand
	 */},{key:"getWorkforcemanagementBusinessunitWeekSchedules",value:function getWorkforcemanagementBusinessunitWeekSchedules(businessUnitId,weekId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekSchedules';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementBusinessunitWeekSchedules';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules','GET',{'businessUnitId':businessUnitId,'weekId':weekId},{'includeOnlyPublished':opts['includeOnlyPublished'],'expand':opts['expand']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a short term forecast
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Include to access additional data on the forecast
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecast",value:function getWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId,weekDateId,forecastId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecast';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecast';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecast';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the result of a short term forecast calculation
	 * Includes modifications unless you pass the doNotApplyModifications query parameter
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.weekNumber The week number to fetch (for multi-week forecasts)
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service.  For testing/app development purposes
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecastData",value:function getWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId,weekDateId,forecastId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastData';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastData';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastData';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/data','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{'weekNumber':opts['weekNumber'],'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets the forecast generation results
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults",value:function getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId,weekDateId,forecastId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/generationresults','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the result of a long term forecast calculation
	 * Includes modifications unless you pass the doNotApplyModifications query parameter
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service.  For testing/app development purposes
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata",value:function getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId,weekDateId,forecastId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/longtermforecastdata','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets the forecast planning group snapshot
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups",value:function getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId,weekDateId,forecastId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/planninggroups','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the staffing requirement by planning group for a forecast
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.weekNumbers The week numbers to fetch (for multi-week forecasts) staffing requirements. Returns all week data if the list is not specified
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement",value:function getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement(businessUnitId,weekDateId,forecastId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecastStaffingrequirement';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/staffingrequirement','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{'weekNumbers':this.apiClient.buildCollectionParam(opts['weekNumbers'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get short term forecasts
	 * Use "recent" (without quotes) for the `weekDateId` path parameter to fetch all forecasts for +/- 26 weeks from the current date. Response will include any forecast which spans the specified week
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format or 'recent' (without quotes) to fetch recent forecasts
	 */},{key:"getWorkforcemanagementBusinessunitWeekShorttermforecasts",value:function getWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId,weekDateId){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecasts';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementBusinessunitWeekShorttermforecasts';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts','GET',{'businessUnitId':businessUnitId,'weekDateId':weekDateId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get business units
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.feature If specified, the list of business units for which the user is authorized to use the requested feature will be returned
	 * @param {String} opts.divisionId If specified, the list of business units belonging to the specified division will be returned
	 */},{key:"getWorkforcemanagementBusinessunits",value:function getWorkforcemanagementBusinessunits(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits','GET',{},{'feature':opts['feature'],'divisionId':opts['divisionId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get business units across divisions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.divisionId The divisionIds to filter by. If omitted, will return business units in all divisions
	 */},{key:"getWorkforcemanagementBusinessunitsDivisionviews",value:function getWorkforcemanagementBusinessunitsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/divisionviews','GET',{},{'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get ics formatted calendar based on shareable link
	 * 
	 * @param {String} calendarId The id of the ics-formatted calendar
	 */},{key:"getWorkforcemanagementCalendarDataIcs",value:function getWorkforcemanagementCalendarDataIcs(calendarId){// verify the required parameter 'calendarId' is set
if(calendarId===undefined||calendarId===null){throw'Missing the required parameter "calendarId" when calling getWorkforcemanagementCalendarDataIcs';}return this.apiClient.callApi('/api/v2/workforcemanagement/calendar/data/ics','GET',{},{'calendarId':calendarId},{},{},null,['PureCloud OAuth'],['application/json'],['text/calendar']);}/**
	 * Get existing calendar link for the current user
	 * 
	 */},{key:"getWorkforcemanagementCalendarUrlIcs",value:function getWorkforcemanagementCalendarUrlIcs(){return this.apiClient.callApi('/api/v2/workforcemanagement/calendar/url/ics','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves delete job status for historical data imports of the organization
	 * 
	 */},{key:"getWorkforcemanagementHistoricaldataDeletejob",value:function getWorkforcemanagementHistoricaldataDeletejob(){return this.apiClient.callApi('/api/v2/workforcemanagement/historicaldata/deletejob','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves status of the historical data imports of the organization
	 * 
	 */},{key:"getWorkforcemanagementHistoricaldataImportstatus",value:function getWorkforcemanagementHistoricaldataImportstatus(){return this.apiClient.callApi('/api/v2/workforcemanagement/historicaldata/importstatus','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get integrations
	 * 
	 */},{key:"getWorkforcemanagementIntegrationsHris",value:function getWorkforcemanagementIntegrationsHris(){return this.apiClient.callApi('/api/v2/workforcemanagement/integrations/hris','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the results of time off types job
	 * 
	 * @param {String} jobId The ID of the job.
	 */},{key:"getWorkforcemanagementIntegrationsHrisTimeofftypesJob",value:function getWorkforcemanagementIntegrationsHrisTimeofftypesJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementIntegrationsHrisTimeofftypesJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/integrations/hris/timeofftypes/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get management unit
	 * settings.shortTermForecasting is deprecated and now lives on the business unit
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand 
	 */},{key:"getWorkforcemanagementManagementunit",value:function getWorkforcemanagementManagementunit(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}','GET',{'managementUnitId':managementUnitId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated: Instead use /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes. Get the list of activity codes
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @deprecated
	 */},{key:"getWorkforcemanagementManagementunitActivitycodes",value:function getWorkforcemanagementManagementunitActivitycodes(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitActivitycodes';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/activitycodes','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of user schedule adherence records for the requested management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service.  For testing/app development purposes
	 */},{key:"getWorkforcemanagementManagementunitAdherence",value:function getWorkforcemanagementManagementunitAdherence(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitAdherence';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/adherence','GET',{'managementUnitId':managementUnitId},{'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get data for agent in the management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} agentId The agent id
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.excludeCapabilities Excludes all capabilities of the agent such as queues, languages, and skills
	 */},{key:"getWorkforcemanagementManagementunitAgent",value:function getWorkforcemanagementManagementunitAgent(managementUnitId,agentId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitAgent';}// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getWorkforcemanagementManagementunitAgent';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}','GET',{'managementUnitId':managementUnitId,'agentId':agentId},{'excludeCapabilities':opts['excludeCapabilities']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the shift trades for a given agent
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} agentId The agent id
	 */},{key:"getWorkforcemanagementManagementunitAgentShifttrades",value:function getWorkforcemanagementManagementunitAgentShifttrades(managementUnitId,agentId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitAgentShifttrades';}// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling getWorkforcemanagementManagementunitAgentShifttrades';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents/{agentId}/shifttrades','GET',{'managementUnitId':managementUnitId,'agentId':agentId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a summary of all shift trades in the matched state
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 */},{key:"getWorkforcemanagementManagementunitShifttradesMatched",value:function getWorkforcemanagementManagementunitShifttradesMatched(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitShifttradesMatched';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/matched','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets list of users available for whom you can send direct shift trade requests
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 */},{key:"getWorkforcemanagementManagementunitShifttradesUsers",value:function getWorkforcemanagementManagementunitShifttradesUsers(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitShifttradesUsers';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/shifttrades/users','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a time off limit object
	 * Returns properties of time off limit object, but not daily values.
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} timeOffLimitId The ID of the time off limit to fetch
	 */},{key:"getWorkforcemanagementManagementunitTimeofflimit",value:function getWorkforcemanagementManagementunitTimeofflimit(managementUnitId,timeOffLimitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitTimeofflimit';}// verify the required parameter 'timeOffLimitId' is set
if(timeOffLimitId===undefined||timeOffLimitId===null){throw'Missing the required parameter "timeOffLimitId" when calling getWorkforcemanagementManagementunitTimeofflimit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}','GET',{'managementUnitId':managementUnitId,'timeOffLimitId':timeOffLimitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of time off limit objects under management unit.
	 * Currently only one time off limit object is allowed under management unit, so the list contains either 0 or 1 element.
	 * @param {String} managementUnitId The ID of the management unit.
	 */},{key:"getWorkforcemanagementManagementunitTimeofflimits",value:function getWorkforcemanagementManagementunitTimeofflimits(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitTimeofflimits';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a time off plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {String} timeOffPlanId The ID of the time off plan to fetch
	 */},{key:"getWorkforcemanagementManagementunitTimeoffplan",value:function getWorkforcemanagementManagementunitTimeoffplan(managementUnitId,timeOffPlanId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitTimeoffplan';}// verify the required parameter 'timeOffPlanId' is set
if(timeOffPlanId===undefined||timeOffPlanId===null){throw'Missing the required parameter "timeOffPlanId" when calling getWorkforcemanagementManagementunitTimeoffplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}','GET',{'managementUnitId':managementUnitId,'timeOffPlanId':timeOffPlanId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets a list of time off plans
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 */},{key:"getWorkforcemanagementManagementunitTimeoffplans",value:function getWorkforcemanagementManagementunitTimeoffplans(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitTimeoffplans';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a time off request
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} userId The userId to whom the Time Off Request applies.
	 * @param {String} timeOffRequestId Time Off Request Id
	 */},{key:"getWorkforcemanagementManagementunitUserTimeoffrequest",value:function getWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId,userId,timeOffRequestId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitUserTimeoffrequest';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getWorkforcemanagementManagementunitUserTimeoffrequest';}// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling getWorkforcemanagementManagementunitUserTimeoffrequest';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}','GET',{'managementUnitId':managementUnitId,'userId':userId,'timeOffRequestId':timeOffRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves time off limit, allocated and waitlisted values according to specific time off request
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} userId The userId to whom the time off request applies.
	 * @param {String} timeOffRequestId The ID of the time off request, which dates and activityCodeId determine limit values to retrieve
	 */},{key:"getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits",value:function getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId,userId,timeOffRequestId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits';}// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling getWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeofflimits','GET',{'managementUnitId':managementUnitId,'userId':userId,'timeOffRequestId':timeOffRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of time off requests for a given user
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} userId The userId to whom the Time Off Request applies.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.recentlyReviewed Limit results to requests that have been reviewed within the preceding 30 days (default to false)
	 */},{key:"getWorkforcemanagementManagementunitUserTimeoffrequests",value:function getWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId,userId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitUserTimeoffrequests';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling getWorkforcemanagementManagementunitUserTimeoffrequests';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests','GET',{'managementUnitId':managementUnitId,'userId':userId},{'recentlyReviewed':opts['recentlyReviewed']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get users in the management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 */},{key:"getWorkforcemanagementManagementunitUsers",value:function getWorkforcemanagementManagementunitUsers(managementUnitId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitUsers';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users','GET',{'managementUnitId':managementUnitId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated.  Use the equivalent business unit resource instead. Get a week schedule
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format.
	 * @param {String} scheduleId The ID of the schedule to fetch
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.expand Which fields, if any, to expand
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service.  For testing/app development purposes
	 * @deprecated
	 */},{key:"getWorkforcemanagementManagementunitWeekSchedule",value:function getWorkforcemanagementManagementunitWeekSchedule(managementUnitId,weekId,scheduleId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWeekSchedule';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementManagementunitWeekSchedule';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling getWorkforcemanagementManagementunitWeekSchedule';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules/{scheduleId}','GET',{'managementUnitId':managementUnitId,'weekId':weekId,'scheduleId':scheduleId},{'expand':opts['expand'],'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.includeOnlyPublished Return only published schedules
	 * @param {String} opts.earliestWeekDate The start date of the earliest week to query in yyyy-MM-dd format
	 * @param {String} opts.latestWeekDate The start date of the latest week to query in yyyy-MM-dd format
	 * @deprecated
	 */},{key:"getWorkforcemanagementManagementunitWeekSchedules",value:function getWorkforcemanagementManagementunitWeekSchedules(managementUnitId,weekId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWeekSchedules';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling getWorkforcemanagementManagementunitWeekSchedules';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekId}/schedules','GET',{'managementUnitId':managementUnitId,'weekId':weekId},{'includeOnlyPublished':opts['includeOnlyPublished'],'earliestWeekDate':opts['earliestWeekDate'],'latestWeekDate':opts['latestWeekDate']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all the shift trades for a given week
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.evaluateMatches Whether to evaluate the matches for violations (default to true)
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"getWorkforcemanagementManagementunitWeekShifttrades",value:function getWorkforcemanagementManagementunitWeekShifttrades(managementUnitId,weekDateId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWeekShifttrades';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling getWorkforcemanagementManagementunitWeekShifttrades';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades','GET',{'managementUnitId':managementUnitId,'weekDateId':weekDateId},{'evaluateMatches':opts['evaluateMatches'],'forceDownloadService':opts['forceDownloadService']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a work plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanId The ID of the work plan to fetch
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.includeOnly limit response to the specified fields
	 */},{key:"getWorkforcemanagementManagementunitWorkplan",value:function getWorkforcemanagementManagementunitWorkplan(managementUnitId,workPlanId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWorkplan';}// verify the required parameter 'workPlanId' is set
if(workPlanId===undefined||workPlanId===null){throw'Missing the required parameter "workPlanId" when calling getWorkforcemanagementManagementunitWorkplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}','GET',{'managementUnitId':managementUnitId,'workPlanId':workPlanId},{'includeOnly':this.apiClient.buildCollectionParam(opts['includeOnly'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a work plan rotation
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanRotationId The ID of the work plan rotation to fetch
	 */},{key:"getWorkforcemanagementManagementunitWorkplanrotation",value:function getWorkforcemanagementManagementunitWorkplanrotation(managementUnitId,workPlanRotationId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWorkplanrotation';}// verify the required parameter 'workPlanRotationId' is set
if(workPlanRotationId===undefined||workPlanRotationId===null){throw'Missing the required parameter "workPlanRotationId" when calling getWorkforcemanagementManagementunitWorkplanrotation';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}','GET',{'managementUnitId':managementUnitId,'workPlanRotationId':workPlanRotationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get work plan rotations
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand 
	 */},{key:"getWorkforcemanagementManagementunitWorkplanrotations",value:function getWorkforcemanagementManagementunitWorkplanrotations(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWorkplanrotations';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations','GET',{'managementUnitId':managementUnitId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get work plans
	 * "expand=details" is deprecated
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand Include to access additional data on the work plans
	 */},{key:"getWorkforcemanagementManagementunitWorkplans",value:function getWorkforcemanagementManagementunitWorkplans(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling getWorkforcemanagementManagementunitWorkplans';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans','GET',{'managementUnitId':managementUnitId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get management units
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Number} opts.pageSize Deprecated, paging is not supported
	 * @param {Number} opts.pageNumber Deprecated, paging is not supported
	 * @param {Object} opts.expand Deprecated, expand settings on the single MU route
	 * @param {Object} opts.feature If specified, the list of management units for which the user is authorized to use the requested feature will be returned
	 * @param {String} opts.divisionId If specified, the list of management units belonging to the specified division will be returned
	 */},{key:"getWorkforcemanagementManagementunits",value:function getWorkforcemanagementManagementunits(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits','GET',{},{'pageSize':opts['pageSize'],'pageNumber':opts['pageNumber'],'expand':opts['expand'],'feature':opts['feature'],'divisionId':opts['divisionId']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get management units across divisions
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.divisionId The divisionIds to filter by. If omitted, will return all divisions
	 */},{key:"getWorkforcemanagementManagementunitsDivisionviews",value:function getWorkforcemanagementManagementunitsDivisionviews(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/divisionviews','GET',{},{'divisionId':this.apiClient.buildCollectionParam(opts['divisionId'],'multi')},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of notifications for the current user
	 * Notifications are only initially sent if you have the relevant Notify and Edit permissions
	 */},{key:"getWorkforcemanagementNotifications",value:function getWorkforcemanagementNotifications(){return this.apiClient.callApi('/api/v2/workforcemanagement/notifications','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get status of the scheduling job
	 * 
	 * @param {String} jobId The id of the scheduling job
	 */},{key:"getWorkforcemanagementSchedulingjob",value:function getWorkforcemanagementSchedulingjob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementSchedulingjob';}return this.apiClient.callApi('/api/v2/workforcemanagement/schedulingjobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Gets all of my shift trades
	 * 
	 */},{key:"getWorkforcemanagementShifttrades",value:function getWorkforcemanagementShifttrades(){return this.apiClient.callApi('/api/v2/workforcemanagement/shifttrades','GET',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request to fetch the status of the historical shrinkage query
	 * 
	 * @param {String} jobId jobId
	 */},{key:"getWorkforcemanagementShrinkageJob",value:function getWorkforcemanagementShrinkageJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementShrinkageJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/shrinkage/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query the results of time off types job
	 * 
	 * @param {String} jobId The ID of the job.
	 */},{key:"getWorkforcemanagementTimeoffbalanceJob",value:function getWorkforcemanagementTimeoffbalanceJob(jobId){// verify the required parameter 'jobId' is set
if(jobId===undefined||jobId===null){throw'Missing the required parameter "jobId" when calling getWorkforcemanagementTimeoffbalanceJob';}return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffbalance/jobs/{jobId}','GET',{'jobId':jobId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a time off request for the current user
	 * 
	 * @param {String} timeOffRequestId The ID of the time off request
	 */},{key:"getWorkforcemanagementTimeoffrequest",value:function getWorkforcemanagementTimeoffrequest(timeOffRequestId){// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling getWorkforcemanagementTimeoffrequest';}return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}','GET',{'timeOffRequestId':timeOffRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get the daily waitlist positions of a time off request for the current user
	 * 
	 * @param {String} timeOffRequestId The ID of the time off request
	 */},{key:"getWorkforcemanagementTimeoffrequestWaitlistpositions",value:function getWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId){// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling getWorkforcemanagementTimeoffrequestWaitlistpositions';}return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}/waitlistpositions','GET',{'timeOffRequestId':timeOffRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get a list of time off requests for the current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.recentlyReviewed Limit results to requests that have been reviewed within the preceding 30 days (default to false)
	 */},{key:"getWorkforcemanagementTimeoffrequests",value:function getWorkforcemanagementTimeoffrequests(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests','GET',{},{'recentlyReviewed':opts['recentlyReviewed']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an adherence explanation
	 * 
	 * @param {String} agentId The ID of the agent to query
	 * @param {String} explanationId The ID of the explanation to update
	 * @param {Object} body The request body
	 */},{key:"patchWorkforcemanagementAgentAdherenceExplanation",value:function patchWorkforcemanagementAgentAdherenceExplanation(agentId,explanationId,body){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling patchWorkforcemanagementAgentAdherenceExplanation';}// verify the required parameter 'explanationId' is set
if(explanationId===undefined||explanationId===null){throw'Missing the required parameter "explanationId" when calling patchWorkforcemanagementAgentAdherenceExplanation';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchWorkforcemanagementAgentAdherenceExplanation';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/{explanationId}','PATCH',{'agentId':agentId,'explanationId':explanationId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update business unit
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementBusinessunit",value:function patchWorkforcemanagementBusinessunit(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling patchWorkforcemanagementBusinessunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}','PATCH',{'businessUnitId':businessUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update an activity code
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {String} activityCodeId The ID of the activity code to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementBusinessunitActivitycode",value:function patchWorkforcemanagementBusinessunitActivitycode(businessUnitId,activityCodeId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling patchWorkforcemanagementBusinessunitActivitycode';}// verify the required parameter 'activityCodeId' is set
if(activityCodeId===undefined||activityCodeId===null){throw'Missing the required parameter "activityCodeId" when calling patchWorkforcemanagementBusinessunitActivitycode';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes/{activityCodeId}','PATCH',{'businessUnitId':businessUnitId,'activityCodeId':activityCodeId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the planning group
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} planningGroupId The ID of a planning group to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementBusinessunitPlanninggroup",value:function patchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId,planningGroupId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling patchWorkforcemanagementBusinessunitPlanninggroup';}// verify the required parameter 'planningGroupId' is set
if(planningGroupId===undefined||planningGroupId===null){throw'Missing the required parameter "planningGroupId" when calling patchWorkforcemanagementBusinessunitPlanninggroup';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups/{planningGroupId}','PATCH',{'businessUnitId':businessUnitId,'planningGroupId':planningGroupId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Mark a schedule run as applied
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} runId The ID of the schedule run
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementBusinessunitSchedulingRun",value:function patchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId,runId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling patchWorkforcemanagementBusinessunitSchedulingRun';}// verify the required parameter 'runId' is set
if(runId===undefined||runId===null){throw'Missing the required parameter "runId" when calling patchWorkforcemanagementBusinessunitSchedulingRun';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/scheduling/runs/{runId}','PATCH',{'businessUnitId':businessUnitId,'runId':runId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a service goal template
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {String} serviceGoalTemplateId The ID of a service goal template to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementBusinessunitServicegoaltemplate",value:function patchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId,serviceGoalTemplateId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling patchWorkforcemanagementBusinessunitServicegoaltemplate';}// verify the required parameter 'serviceGoalTemplateId' is set
if(serviceGoalTemplateId===undefined||serviceGoalTemplateId===null){throw'Missing the required parameter "serviceGoalTemplateId" when calling patchWorkforcemanagementBusinessunitServicegoaltemplate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates/{serviceGoalTemplateId}','PATCH',{'businessUnitId':businessUnitId,'serviceGoalTemplateId':serviceGoalTemplateId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update the requested management unit
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunit",value:function patchWorkforcemanagementManagementunit(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}','PATCH',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update agent configurations
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitAgents",value:function patchWorkforcemanagementManagementunitAgents(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitAgents';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/agents','PATCH',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a time off limit object.
	 * Updates time off limit object properties, but not daily values.
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} timeOffLimitId The id of time off limit object to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitTimeofflimit",value:function patchWorkforcemanagementManagementunitTimeofflimit(managementUnitId,timeOffLimitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitTimeofflimit';}// verify the required parameter 'timeOffLimitId' is set
if(timeOffLimitId===undefined||timeOffLimitId===null){throw'Missing the required parameter "timeOffLimitId" when calling patchWorkforcemanagementManagementunitTimeofflimit';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}','PATCH',{'managementUnitId':managementUnitId,'timeOffLimitId':timeOffLimitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a time off plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {String} timeOffPlanId The ID of the time off plan to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitTimeoffplan",value:function patchWorkforcemanagementManagementunitTimeoffplan(managementUnitId,timeOffPlanId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitTimeoffplan';}// verify the required parameter 'timeOffPlanId' is set
if(timeOffPlanId===undefined||timeOffPlanId===null){throw'Missing the required parameter "timeOffPlanId" when calling patchWorkforcemanagementManagementunitTimeoffplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans/{timeOffPlanId}','PATCH',{'managementUnitId':managementUnitId,'timeOffPlanId':timeOffPlanId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Set integration status for a time off request.
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} timeOffRequestId The ID of the time off request.
	 * @param {String} userId The ID of user to whom the time off request belongs.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus",value:function patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus(managementUnitId,timeOffRequestId,userId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus';}// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/{timeOffRequestId}/users/{userId}/integrationstatus','PATCH',{'managementUnitId':managementUnitId,'timeOffRequestId':timeOffRequestId,'userId':userId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a time off request
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} userId The id of the user the requested time off request belongs to
	 * @param {String} timeOffRequestId The id of the time off request to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitUserTimeoffrequest",value:function patchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId,userId,timeOffRequestId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitUserTimeoffrequest';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling patchWorkforcemanagementManagementunitUserTimeoffrequest';}// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling patchWorkforcemanagementManagementunitUserTimeoffrequest';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}','PATCH',{'managementUnitId':managementUnitId,'userId':userId,'timeOffRequestId':timeOffRequestId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates a shift trade. This route can only be called by the initiating agent
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} tradeId The ID of the shift trade to update
	 * @param {Object} body body
	 */},{key:"patchWorkforcemanagementManagementunitWeekShifttrade",value:function patchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId,weekDateId,tradeId,body){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitWeekShifttrade';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling patchWorkforcemanagementManagementunitWeekShifttrade';}// verify the required parameter 'tradeId' is set
if(tradeId===undefined||tradeId===null){throw'Missing the required parameter "tradeId" when calling patchWorkforcemanagementManagementunitWeekShifttrade';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling patchWorkforcemanagementManagementunitWeekShifttrade';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}','PATCH',{'managementUnitId':managementUnitId,'weekDateId':weekDateId,'tradeId':tradeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a work plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanId The ID of the work plan to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.validationMode Allows to update work plan even if validation result is invalid
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitWorkplan",value:function patchWorkforcemanagementManagementunitWorkplan(managementUnitId,workPlanId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitWorkplan';}// verify the required parameter 'workPlanId' is set
if(workPlanId===undefined||workPlanId===null){throw'Missing the required parameter "workPlanId" when calling patchWorkforcemanagementManagementunitWorkplan';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}','PATCH',{'managementUnitId':managementUnitId,'workPlanId':workPlanId},{'validationMode':opts['validationMode']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a work plan rotation
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanRotationId The ID of the work plan rotation to update
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementManagementunitWorkplanrotation",value:function patchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId,workPlanRotationId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling patchWorkforcemanagementManagementunitWorkplanrotation';}// verify the required parameter 'workPlanRotationId' is set
if(workPlanRotationId===undefined||workPlanRotationId===null){throw'Missing the required parameter "workPlanRotationId" when calling patchWorkforcemanagementManagementunitWorkplanrotation';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}','PATCH',{'managementUnitId':managementUnitId,'workPlanRotationId':workPlanRotationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update a time off request for the current user
	 * 
	 * @param {String} timeOffRequestId The ID of the time off request
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"patchWorkforcemanagementTimeoffrequest",value:function patchWorkforcemanagementTimeoffrequest(timeOffRequestId,opts){opts=opts||{};// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling patchWorkforcemanagementTimeoffrequest';}return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests/{timeOffRequestId}','PATCH',{'timeOffRequestId':timeOffRequestId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Submit an adherence explanation for the current user
	 * 
	 * @param {Object} body The request body
	 */},{key:"postWorkforcemanagementAdherenceExplanations",value:function postWorkforcemanagementAdherenceExplanations(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementAdherenceExplanations';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/explanations','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query adherence explanations for the current user
	 * 
	 * @param {Object} body The request body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"postWorkforcemanagementAdherenceExplanationsQuery",value:function postWorkforcemanagementAdherenceExplanationsQuery(body,opts){opts=opts||{};// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementAdherenceExplanationsQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/explanations/query','POST',{},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Deprecated. Use bulk routes instead (/adherence/historical/bulk)
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * @deprecated
	 */},{key:"postWorkforcemanagementAdherenceHistorical",value:function postWorkforcemanagementAdherenceHistorical(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/historical','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a historical adherence report in bulk
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementAdherenceHistoricalBulk",value:function postWorkforcemanagementAdherenceHistoricalBulk(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/adherence/historical/bulk','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add an adherence explanation for the requested user
	 * 
	 * @param {String} agentId The ID of the agent to query
	 * @param {Object} body The request body
	 */},{key:"postWorkforcemanagementAgentAdherenceExplanations",value:function postWorkforcemanagementAgentAdherenceExplanations(agentId,body){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling postWorkforcemanagementAgentAdherenceExplanations';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementAgentAdherenceExplanations';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations','POST',{'agentId':agentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query adherence explanations for the given agent across a specified range
	 * 
	 * @param {String} agentId The ID of the agent to query
	 * @param {Object} body The request body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"postWorkforcemanagementAgentAdherenceExplanationsQuery",value:function postWorkforcemanagementAgentAdherenceExplanationsQuery(agentId,body,opts){opts=opts||{};// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling postWorkforcemanagementAgentAdherenceExplanationsQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementAgentAdherenceExplanationsQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/adherence/explanations/query','POST',{'agentId':agentId},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Move agents in and out of management unit
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementAgents",value:function postWorkforcemanagementAgents(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/agents','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query integrations for agents
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementAgentsIntegrationsHrisQuery",value:function postWorkforcemanagementAgentsIntegrationsHrisQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/agents/integrations/hris/query','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get agent possible work shifts for requested time frame
	 * 
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementAgentsMePossibleworkshifts",value:function postWorkforcemanagementAgentsMePossibleworkshifts(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementAgentsMePossibleworkshifts';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/me/possibleworkshifts','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get published schedule for the current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementAgentschedulesMine",value:function postWorkforcemanagementAgentschedulesMine(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/agentschedules/mine','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new activity code
	 * 
	 * @param {String} businessUnitId The ID of the business unit, or 'mine' for the business unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitActivitycodes",value:function postWorkforcemanagementBusinessunitActivitycodes(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitActivitycodes';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes','POST',{'businessUnitId':businessUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query adherence explanations across an entire business unit for the requested period
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {Object} body The request body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"postWorkforcemanagementBusinessunitAdherenceExplanationsQuery",value:function postWorkforcemanagementBusinessunitAdherenceExplanationsQuery(businessUnitId,body,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitAdherenceExplanationsQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitAdherenceExplanationsQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/adherence/explanations/query','POST',{'businessUnitId':businessUnitId},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Search published schedules
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitAgentschedulesSearch",value:function postWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitAgentschedulesSearch';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/agentschedules/search','POST',{'businessUnitId':businessUnitId},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get intraday data for the given date for the requested planningGroupIds
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitIntraday",value:function postWorkforcemanagementBusinessunitIntraday(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitIntraday';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/intraday','POST',{'businessUnitId':businessUnitId},{'forceAsync':opts['forceAsync']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Adds a new planning group
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitPlanninggroups",value:function postWorkforcemanagementBusinessunitPlanninggroups(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitPlanninggroups';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/planninggroups','POST',{'businessUnitId':businessUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Adds a new service goal template
	 * 
	 * @param {String} businessUnitId The ID of the business unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitServicegoaltemplates",value:function postWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitServicegoaltemplates';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/servicegoaltemplates','POST',{'businessUnitId':businessUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Loads agent schedule data from the schedule. Used in combination with the metadata route
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} body body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery",value:function postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId,weekId,scheduleId,body,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/agentschedules/query','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Copy a schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule to copy
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekScheduleCopy",value:function postWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId,weekId,scheduleId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekScheduleCopy';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekScheduleCopy';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekScheduleCopy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekScheduleCopy';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/copy','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a daily recalculation of the performance prediction for the associated schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the performance prediction belongs
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format
	 * @param {String} scheduleId The ID of the schedule the performance prediction belongs to
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations",value:function postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations(businessUnitId,weekId,scheduleId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculations';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Upload daily activity changes to be able to request a performance prediction recalculation
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the performance prediction belongs
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format
	 * @param {String} scheduleId The ID of the schedule the performance prediction belongs to
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl",value:function postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl(businessUnitId,weekId,scheduleId,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekSchedulePerformancepredictionsRecalculationsUploadurl';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/performancepredictions/recalculations/uploadurl','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Start a rescheduling run
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekScheduleReschedule",value:function postWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId,weekId,scheduleId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekScheduleReschedule';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekScheduleReschedule';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekScheduleReschedule';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekScheduleReschedule';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/reschedule','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Starts processing a schedule update
	 * Call after uploading the schedule data to the url supplied by the /update/uploadurl route
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekScheduleUpdate",value:function postWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId,weekId,scheduleId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdate';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdate';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a signed upload URL for updating a schedule
	 * Once the upload is complete, call the /{scheduleId}/update route to start the schedule update process
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} scheduleId The ID of the schedule
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl",value:function postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId,weekId,scheduleId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl';}// verify the required parameter 'scheduleId' is set
if(scheduleId===undefined||scheduleId===null){throw'Missing the required parameter "scheduleId" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/{scheduleId}/update/uploadurl','POST',{'businessUnitId':businessUnitId,'weekId':weekId,'scheduleId':scheduleId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a blank schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedules",value:function postWorkforcemanagementBusinessunitWeekSchedules(businessUnitId,weekId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedules';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedules';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekSchedules';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules','POST',{'businessUnitId':businessUnitId,'weekId':weekId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate a schedule
	 * 
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedulesGenerate",value:function postWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId,weekId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedulesGenerate';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedulesGenerate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekSchedulesGenerate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/generate','POST',{'businessUnitId':businessUnitId,'weekId':weekId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Starts processing a schedule import
	 * Call after uploading the schedule data to the url supplied by the /import/uploadurl route
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body 
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedulesImport",value:function postWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId,weekId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedulesImport';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedulesImport';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekSchedulesImport';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import','POST',{'businessUnitId':businessUnitId,'weekId':weekId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a signed upload URL for importing a schedule
	 * Once the upload is complete, call the /import route to start the schedule import process
	 * @param {String} businessUnitId The ID of the business unit
	 * @param {String} weekId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl",value:function postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId,weekId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl';}// verify the required parameter 'weekId' is set
if(weekId===undefined||weekId===null){throw'Missing the required parameter "weekId" when calling postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekId}/schedules/import/uploadurl','POST',{'businessUnitId':businessUnitId,'weekId':weekId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Copy a short term forecast
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} forecastId The ID of the forecast to copy
	 * @param {Object} body body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes
	 */},{key:"postWorkforcemanagementBusinessunitWeekShorttermforecastCopy",value:function postWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId,weekDateId,forecastId,body,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastCopy';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastCopy';}// verify the required parameter 'forecastId' is set
if(forecastId===undefined||forecastId===null){throw'Missing the required parameter "forecastId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastCopy';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastCopy';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/{forecastId}/copy','POST',{'businessUnitId':businessUnitId,'weekDateId':weekDateId,'forecastId':forecastId},{'forceAsync':opts['forceAsync']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Generate a short term forecast
	 * 
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes
	 */},{key:"postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate",value:function postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId,weekDateId,body,opts){opts=opts||{};// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/generate','POST',{'businessUnitId':businessUnitId,'weekDateId':weekDateId},{'forceAsync':opts['forceAsync']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Starts importing the uploaded short term forecast
	 * Call after uploading the forecast data to the url supplied by the /import/uploadurl route
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekShorttermforecastsImport",value:function postWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId,weekDateId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImport';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImport';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImport';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import','POST',{'businessUnitId':businessUnitId,'weekDateId':weekDateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a signed upload URL for importing a short term forecast
	 * Once the upload is complete, call the /import route to start the short term forecast import process
	 * @param {String} businessUnitId The ID of the business unit to which the forecast belongs
	 * @param {String} weekDateId First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl",value:function postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId,weekDateId,body){// verify the required parameter 'businessUnitId' is set
if(businessUnitId===undefined||businessUnitId===null){throw'Missing the required parameter "businessUnitId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl';}return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits/{businessUnitId}/weeks/{weekDateId}/shorttermforecasts/import/uploadurl','POST',{'businessUnitId':businessUnitId,'weekDateId':weekDateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a new business unit
	 * It may take a minute or two for a new business unit to be available for api operations
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementBusinessunits",value:function postWorkforcemanagementBusinessunits(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/businessunits','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {String} opts.language A language tag (which is sometimes referred to as a locale identifier) to use to localize default activity code names in the ics-formatted calendar (default to en-US)
	 */},{key:"postWorkforcemanagementCalendarUrlIcs",value:function postWorkforcemanagementCalendarUrlIcs(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/calendar/url/ics','POST',{},{'language':opts['language']},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Delete the entries of the historical data imports in the organization
	 * 
	 */},{key:"postWorkforcemanagementHistoricaldataDeletejob",value:function postWorkforcemanagementHistoricaldataDeletejob(){return this.apiClient.callApi('/api/v2/workforcemanagement/historicaldata/deletejob','POST',{},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Trigger validation process for historical import
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementHistoricaldataValidate",value:function postWorkforcemanagementHistoricaldataValidate(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/historicaldata/validate','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get list of time off types configured in integration
	 * 
	 * @param {String} hrisIntegrationId The ID of the HRIS integration for which time off types are queried.
	 */},{key:"postWorkforcemanagementIntegrationsHriTimeofftypesJobs",value:function postWorkforcemanagementIntegrationsHriTimeofftypesJobs(hrisIntegrationId){// verify the required parameter 'hrisIntegrationId' is set
if(hrisIntegrationId===undefined||hrisIntegrationId===null){throw'Missing the required parameter "hrisIntegrationId" when calling postWorkforcemanagementIntegrationsHriTimeofftypesJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/integrations/hris/{hrisIntegrationId}/timeofftypes/jobs','POST',{'hrisIntegrationId':hrisIntegrationId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query published schedules for given given time range for set of users
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitAgentschedulesSearch",value:function postWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitAgentschedulesSearch';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/agentschedules/search','POST',{'managementUnitId':managementUnitId},{'forceAsync':opts['forceAsync'],'forceDownloadService':opts['forceDownloadService']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a historical adherence report
	 * The maximum supported range for historical adherence queries is 31 days, or 7 days with includeExceptions = true
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitHistoricaladherencequery",value:function postWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitHistoricaladherencequery';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/historicaladherencequery','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Move the requested management unit to a new business unit
	 * Returns status 200 if the management unit is already in the requested business unit
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitMove",value:function postWorkforcemanagementManagementunitMove(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitMove';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/move','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query published schedules for given given time range for set of users
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * @deprecated
	 */},{key:"postWorkforcemanagementManagementunitSchedulesSearch",value:function postWorkforcemanagementManagementunitSchedulesSearch(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitSchedulesSearch';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/schedules/search','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a historical shrinkage report
	 * The maximum supported range for historical shrinkage queries is up to 32 days. Historical Shrinkage for a given date range can be queried in two modes - granular and aggregated. To see granular shrinkage information, provide granularity in the request body. 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitShrinkageJobs",value:function postWorkforcemanagementManagementunitShrinkageJobs(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitShrinkageJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/shrinkage/jobs','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a new time off limit object under management unit.
	 * Only one limit object is allowed under management unit, so an attempt to create second object will fail.
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeofflimits",value:function postWorkforcemanagementManagementunitTimeofflimits(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeofflimits';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves time off limit related values based on a given set of filters.
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeofflimitsValuesQuery",value:function postWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeofflimitsValuesQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/values/query','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Creates a new time off plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeoffplans",value:function postWorkforcemanagementManagementunitTimeoffplans(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeoffplans';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffplans','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new time off request
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeoffrequests",value:function postWorkforcemanagementManagementunitTimeoffrequests(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeoffrequests';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves integration statuses for a list of time off requests
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery",value:function postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/integrationstatus/query','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Fetches time off requests matching the conditions specified in the request body
	 * Request body requires one of the following: User ID is specified, statuses == [Pending] or date range to be specified and less than or equal to 33 days.  All other fields are filters
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeoffrequestsQuery",value:function postWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeoffrequestsQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/query','POST',{'managementUnitId':managementUnitId},{'forceDownloadService':opts['forceDownloadService']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves daily waitlist position for a list of time off requests
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery",value:function postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeoffrequests/waitlistpositions/query','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query time off balances for a given user for specified activity code and dates
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {String} userId The ID of the user
	 * @param {Object} body The request body
	 */},{key:"postWorkforcemanagementManagementunitUserTimeoffbalanceJobs",value:function postWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId,userId,body){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitUserTimeoffbalanceJobs';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postWorkforcemanagementManagementunitUserTimeoffbalanceJobs';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementManagementunitUserTimeoffbalanceJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffbalance/jobs','POST',{'managementUnitId':managementUnitId,'userId':userId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query time off balances for dates spanned by a given time off request
	 * 
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} userId The userId to whom the time off request applies.
	 * @param {String} timeOffRequestId The time off request id.
	 */},{key:"postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs",value:function postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId,userId,timeOffRequestId){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs';}// verify the required parameter 'timeOffRequestId' is set
if(timeOffRequestId===undefined||timeOffRequestId===null){throw'Missing the required parameter "timeOffRequestId" when calling postWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/{timeOffRequestId}/timeoffbalance/jobs','POST',{'managementUnitId':managementUnitId,'userId':userId,'timeOffRequestId':timeOffRequestId},{},{},{},null,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Estimates available time off for an agent
	 * 
	 * @param {String} managementUnitId The ID of the management unit
	 * @param {String} userId The id of the user for whom the time off request estimate is requested
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitUserTimeoffrequestsEstimate",value:function postWorkforcemanagementManagementunitUserTimeoffrequestsEstimate(managementUnitId,userId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitUserTimeoffrequestsEstimate';}// verify the required parameter 'userId' is set
if(userId===undefined||userId===null){throw'Missing the required parameter "userId" when calling postWorkforcemanagementManagementunitUserTimeoffrequestsEstimate';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/users/{userId}/timeoffrequests/estimate','POST',{'managementUnitId':managementUnitId,'userId':userId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Matches a shift trade. This route can only be called by the receiving agent
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {String} tradeId The ID of the shift trade to update
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementManagementunitWeekShifttradeMatch",value:function postWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId,weekDateId,tradeId,body){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWeekShifttradeMatch';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementManagementunitWeekShifttradeMatch';}// verify the required parameter 'tradeId' is set
if(tradeId===undefined||tradeId===null){throw'Missing the required parameter "tradeId" when calling postWorkforcemanagementManagementunitWeekShifttradeMatch';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementManagementunitWeekShifttradeMatch';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/{tradeId}/match','POST',{'managementUnitId':managementUnitId,'weekDateId':weekDateId,'tradeId':tradeId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Adds a shift trade
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 */},{key:"postWorkforcemanagementManagementunitWeekShifttrades",value:function postWorkforcemanagementManagementunitWeekShifttrades(managementUnitId,weekDateId,body){// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWeekShifttrades';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementManagementunitWeekShifttrades';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementManagementunitWeekShifttrades';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades','POST',{'managementUnitId':managementUnitId,'weekDateId':weekDateId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Searches for potential shift trade matches for the current agent
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceDownloadService Force the result of this operation to be sent via download service. For testing/app development purposes
	 */},{key:"postWorkforcemanagementManagementunitWeekShifttradesSearch",value:function postWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId,weekDateId,body,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWeekShifttradesSearch';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementManagementunitWeekShifttradesSearch';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementManagementunitWeekShifttradesSearch';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/search','POST',{'managementUnitId':managementUnitId,'weekDateId':weekDateId},{'forceDownloadService':opts['forceDownloadService']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Updates the state of a batch of shift trades
	 * Admin functionality is not supported with "mine".
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} weekDateId The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
	 * @param {Object} body body
	 * @param {Object} opts Optional parameters
	 * @param {Boolean} opts.forceAsync Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes
	 */},{key:"postWorkforcemanagementManagementunitWeekShifttradesStateBulk",value:function postWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId,weekDateId,body,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWeekShifttradesStateBulk';}// verify the required parameter 'weekDateId' is set
if(weekDateId===undefined||weekDateId===null){throw'Missing the required parameter "weekDateId" when calling postWorkforcemanagementManagementunitWeekShifttradesStateBulk';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementManagementunitWeekShifttradesStateBulk';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/weeks/{weekDateId}/shifttrades/state/bulk','POST',{'managementUnitId':managementUnitId,'weekDateId':weekDateId},{'forceAsync':opts['forceAsync']},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a copy of work plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanId The ID of the work plan to create a copy
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitWorkplanCopy",value:function postWorkforcemanagementManagementunitWorkplanCopy(managementUnitId,workPlanId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWorkplanCopy';}// verify the required parameter 'workPlanId' is set
if(workPlanId===undefined||workPlanId===null){throw'Missing the required parameter "workPlanId" when calling postWorkforcemanagementManagementunitWorkplanCopy';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/copy','POST',{'managementUnitId':managementUnitId,'workPlanId':workPlanId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Validate Work Plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanId The ID of the work plan to validate. For new work plan, use the word 'new' for the ID.
	 * @param {Object} opts Optional parameters
	 * @param {Array.<String>} opts.expand 
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitWorkplanValidate",value:function postWorkforcemanagementManagementunitWorkplanValidate(managementUnitId,workPlanId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWorkplanValidate';}// verify the required parameter 'workPlanId' is set
if(workPlanId===undefined||workPlanId===null){throw'Missing the required parameter "workPlanId" when calling postWorkforcemanagementManagementunitWorkplanValidate';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans/{workPlanId}/validate','POST',{'managementUnitId':managementUnitId,'workPlanId':workPlanId},{'expand':this.apiClient.buildCollectionParam(opts['expand'],'multi')},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a copy of work plan rotation
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {String} workPlanRotationId The ID of the work plan rotation to create a copy
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitWorkplanrotationCopy",value:function postWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId,workPlanRotationId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWorkplanrotationCopy';}// verify the required parameter 'workPlanRotationId' is set
if(workPlanRotationId===undefined||workPlanRotationId===null){throw'Missing the required parameter "workPlanRotationId" when calling postWorkforcemanagementManagementunitWorkplanrotationCopy';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations/{workPlanRotationId}/copy','POST',{'managementUnitId':managementUnitId,'workPlanRotationId':workPlanRotationId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new work plan rotation
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitWorkplanrotations",value:function postWorkforcemanagementManagementunitWorkplanrotations(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWorkplanrotations';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplanrotations','POST',{'managementUnitId':managementUnitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a new work plan
	 * 
	 * @param {String} managementUnitId The ID of the management unit, or 'mine' for the management unit of the logged-in user.
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.validationMode Allows to create work plan even if the validation result is invalid
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunitWorkplans",value:function postWorkforcemanagementManagementunitWorkplans(managementUnitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling postWorkforcemanagementManagementunitWorkplans';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/workplans','POST',{'managementUnitId':managementUnitId},{'validationMode':opts['validationMode']},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Add a management unit
	 * It may take a minute or two for a new management unit to be available for api operations
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementManagementunits",value:function postWorkforcemanagementManagementunits(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Mark a list of notifications as read or unread
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementNotificationsUpdate",value:function postWorkforcemanagementNotificationsUpdate(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/notifications/update','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Get published schedule for the current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 * @deprecated
	 */},{key:"postWorkforcemanagementSchedules",value:function postWorkforcemanagementSchedules(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/schedules','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a teams historical adherence report
	 * The maximum supported range for historical adherence queries is 31 days, or 7 days with includeExceptions = true
	 * @param {String} teamId The ID of the team
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTeamAdherenceHistorical",value:function postWorkforcemanagementTeamAdherenceHistorical(teamId,opts){opts=opts||{};// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling postWorkforcemanagementTeamAdherenceHistorical';}return this.apiClient.callApi('/api/v2/workforcemanagement/teams/{teamId}/adherence/historical','POST',{'teamId':teamId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Request a historical shrinkage report
	 * The maximum supported range for historical shrinkage queries is up to 32 days
	 * @param {String} teamId The ID of the team
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTeamShrinkageJobs",value:function postWorkforcemanagementTeamShrinkageJobs(teamId,opts){opts=opts||{};// verify the required parameter 'teamId' is set
if(teamId===undefined||teamId===null){throw'Missing the required parameter "teamId" when calling postWorkforcemanagementTeamShrinkageJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/teams/{teamId}/shrinkage/jobs','POST',{'teamId':teamId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Query time off balances for the current user for specified activity code and dates
	 * 
	 * @param {Object} body The request body
	 */},{key:"postWorkforcemanagementTimeoffbalanceJobs",value:function postWorkforcemanagementTimeoffbalanceJobs(body){// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling postWorkforcemanagementTimeoffbalanceJobs';}return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffbalance/jobs','POST',{},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Queries available time off for the current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTimeofflimitsAvailableQuery",value:function postWorkforcemanagementTimeofflimitsAvailableQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/timeofflimits/available/query','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Create a time off request for the current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTimeoffrequests",value:function postWorkforcemanagementTimeoffrequests(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Estimates available time off for current user
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTimeoffrequestsEstimate",value:function postWorkforcemanagementTimeoffrequestsEstimate(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests/estimate','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Retrieves integration statuses for a list of current user time off requests
	 * 
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"postWorkforcemanagementTimeoffrequestsIntegrationstatusQuery",value:function postWorkforcemanagementTimeoffrequestsIntegrationstatusQuery(opts){opts=opts||{};return this.apiClient.callApi('/api/v2/workforcemanagement/timeoffrequests/integrationstatus/query','POST',{},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Update integrations for agent
	 * 
	 * @param {String} agentId The ID of the agent
	 * @param {Object} body body
	 */},{key:"putWorkforcemanagementAgentIntegrationsHris",value:function putWorkforcemanagementAgentIntegrationsHris(agentId,body){// verify the required parameter 'agentId' is set
if(agentId===undefined||agentId===null){throw'Missing the required parameter "agentId" when calling putWorkforcemanagementAgentIntegrationsHris';}// verify the required parameter 'body' is set
if(body===undefined||body===null){throw'Missing the required parameter "body" when calling putWorkforcemanagementAgentIntegrationsHris';}return this.apiClient.callApi('/api/v2/workforcemanagement/agents/{agentId}/integrations/hris','PUT',{'agentId':agentId},{},{},{},body,['PureCloud OAuth'],['application/json'],['application/json']);}/**
	 * Sets daily values for a date range of time off limit object
	 * Note that only limit daily values can be set through API, allocated and waitlisted values are read-only for time off limit API
	 * @param {String} managementUnitId The ID of the management unit.
	 * @param {String} timeOffLimitId The ID of the time off limit object to set values for
	 * @param {Object} opts Optional parameters
	 * @param {Object} opts.body body
	 */},{key:"putWorkforcemanagementManagementunitTimeofflimitValues",value:function putWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId,timeOffLimitId,opts){opts=opts||{};// verify the required parameter 'managementUnitId' is set
if(managementUnitId===undefined||managementUnitId===null){throw'Missing the required parameter "managementUnitId" when calling putWorkforcemanagementManagementunitTimeofflimitValues';}// verify the required parameter 'timeOffLimitId' is set
if(timeOffLimitId===undefined||timeOffLimitId===null){throw'Missing the required parameter "timeOffLimitId" when calling putWorkforcemanagementManagementunitTimeofflimitValues';}return this.apiClient.callApi('/api/v2/workforcemanagement/managementunits/{managementUnitId}/timeofflimits/{timeOffLimitId}/values','PUT',{'managementUnitId':managementUnitId,'timeOffLimitId':timeOffLimitId},{},{},{},opts['body'],['PureCloud OAuth'],['application/json'],['application/json']);}}]);return WorkforceManagementApi;}();/**
 * A JavaScript library to interface with the PureCloud Platform API.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var platformClient = require('purecloud-platform-client-v2/index'); // See note below*.
 * var xxxSvc = new platformClient.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new platformClient.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['purecloud-platform-client-v2/index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new platformClient.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new platformClient.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module purecloud-platform-client-v2/index
 * @version 185.0.0
 */var platformClient=/*#__PURE__*/_createClass(function platformClient(){_classCallCheck(this,platformClient);/**
		 * The ApiClient constructor.
		 * @property {module:purecloud-platform-client-v2/ApiClient}
		 */this.ApiClient=new ApiClient();/**
		 * The ApiClient class.
		 * @property {module:purecloud-platform-client-v2/ApiClient}
		 */this.ApiClientClass=ApiClient;/**
		 * The AlertingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/AlertingApi}
		 */this.AlertingApi=AlertingApi;/**
		 * The AnalyticsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/AnalyticsApi}
		 */this.AnalyticsApi=AnalyticsApi;/**
		 * The ArchitectApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ArchitectApi}
		 */this.ArchitectApi=ArchitectApi;/**
		 * The AuditApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/AuditApi}
		 */this.AuditApi=AuditApi;/**
		 * The AuthorizationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/AuthorizationApi}
		 */this.AuthorizationApi=AuthorizationApi;/**
		 * The BillingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/BillingApi}
		 */this.BillingApi=BillingApi;/**
		 * The CarrierServicesApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/CarrierServicesApi}
		 */this.CarrierServicesApi=CarrierServicesApi;/**
		 * The ChatApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ChatApi}
		 */this.ChatApi=ChatApi;/**
		 * The CoachingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/CoachingApi}
		 */this.CoachingApi=CoachingApi;/**
		 * The ContentManagementApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ContentManagementApi}
		 */this.ContentManagementApi=ContentManagementApi;/**
		 * The ConversationsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ConversationsApi}
		 */this.ConversationsApi=ConversationsApi;/**
		 * The DataExtensionsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/DataExtensionsApi}
		 */this.DataExtensionsApi=DataExtensionsApi;/**
		 * The DownloadsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/DownloadsApi}
		 */this.DownloadsApi=DownloadsApi;/**
		 * The EmailsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/EmailsApi}
		 */this.EmailsApi=EmailsApi;/**
		 * The EventsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/EventsApi}
		 */this.EventsApi=EventsApi;/**
		 * The ExternalContactsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ExternalContactsApi}
		 */this.ExternalContactsApi=ExternalContactsApi;/**
		 * The FaxApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/FaxApi}
		 */this.FaxApi=FaxApi;/**
		 * The FlowsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/FlowsApi}
		 */this.FlowsApi=FlowsApi;/**
		 * The GamificationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/GamificationApi}
		 */this.GamificationApi=GamificationApi;/**
		 * The GeneralDataProtectionRegulationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/GeneralDataProtectionRegulationApi}
		 */this.GeneralDataProtectionRegulationApi=GeneralDataProtectionRegulationApi;/**
		 * The GeolocationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/GeolocationApi}
		 */this.GeolocationApi=GeolocationApi;/**
		 * The GreetingsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/GreetingsApi}
		 */this.GreetingsApi=GreetingsApi;/**
		 * The GroupsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/GroupsApi}
		 */this.GroupsApi=GroupsApi;/**
		 * The IdentityProviderApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/IdentityProviderApi}
		 */this.IdentityProviderApi=IdentityProviderApi;/**
		 * The InfrastructureAsCodeApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/InfrastructureAsCodeApi}
		 */this.InfrastructureAsCodeApi=InfrastructureAsCodeApi;/**
		 * The IntegrationsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/IntegrationsApi}
		 */this.IntegrationsApi=IntegrationsApi;/**
		 * The JourneyApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/JourneyApi}
		 */this.JourneyApi=JourneyApi;/**
		 * The KnowledgeApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/KnowledgeApi}
		 */this.KnowledgeApi=KnowledgeApi;/**
		 * The LanguageUnderstandingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LanguageUnderstandingApi}
		 */this.LanguageUnderstandingApi=LanguageUnderstandingApi;/**
		 * The LanguagesApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LanguagesApi}
		 */this.LanguagesApi=LanguagesApi;/**
		 * The LearningApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LearningApi}
		 */this.LearningApi=LearningApi;/**
		 * The LicenseApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LicenseApi}
		 */this.LicenseApi=LicenseApi;/**
		 * The LocationsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LocationsApi}
		 */this.LocationsApi=LocationsApi;/**
		 * The LogCaptureApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/LogCaptureApi}
		 */this.LogCaptureApi=LogCaptureApi;/**
		 * The MessagingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/MessagingApi}
		 */this.MessagingApi=MessagingApi;/**
		 * The MobileDevicesApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/MobileDevicesApi}
		 */this.MobileDevicesApi=MobileDevicesApi;/**
		 * The NotificationsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/NotificationsApi}
		 */this.NotificationsApi=NotificationsApi;/**
		 * The OAuthApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/OAuthApi}
		 */this.OAuthApi=OAuthApi;/**
		 * The ObjectsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ObjectsApi}
		 */this.ObjectsApi=ObjectsApi;/**
		 * The OperationalEventsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/OperationalEventsApi}
		 */this.OperationalEventsApi=OperationalEventsApi;/**
		 * The OrganizationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/OrganizationApi}
		 */this.OrganizationApi=OrganizationApi;/**
		 * The OrganizationAuthorizationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/OrganizationAuthorizationApi}
		 */this.OrganizationAuthorizationApi=OrganizationAuthorizationApi;/**
		 * The OutboundApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/OutboundApi}
		 */this.OutboundApi=OutboundApi;/**
		 * The PresenceApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/PresenceApi}
		 */this.PresenceApi=PresenceApi;/**
		 * The ProcessAutomationApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ProcessAutomationApi}
		 */this.ProcessAutomationApi=ProcessAutomationApi;/**
		 * The QualityApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/QualityApi}
		 */this.QualityApi=QualityApi;/**
		 * The RecordingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/RecordingApi}
		 */this.RecordingApi=RecordingApi;/**
		 * The ResponseManagementApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ResponseManagementApi}
		 */this.ResponseManagementApi=ResponseManagementApi;/**
		 * The RoutingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/RoutingApi}
		 */this.RoutingApi=RoutingApi;/**
		 * The SCIMApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/SCIMApi}
		 */this.SCIMApi=SCIMApi;/**
		 * The ScriptsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/ScriptsApi}
		 */this.ScriptsApi=ScriptsApi;/**
		 * The SearchApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/SearchApi}
		 */this.SearchApi=SearchApi;/**
		 * The SettingsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/SettingsApi}
		 */this.SettingsApi=SettingsApi;/**
		 * The SpeechTextAnalyticsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/SpeechTextAnalyticsApi}
		 */this.SpeechTextAnalyticsApi=SpeechTextAnalyticsApi;/**
		 * The StationsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/StationsApi}
		 */this.StationsApi=StationsApi;/**
		 * The SuggestApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/SuggestApi}
		 */this.SuggestApi=SuggestApi;/**
		 * The TaskManagementApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TaskManagementApi}
		 */this.TaskManagementApi=TaskManagementApi;/**
		 * The TeamsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TeamsApi}
		 */this.TeamsApi=TeamsApi;/**
		 * The TelephonyApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TelephonyApi}
		 */this.TelephonyApi=TelephonyApi;/**
		 * The TelephonyProvidersEdgeApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TelephonyProvidersEdgeApi}
		 */this.TelephonyProvidersEdgeApi=TelephonyProvidersEdgeApi;/**
		 * The TextbotsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TextbotsApi}
		 */this.TextbotsApi=TextbotsApi;/**
		 * The TokensApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/TokensApi}
		 */this.TokensApi=TokensApi;/**
		 * The UploadsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/UploadsApi}
		 */this.UploadsApi=UploadsApi;/**
		 * The UsageApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/UsageApi}
		 */this.UsageApi=UsageApi;/**
		 * The UserRecordingsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/UserRecordingsApi}
		 */this.UserRecordingsApi=UserRecordingsApi;/**
		 * The UsersApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/UsersApi}
		 */this.UsersApi=UsersApi;/**
		 * The UtilitiesApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/UtilitiesApi}
		 */this.UtilitiesApi=UtilitiesApi;/**
		 * The VoicemailApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/VoicemailApi}
		 */this.VoicemailApi=VoicemailApi;/**
		 * The WebChatApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/WebChatApi}
		 */this.WebChatApi=WebChatApi;/**
		 * The WebDeploymentsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/WebDeploymentsApi}
		 */this.WebDeploymentsApi=WebDeploymentsApi;/**
		 * The WebMessagingApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/WebMessagingApi}
		 */this.WebMessagingApi=WebMessagingApi;/**
		 * The WidgetsApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/WidgetsApi}
		 */this.WidgetsApi=WidgetsApi;/**
		 * The WorkforceManagementApi service constructor.
		 * @property {module:purecloud-platform-client-v2/api/WorkforceManagementApi}
		 */this.WorkforceManagementApi=WorkforceManagementApi;/**
		 * The PureCloudRegionsHost Object.
		 * @property {module:purecloud-platform-client-v2/MyPureCloudRegionHost}
		 */this.PureCloudRegionHosts=PureCloudRegionHosts;});//export default platformClient;
var index=new platformClient();module.exports=index;
